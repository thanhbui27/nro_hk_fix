package nro.services;

import nro.consts.*;
import nro.models.boss.Boss;
import nro.models.boss.BossFactory;
import nro.models.item.Item;
import nro.models.item.ItemOption;
import nro.models.map.ItemMap;
import nro.models.map.Zone;
import nro.models.mob.Mob;
import nro.models.npc.Npc;
import nro.models.player.Player;
import nro.models.task.Achivement;
import nro.models.task.SideTaskTemplate;
import nro.models.task.SubTaskMain;
import nro.models.task.TaskMain;
import nro.server.Manager;
import nro.server.io.Message;
import nro.utils.Log;
import nro.utils.Util;
import nro.consts.*;

import java.io.DataOutputStream;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.concurrent.TimeUnit;
import java.util.logging.Level;
import java.util.logging.Logger;
import nro.models.boss.BossData;
import nro.models.boss.BossManager;
import nro.models.boss.mapoffline.Boss_Tau77;
import nro.models.boss.mapoffline.Boss_ThanMeo;
import static nro.models.item.ItemTime.TEXT_NHIEM_VU_HANG_NGAY;
import nro.models.npc.NpcFactory;

/**
 * @author üíñ Tr·∫ßn L·∫°i üíñ
 * @copyright üíñ GirlkuN üíñ
 */
public class TaskService {

    /**
     * L√†m c√πng s·ªë ng∆∞·ªùi trong bang
     */
    private static final byte NMEMBER_DO_TASK_TOGETHER = 0;

    private static TaskService i;

    public static TaskService gI() {
        if (i == null) {
            i = new TaskService();
        }
        return i;
    }

    public TaskMain getTaskMainById(Player player, int id) {
        for (TaskMain tm : Manager.TASKS) {
            if (tm.id == id) {
                TaskMain newTaskMain = new TaskMain(tm);
                newTaskMain.detail = transformName(player, newTaskMain.detail);
                for (SubTaskMain stm : newTaskMain.subTasks) {
                    stm.mapId = (short) transformMapId(player, stm.mapId);
                    stm.npcId = (byte) transformNpcId(player, stm.npcId);
                    stm.notify = transformName(player, stm.notify);
                    stm.name = transformName(player, stm.name);
                }
                return newTaskMain;
            }
        }
        return player.playerTask.taskMain;
    }

    //g·ª≠i th√¥ng tin nhi·ªám v·ª• ch√≠nh
    public void sendTaskMain(Player player) {
        Message msg;
        try {
            msg = new Message(40);
            msg.writer().writeShort(player.playerTask.taskMain.id);
//            msg.writer().writeShort(12);
            msg.writer().writeByte(player.playerTask.taskMain.index);
//            msg.writer().writeUTF(player.playerTask.taskMain.name); 
            msg.writer().writeUTF(player.playerTask.taskMain.name + " [" + player.playerTask.taskMain.id + "]");
            msg.writer().writeUTF(player.playerTask.taskMain.detail);
            msg.writer().writeByte(player.playerTask.taskMain.subTasks.size());
            for (SubTaskMain stm : player.playerTask.taskMain.subTasks) {
                msg.writer().writeUTF(stm.name);
                msg.writer().writeByte(stm.npcId);
                msg.writer().writeShort(stm.mapId);
                msg.writer().writeUTF(stm.notify);
            }
            msg.writer().writeShort(player.playerTask.taskMain.subTasks.get(player.playerTask.taskMain.index).count);
            for (SubTaskMain stm : player.playerTask.taskMain.subTasks) {
                msg.writer().writeShort(stm.maxCount);
            }
            player.sendMessage(msg);
            msg.cleanup();
        } catch (Exception e) {
            Log.error(TaskService.class, e);
        }
    }

    //chuy·ªÉn sang task m·ªõi
    public void sendNextTaskMain(Player player) {
        rewardDoneTask(player);
        player.playerTask.taskMain = TaskService.gI().getTaskMainById(player, player.playerTask.taskMain.id + 1);
        sendTaskMain(player);
        Service.getInstance().sendThongBao(player, "Nhi·ªám v·ª• ti·∫øp theo c·ªßa b·∫°n l√† "
                + player.playerTask.taskMain.subTasks.get(player.playerTask.taskMain.index).name);
    }

    //s·ªë l∆∞·ª£ng ƒë√£ ho√†n th√†nh
    public void sendUpdateCountSubTask(Player player) {
        Message msg;
        try {
            msg = new Message(43);
            msg.writer().writeShort(player.playerTask.taskMain.subTasks.get(player.playerTask.taskMain.index).count);
            player.sendMessage(msg);
            msg.cleanup();
        } catch (Exception e) {
        }
    }

    //chuy·ªÉn sub task ti·∫øp theo
    public void sendNextSubTask(Player player) {
        Message msg;
        try {
            msg = new Message(41);
            player.sendMessage(msg);
            msg.cleanup();
        } catch (Exception e) {
        }
    }

    //g·ª≠i th√¥ng tin nhi·ªám v·ª• hi·ªán t·∫°i
    public void sendInfoCurrentTask(Player player) {
        Service.getInstance().sendThongBao(player, "Nhi·ªám v·ª• hi·ªán t·∫°i c·ªßa b·∫°n l√† "
                + player.playerTask.taskMain.subTasks.get(player.playerTask.taskMain.index).name);
    }

    public boolean checkDoneTaskTalkNpc(Player player, Npc npc) {
        switch (npc.tempId) {
            case ConstNpc.QUY_LAO_KAME:
                return (doneTask(player, ConstTask.TASK_11_0)
                        || doneTask(player, ConstTask.TASK_12_0)
                        || doneTask(player, ConstTask.TASK_12_1)
                        || doneTask(player, ConstTask.TASK_13_3)
                        || doneTask(player, ConstTask.TASK_14_2)
                        || doneTask(player, ConstTask.TASK_15_4)
                        || doneTask(player, ConstTask.TASK_16_1)
                        || doneTask(player, ConstTask.TASK_17_4)
                        || doneTask(player, ConstTask.TASK_18_2)
                        || doneTask(player, ConstTask.TASK_20_6)
                        || doneTask(player, ConstTask.TASK_21_3)
                        || doneTask(player, ConstTask.TASK_22_4)
                        || doneTask(player, ConstTask.TASK_23_3)
                        || doneTask(player, ConstTask.TASK_24_2)
                        || doneTask(player, ConstTask.TASK_19_2));
            case ConstNpc.TRUONG_LAO_GURU:
                return player.gender == ConstPlayer.NAMEC && (doneTask(player, ConstTask.TASK_11_0)
                        || doneTask(player, ConstTask.TASK_12_0)
                        || doneTask(player, ConstTask.TASK_12_1)
                        || doneTask(player, ConstTask.TASK_13_3)
                        || doneTask(player, ConstTask.TASK_14_2)
                        || doneTask(player, ConstTask.TASK_15_4)
                        || doneTask(player, ConstTask.TASK_16_1)
                        || doneTask(player, ConstTask.TASK_17_4)
                        || doneTask(player, ConstTask.TASK_18_2)
                        || doneTask(player, ConstTask.TASK_20_6)
                        || doneTask(player, ConstTask.TASK_21_3)
                        || doneTask(player, ConstTask.TASK_22_4)
                        || doneTask(player, ConstTask.TASK_23_3)
                        || doneTask(player, ConstTask.TASK_19_2));
            case ConstNpc.VUA_VEGETA:
                return player.gender == ConstPlayer.XAYDA && (doneTask(player, ConstTask.TASK_11_0)
                        || doneTask(player, ConstTask.TASK_12_0)
                        || doneTask(player, ConstTask.TASK_12_1)
                        || doneTask(player, ConstTask.TASK_13_3)
                        || doneTask(player, ConstTask.TASK_15_4)
                        || doneTask(player, ConstTask.TASK_14_2)
                        || doneTask(player, ConstTask.TASK_16_1)
                        || doneTask(player, ConstTask.TASK_18_2)
                        || doneTask(player, ConstTask.TASK_17_4)
                        || doneTask(player, ConstTask.TASK_20_6)
                        || doneTask(player, ConstTask.TASK_21_3)
                        || doneTask(player, ConstTask.TASK_22_4)
                        || doneTask(player, ConstTask.TASK_23_3)
                        || doneTask(player, ConstTask.TASK_19_2));
            case ConstNpc.ONG_GOHAN:
            case ConstNpc.ONG_MOORI:
            case ConstNpc.ONG_PARAGUS:
                return (doneTask(player, ConstTask.TASK_0_2)
                        || doneTask(player, ConstTask.TASK_0_5)
                        || doneTask(player, ConstTask.TASK_1_1)
                        || doneTask(player, ConstTask.TASK_2_1)
                        || doneTask(player, ConstTask.TASK_3_2)
                        || doneTask(player, ConstTask.TASK_4_3)
                        || doneTask(player, ConstTask.TASK_7_3)
                        || doneTask(player, ConstTask.TASK_7_2)
                        || doneTask(player, ConstTask.TASK_8_2)
                        || doneTask(player, ConstTask.TASK_10_3)
                        || doneTask(player, ConstTask.TASK_11_1)
                        || doneTask(player, ConstTask.TASK_24_0));
            case ConstNpc.BO_MONG:
                return (doneTask(player, ConstTask.TASK_9_0)
                        || doneTask(player, ConstTask.TASK_10_2));
            case ConstNpc.DR_DRIEF:
            case ConstNpc.CARGO:
            case ConstNpc.CUI:
                return (doneTask(player, ConstTask.TASK_6_1)
                        || doneTask(player, ConstTask.TASK_7_2)
                        || player.zone.map.mapId == 19 && doneTask(player, ConstTask.TASK_19_3)
                        || player.zone.map.mapId == 19 && doneTask(player, ConstTask.TASK_20_6)
                        || player.zone.map.mapId == 19 && doneTask(player, ConstTask.TASK_21_4));
            case ConstNpc.BUNMA:
            case ConstNpc.DENDE:
            case ConstNpc.APPULE:
                return doneTask(player, ConstTask.TASK_7_2);
            case ConstNpc.BUNMA_TL:
                return (doneTask(player, ConstTask.TASK_24_3)
                        || doneTask(player, ConstTask.TASK_24_5)
                        || doneTask(player, ConstTask.TASK_25_4)
                        || doneTask(player, ConstTask.TASK_26_4)
                        || doneTask(player, ConstTask.TASK_27_5)
                        || doneTask(player, ConstTask.TASK_28_5)
                        || doneTask(player, ConstTask.TASK_29_5));
            case ConstNpc.CALICK:
                return doneTask(player, ConstTask.TASK_24_1);
            case ConstNpc.THAN_MEO_KARIN:
                if (player.playerTask.taskMain.id == 29) {
                    if (player.nPoint.dameg >= 10000) {
                        return doneTask(player, ConstTask.TASK_29_0);
                    }
                }
                return doneTask(player, ConstTask.TASK_9_3);
        }
        return false;
    }

    //ki·ªÉm tra ho√†n th√†nh nhi·ªám v·ª• gia nh·∫≠p bang h·ªôi
    public void checkDoneTaskJoinClan(Player player) {
//        if (!player.isBoss && !player.isPet) {
//            doneTask(player, ConstTask.TASK_12_0);
//        }
    }

    //ki·ªÉm tra ho√†n th√†nh nhi·ªám v·ª• l·∫•y item t·ª´ r∆∞∆°ng
    public void checkDoneTaskGetItemBox(Player player) {
        if (!player.isBoss && !player.isPet) {
            doneTask(player, ConstTask.TASK_0_3);
        }
    }

    //ki·ªÉm tra ho√†n th√†nh nhi·ªám v·ª• s·ª©c m·∫°nh
    public void checkDoneTaskPower(Player player, long power) {
        if (!player.isBoss && !player.isPet) {
            if (power >= 16000) {
                doneTask(player, ConstTask.TASK_7_0);
            }
            if (power >= 40000) {
                doneTask(player, ConstTask.TASK_8_0);
            }
            if (power >= 200000) {
                doneTask(player, ConstTask.TASK_14_0);
            }
            if (power >= 500000) {
                doneTask(player, ConstTask.TASK_15_0);
            }
            if (power >= 1500000) {
                doneTask(player, ConstTask.TASK_17_0);
            }
            if (power >= 5000000) {
                doneTask(player, ConstTask.TASK_18_0);
            }
            if (power >= 50000000) {
                doneTask(player, ConstTask.TASK_20_0);
            }
            if (power >= 15000000) {
                doneTask(player, ConstTask.TASK_19_0);
            }
        }
    }

    //ki·ªÉm tra ho√†n th√†nh nhi·ªám v·ª• khi player s·ª≠ d·ª•ng ti·ªÅm nƒÉng
    public void checkDoneTaskUseTiemNang(Player player) {
        if (!player.isBoss && !player.isPet) {
            doneTask(player, ConstTask.TASK_3_0);
        }
    }

    //ki·ªÉm tra ho√†n th√†nh nhi·ªám v·ª• khi v√†o map n√†o ƒë√≥
    public void checkDoneTaskGoToMap(Player player, Zone zoneJoin) {
        if (!player.isBoss && !player.isPet && !player.isMiniPet) {
            switch (zoneJoin.map.mapId) {
                case 39:
                case 40:
                case 41:
                    if (player.location.x >= 635) {
                        doneTask(player, ConstTask.TASK_0_0);
                    }
                    break;
                case 21:
                case 22:
                case 23:
                    doneTask(player, ConstTask.TASK_0_1);
                    break;
                case 47:
                    doneTask(player, ConstTask.TASK_8_3);
                    break;
                case 93:
                    doneTask(player, ConstTask.TASK_25_0);
                    break;
                case 104:
                    doneTask(player, ConstTask.TASK_26_0);
                    break;
                case 97:
                    doneTask(player, ConstTask.TASK_27_0);
                    break;
                case 100:
                    doneTask(player, ConstTask.TASK_28_0);
                    break;
                case 103:
                    doneTask(player, ConstTask.TASK_29_2);
                case 114:
                    doneTask(player, ConstTask.TASK_30_0);
                    break;
                case 46:
                    doneTask(player, ConstTask.TASK_9_2);
                    break;
            }
        }
    }

    //ki·ªÉm tra ho√†n th√†nh nhi·ªám v·ª• khi nh·∫∑t item
    public void checkDoneTaskPickItem(Player player, ItemMap item) {
        if (!player.isBoss && !player.isPet && item != null) {
            switch (item.itemTemplate.id) {
                case 73: //ƒë√πi g√†
                    doneTask(player, ConstTask.TASK_2_0);
                    break;
                case 78: //em b√©
                    doneTask(player, ConstTask.TASK_3_1);
                    Service.gI().sendFlagBag(player);
                    break;
                case 20:
                    doneTask(player, ConstTask.TASK_8_1);
                    break;
                case 85:
                    doneTask(player, ConstTask.TASK_14_1);
                    break;
                case 380:
                    doneTask(player, ConstTask.TASK_29_1);
                    break;

            }
        }
    }

//    //ki·ªÉm tra ho√†n th√†nh nhi·ªám v·ª• k·∫øt b·∫°n
    public void checkDoneTaskMakeFriend(Player player, Player friend) {
    }

    //ki·ªÉm tra ho√†n th√†nh nhi·ªám v·ª• khi x√°c nh·∫≠n menu npc n√†o ƒë√≥
    public void checkDoneTaskConfirmMenuNpc(Player player, Npc npc, byte select) {
        if (!player.isBoss && !player.isPet) {
            switch (npc.tempId) {
                case ConstNpc.DAU_THAN:
                    switch (player.iDMark.getIndexMenu()) {
                        case ConstNpc.MAGIC_TREE_NON_UPGRADE_LEFT_PEA:
                        case ConstNpc.MAGIC_TREE_NON_UPGRADE_FULL_PEA:
                            if (select == 0) {
                                doneTask(player, ConstTask.TASK_0_4);
                            }
                    }
                    break;
            }
        }
    }

    public void checkDoneTaskKillPlayer(Player player) {
        doneTask(player, ConstTask.TASK_16_0);
    }

    //ki·ªÉm tra ho√†n th√†nh nhi·ªám v·ª• khi ti√™u di·ªát ƒë∆∞·ª£c boss
    public void checkDoneTaskKillBoss(Player player, Boss boss) {
        if (player != null && !player.isBoss && !player.isPet) {
            switch ((int) boss.id) {
                case BossFactory.TRUNG_UY_TRANG:
                    doneTask(player, ConstTask.TASK_19_1);
                    break;
                case BossFactory.KUKU:
                    doneTask(player, ConstTask.TASK_21_0);
                    break;
                case BossFactory.MAP_DAU_DINH:
                    doneTask(player, ConstTask.TASK_21_1);
                    break;
                case BossFactory.RAMBO:
                    doneTask(player, ConstTask.TASK_21_2);
                    break;
                case BossFactory.SO4:
                    doneTask(player, ConstTask.TASK_22_0);
                    break;
                case BossFactory.SO3:
                    doneTask(player, ConstTask.TASK_22_1);
                    break;
                case BossFactory.SO1:
                    doneTask(player, ConstTask.TASK_22_2);
                    break;
                case BossFactory.TIEU_DOI_TRUONG:
                    doneTask(player, ConstTask.TASK_22_3);
                    break;
                case BossFactory.FIDE_DAI_CA_1:
                    doneTask(player, ConstTask.TASK_23_0);
                    break;
                case BossFactory.FIDE_DAI_CA_2:
                    doneTask(player, ConstTask.TASK_23_1);
                    break;
                case BossFactory.FIDE_DAI_CA_3:
                    doneTask(player, ConstTask.TASK_23_2); //
                    break;
                case BossFactory.ANDROID_19:
                    doneTask(player, ConstTask.TASK_25_1);
                    break;
                case BossFactory.ANDROID_20:
                    doneTask(player, ConstTask.TASK_25_2);
                    break;
                case BossFactory.ANDROID_15:
                    doneTask(player, ConstTask.TASK_26_1);
                    break;
                case BossFactory.ANDROID_14:
                    doneTask(player, ConstTask.TASK_26_2);
                    break;
                case BossFactory.ANDROID_13:
                    doneTask(player, ConstTask.TASK_26_3);
                    break;
                case BossFactory.POC:
                    doneTask(player, ConstTask.TASK_27_2);
                    break;
                case BossFactory.PIC:
                    doneTask(player, ConstTask.TASK_27_1);
                    break;
                case BossFactory.KINGKONG:
                    doneTask(player, ConstTask.TASK_27_3);
                    break;
                case BossFactory.XEN_BO_HUNG_1:
                    doneTask(player, ConstTask.TASK_28_1);
                    break;
                case BossFactory.XEN_BO_HUNG_2:
                    doneTask(player, ConstTask.TASK_28_2);
                    break;
                case BossFactory.XEN_BO_HUNG_HOAN_THIEN:
                    doneTask(player, ConstTask.TASK_28_3);
                    break;
                case BossFactory.XEN_CON:
                    doneTask(player, ConstTask.TASK_29_3);
                    break;
                case BossFactory.SIEU_BO_HUNG:
                    doneTask(player, ConstTask.TASK_29_4);
                    break;
                case BossFactory.DRABULA_TANG1:
                    doneTask(player, ConstTask.TASK_30_1);
                    break;
                case BossFactory.BUIBUI_TANG2:
                    doneTask(player, ConstTask.TASK_30_2);
                    break;
                case BossFactory.BUIBUI_TANG3:
                    doneTask(player, ConstTask.TASK_30_3);
                    break;
                case BossFactory.YACON_TANG4:
                    doneTask(player, ConstTask.TASK_30_4);
                    break;
                case BossFactory.DRABULA_TANG5:
                    doneTask(player, ConstTask.TASK_30_5);
                    break;
                case BossFactory.MABU_MAP:
                    doneTask(player, ConstTask.TASK_30_6);
                    break;
            }
        }
    }

    //ki·ªÉm tra ho√†n th√†nh nhi·ªám v·ª• khi gi·∫øt ƒë∆∞·ª£c qu√°i
    public void checkDoneTaskKillMob(Player player, Mob mob) {
        if (!player.isBoss && !player.isPet) {
            switch (mob.tempId) {
                case ConstMob.MOC_NHAN:
                    doneTask(player, ConstTask.TASK_1_0);
                    break;
                case ConstMob.KHUNG_LONG_ME:
                    doneTask(player, ConstTask.TASK_4_0);
                    break;
                case ConstMob.LON_LOI_ME:
                    doneTask(player, ConstTask.TASK_4_1);
                    break;
                case ConstMob.QUY_DAT_ME:
                    doneTask(player, ConstTask.TASK_4_2);
                    break;
                case ConstMob.THAN_LAN_BAY:
                case ConstMob.PHI_LONG:
                case ConstMob.QUY_BAY:
                    doneTask(player, ConstTask.TASK_7_1);
                    break;

                case ConstMob.HEO_RUNG:
                case ConstMob.HEO_DA_XANH:
                case ConstMob.HEO_XAYDA:
                    if (player.clan != null) {
                        List<Player> list = new ArrayList<>();
                        List<Player> playersMap = player.zone.getPlayers();
                        for (Player pl : playersMap) {
                            if (pl != null && pl.clan != null && pl.clan.equals(player.clan)) {
                                list.add(pl);
                            }
                        }
                        if (list.size() >= NMEMBER_DO_TASK_TOGETHER) {
                            for (Player pl : list) {
                                switch (mob.tempId) {
                                    case ConstMob.HEO_RUNG:
                                        doneTask(pl, ConstTask.TASK_13_0);
                                        break;
                                    case ConstMob.HEO_DA_XANH:
                                        doneTask(pl, ConstTask.TASK_13_1);
                                        break;
                                    case ConstMob.HEO_XAYDA:
                                        doneTask(pl, ConstTask.TASK_13_2);
                                        break;
                                }
                            }
                        }
                    }
                    break;
                case ConstMob.BULON:
                case ConstMob.UKULELE:
                case ConstMob.QUY_MAP:
                    if (player.clan != null) {
                        List<Player> list = new ArrayList<>();
                        List<Player> playersMap = player.zone.getPlayers();
                        for (Player pl : playersMap) {
                            if (pl != null && pl.clan != null && pl.clan.equals(player.clan)) {
                                list.add(pl);
                            }
                        }
                        if (list.size() >= NMEMBER_DO_TASK_TOGETHER) {
                            for (Player pl : list) {
                                switch (mob.tempId) {
                                    case ConstMob.BULON:
                                        doneTask(pl, ConstTask.TASK_15_1);
                                        break;
                                    case ConstMob.UKULELE:
                                        doneTask(pl, ConstTask.TASK_15_2);
                                        break;
                                    case ConstMob.QUY_MAP:
                                        doneTask(pl, ConstTask.TASK_15_3);
                                        break;
                                }
                            }
                        }
                    }
                    break;
                case ConstMob.TAMBOURINE:
                    doneTask(player, ConstTask.TASK_17_2);
                    break;
                case ConstMob.DRUM:
                    doneTask(player, ConstTask.TASK_17_3);
                    break;
                case ConstMob.AKKUMAN:
                    doneTask(player, ConstTask.TASK_17_1);
                    break;
                case ConstMob.NAPPA:
                    doneTask(player, ConstTask.TASK_20_1);
                    break;
                case ConstMob.SOLDIER:
                    doneTask(player, ConstTask.TASK_20_2);
                    break;
                case ConstMob.APPULE:
                    doneTask(player, ConstTask.TASK_20_3);
                    break;
                case ConstMob.RASPBERRY:
                    doneTask(player, ConstTask.TASK_20_4);
                    break;
                case ConstMob.THAN_LAN_XANH:
                    doneTask(player, ConstTask.TASK_20_5);
                    break;
                case ConstMob.XEN_CON_CAP_1:
                case ConstMob.XEN_CON_CAP_3:
                case ConstMob.XEN_CON_CAP_5:
                case ConstMob.XEN_CON_CAP_8:
                    if (player.clan != null) {
                        List<Player> list = new ArrayList<>();
                        List<Player> playersMap = player.zone.getPlayers();
                        for (Player pl : playersMap) {
                            if (pl != null && pl.clan != null && pl.clan.equals(player.clan)) {
                                list.add(pl);
                            }
                        }
                        if (list.size() >= NMEMBER_DO_TASK_TOGETHER) {
                            for (Player pl : list) {
                                switch (mob.tempId) {
                                    case ConstMob.XEN_CON_CAP_1:
                                        doneTask(player, ConstTask.TASK_24_4);
                                        break;
                                    case ConstMob.XEN_CON_CAP_3:
                                        doneTask(player, ConstTask.TASK_25_3);
                                        break;
                                    case ConstMob.XEN_CON_CAP_5:
                                        doneTask(player, ConstTask.TASK_27_4);
                                        break;
                                    case ConstMob.XEN_CON_CAP_8:
                                        doneTask(player, ConstTask.TASK_28_4);
                                        break;
                                }
                            }
                        }
                    }
            }
        }
    }

    //xong nhi·ªám v·ª• n√†o ƒë√≥
    public boolean doneTask(Player player, int idTaskCustom) {
        if (TaskService.gI().isCurrentTask(player, idTaskCustom)) {
            this.addDoneSubTask(player, 1);
            switch (idTaskCustom) {
                //--------------------------------------------------------------
                case ConstTask.TASK_0_0:
                    NpcService.gI().createTutorial(player, -1, transformName(player, "L√†m t·ªët l·∫Øm..\n"
                            + "B√¢y gi·ªù b·∫°n h√£y v√†o nh√† √¥ng %2 b√™n ph·∫£i ƒë·ªÉ nh·∫≠n nhi·ªám v·ª• m·ªõi nh√©"));
                    break;
                case ConstTask.TASK_0_1:
                    NpcService.gI().createTutorial(player, -1, transformName(player, "√îng %2 ƒëang ƒë·ª©ng ƒë·ª£i k√¨a\n"
                            + "H√£y nh·∫•n 2 l·∫ßn v√†o ƒë·ªÉ n√≥i chuy·ªán"));
                    break;
                case ConstTask.TASK_0_2:
                    npcSay(player, ConstTask.NPC_NHA,
                            "Con v·ª´a ƒëi ƒë√¢u v·ªÅ ƒë√≥?\n"
                            + "Con h√£y ƒë·∫øn r∆∞∆°ng ƒë·ªì ƒë·ªÉ l·∫•y raƒëa..\n"
                            + "..sau ƒë√≥ thu ho·∫°ch h·∫øt ƒë·∫≠u tr√™n c√¢y ƒë·∫≠u th·∫ßn ƒë·∫±ng kia!");
                    break;
                case ConstTask.TASK_0_3:
                    break;
                case ConstTask.TASK_0_4:
                    break;
                case ConstTask.TASK_0_5:
                    npcSay(player, ConstTask.NPC_NHA,
                            "T·ªët l·∫Øm, raƒëa s·∫Ω gi√∫p con th·∫•y ƒë∆∞·ª£c l∆∞·ª£ng m√°u v√† th·ªÉ l·ª±c ·ªü b√™n g√≥c tr√°i\n"
                            + "B√¢y gi·ªù con h√£y ƒëi luy·ªán t·∫≠p\n"
                            + "Con h√£y ra %1, ·ªü ƒë√≥ c√≥ nh·ªØng con m·ªôc nh√¢n cho con luy·ªán t·∫≠p d√≥\n"
                            + "H√£y ƒë·ªën ng√£ 5 con m·ªôc nh√¢n cho √¥ng");
                    break;
                case ConstTask.TASK_1_0:
                    if (isCurrentTask(player, idTaskCustom)) {
                        Service.gI().sendThongBao(player, "B·∫°n ƒë√°nh ƒë∆∞·ª£c "
                                + player.playerTask.taskMain.subTasks.get(player.playerTask.taskMain.index).count + "/"
                                + player.playerTask.taskMain.subTasks.get(player.playerTask.taskMain.index).maxCount + " m·ªôc nh√¢n");
                    } else {
                        if (player.gender == 0) {
                            Service.gI().sendThongBao(player, "Ch√∫c m·ª´ng b·∫°n ƒë√£ ho√†n th√†nh nhi·ªám\nv·ª•. N√†o, b√¢y gi·ªù b·∫°n\n    c√≥ th·ªÉ g·∫∑p √¥ng\nG√¥han ƒë·ªÉ b√°o c√°o r·ªìi!");
                        } else if (player.gender == 1) {
                            Service.gI().sendThongBao(player, "Ch√∫c m·ª´ng b·∫°n ƒë√£ ho√†n th√†nh nhi·ªám\nv·ª•. N√†o, b√¢y gi·ªù b·∫°n\n    c√≥ th·ªÉ g·∫∑p √¥ng\nMoori ƒë·ªÉ b√°o c√°o r·ªìi!");
                        } else {
                            Service.gI().sendThongBao(player, "Ch√∫c m·ª´ng b·∫°n ƒë√£ ho√†n th√†nh nhi·ªám\nv·ª•. N√†o, b√¢y gi·ªù b·∫°n\n    c√≥ th·ªÉ g·∫∑p √¥ng\nParagus ƒë·ªÉ b√°o c√°o r·ªìi!");
                        }
                    }
                    break;
                case ConstTask.TASK_1_1:
                    npcSay(player, ConstTask.NPC_NHA,
                            "Th·ªÉ l·ª±c c·ªßa con c≈©ng kh√° t·ªët\n"
                            + "Con √†, d·∫°o g·∫ßn ƒë√¢y d√¢n l√†ng c·ªßa ch√∫ng ta g·∫∑p ph·∫£i v√†i chuy·ªán\n"
                            + "B√™n c·∫°nh l√†ng ta ƒë·ªôt nhi√™n xu·∫•t hi·ªán l≈© qu√°i v·∫≠t\n"
                            + "N√≥ t√†n s√°t d√¢n l√†ng v√† ph√° ho·∫°i n√¥ng s·∫£n l√†ng ta\n"
                            + "Con h√£y t√¨m ƒë√°nh ch√∫ng v√† ƒëem v·ªÅ ƒë√¢y 10 c√°i ƒë√πi g√†, 2 √¥ng ch√°u m√¨nh s·∫Ω ƒë·ªÉ d√†nh ƒÉn d·∫ßn\n"
                            + "ƒê√¢y l√† t·∫•m b·∫£n ƒë·ªì c·ªßa v√πng n√†y, con h√£y xem ƒë·ªÉ t√¨m ƒë·∫øn %3\n"
                            + "Con c√≥ th·ªÉ s·ª≠ d·ª•ng ƒë·∫≠u th·∫ßn khi h·∫øt HP ho·∫∑c KI, b·∫±ng c√°ch nh·∫•n v√†o n√∫t c√≥ h√¨nh tr√°i tim "
                            + "b√™n g√≥c ph·∫£i d∆∞·ªõi m√†n h√¨nh\n"
                            + "Nhanh l√™n, √¥ng ƒë√≥i l·∫Øm r·ªìi");
                    break;
                //--------------------------------------------------------------
                case ConstTask.TASK_2_0:
                    if (isCurrentTask(player, idTaskCustom)) {
                        Service.gI().sendThongBao(player, "B·∫°n thu th·∫≠p ƒë∆∞·ª£c "
                                + player.playerTask.taskMain.subTasks.get(player.playerTask.taskMain.index).count + "/"
                                + player.playerTask.taskMain.subTasks.get(player.playerTask.taskMain.index).maxCount + " ƒë√πi g√†");
                    } else {
                        if (player.gender == 0) {
                            Service.gI().sendThongBao(player, "Ch√∫c m·ª´ng b·∫°n ƒë√£ ho√†n th√†nh nhi·ªám\nv·ª•. N√†o, b√¢y gi·ªù b·∫°n\n    c√≥ th·ªÉ g·∫∑p √¥ng\nG√¥han ƒë·ªÉ b√°o c√°o r·ªìi!");
                        } else if (player.gender == 1) {
                            Service.gI().sendThongBao(player, "Ch√∫c m·ª´ng b·∫°n ƒë√£ ho√†n th√†nh nhi·ªám\nv·ª•. N√†o, b√¢y gi·ªù b·∫°n\n    c√≥ th·ªÉ g·∫∑p √¥ng\nMoori ƒë·ªÉ b√°o c√°o r·ªìi!");
                        } else {
                            Service.gI().sendThongBao(player, "Ch√∫c m·ª´ng b·∫°n ƒë√£ ho√†n th√†nh nhi·ªám\nv·ª•. N√†o, b√¢y gi·ªù b·∫°n\n    c√≥ th·ªÉ g·∫∑p √¥ng\nParagus ƒë·ªÉ b√°o c√°o r·ªìi!");
                        }
                    }
                    break;
                case ConstTask.TASK_2_1:
                    try {
                    InventoryService.gI().subQuantityItemsBag(player, InventoryService.gI().findItemBagByTemp(player, 73), 10);
                } catch (Exception ex) {
                }
                InventoryService.gI().sendItemBags(player);
                Service.gI().dropItemMapForMe(player, player.zone.getItemMapByTempId(74));
                npcSay(player, ConstTask.NPC_NHA,
                        "T·ªët l·∫Øm, ƒë√πi g√† ƒë√¢y r·ªìi, haha. √îng s·∫Ω n∆∞·ªõng t·∫°i ƒë·ªëng l·ª≠a g·∫ßn kia con c√≥ th·ªÉ ƒÉn b·∫•t c·ª© l√∫c n√†o n·∫øu mu·ªën\n"
                        + "√Ä ch√°u n√†y, v·ª´a n√£y √¥ng c√≥ nghe th·∫•y 1 ti·∫øng ƒë·ªông l·ªõn, h√¨nh nh∆∞ c√≥ 1 v·∫≠t th·ªÉ r∆°i t·∫°i %5, con h√£y ƒë·∫øn ki·ªÉm tra xem\n"
                        + "Con c≈©ng c√≥ th·ªÉ d√πng ti·ªÅm nƒÉng b·∫£n th√¢n ƒë·ªÉ n√¢ng HP, KI ho·∫∑c s·ª©c ƒë√°nh");
                break;
                //--------------------------------------------------------------
                case ConstTask.TASK_3_0:
                    break;
                case ConstTask.TASK_3_1:

                    Service.gI().sendThongBao(player, "H√£y b·∫ø c·∫≠u b√© v·ªÅ\nnh√†!");

                    break;
                case ConstTask.TASK_3_2:
                    try {
                    InventoryService.gI().subQuantityItemsBag(player, InventoryService.gI().findItemBagByTemp(player, 78), 1);
                } catch (Exception ex) {
                }
                InventoryService.gI().sendItemBags(player);
                Service.gI().sendFlagBag(player);
                npcSay(player, ConstTask.NPC_NHA,
                        "C√≥ em b√© trong phi thuy·ªÅn r∆°i xu·ªëng √†, √¥ng c·ª© t∆∞·ªüng l√† sao bƒÉng ch·ª©\n"
                        + "√îng s·∫Ω ƒë·∫∑t t√™n cho em n√≥ l√† Goku, t·ª´ gi·ªù n√≥ s·∫Ω l√† th√†nh vi√™n trong gia ƒë√¨nh ta\n"
                        + "N√£y √¥ng m·ªõi nh·∫≠n ƒë∆∞·ª£c tin c√≥ b·∫ßy m√£nh th√∫ xu·∫•t hi·ªán t·∫°i Tr·∫°m phi thuy·ªÅn\n"
                        + "B·ªçn ch√∫ng v·ª´a ƒë·ªï b·ªô xu·ªëng tr√°i ƒë·∫•t ƒë·ªÉ tr·∫£ th√π vi·ªác con s√°t h·∫°i con ch√∫ng\n"
                        + "Con h√£y ƒëi ti√™u di·ªát ch√∫ng ƒë·ªÉ gi√∫p d√¢n l√†ng t·∫°i ƒë√≥ lu√¥n nh√©");
                break;
                //--------------------------------------------------------------
                case ConstTask.TASK_4_0:
                    if (isCurrentTask(player, idTaskCustom)) {
                        Service.gI().sendThongBao(player, "B·∫°n ƒë√°nh ƒë∆∞·ª£c "
                                + player.playerTask.taskMain.subTasks.get(player.playerTask.taskMain.index).count + "/"
                                + player.playerTask.taskMain.subTasks.get(player.playerTask.taskMain.index).maxCount
                                + transformName(player, " kh·ªßng long m·∫π"));
                    } else {
                        Service.gI().sendThongBao(player, "Ti·∫øp theo l√† l·ª£n l√≤i m·∫π");
                    }
                    break;
                case ConstTask.TASK_4_1:
                    if (isCurrentTask(player, idTaskCustom)) {
                        Service.gI().sendThongBao(player, "B·∫°n ƒë√°nh ƒë∆∞·ª£c "
                                + player.playerTask.taskMain.subTasks.get(player.playerTask.taskMain.index).count + "/"
                                + player.playerTask.taskMain.subTasks.get(player.playerTask.taskMain.index).maxCount
                                + transformName(player, " l·ª£n l√≤i m·∫π"));
                    } else {
                        Service.gI().sendThongBao(player, "Ti·∫øp theo l√† qu·ª∑ ƒë·∫•t m·∫π");
                    }
                    break;
                case ConstTask.TASK_4_2:
                    if (isCurrentTask(player, idTaskCustom)) {
                        Service.gI().sendThongBao(player, "B·∫°n ƒë√°nh ƒë∆∞·ª£c "
                                + player.playerTask.taskMain.subTasks.get(player.playerTask.taskMain.index).count + "/"
                                + player.playerTask.taskMain.subTasks.get(player.playerTask.taskMain.index).maxCount
                                + transformName(player, " qu·ª∑ ƒë·∫•t m·∫π"));
                    } else {
                        if (player.gender == 0) {
                            Service.gI().sendThongBao(player, "Xong vi·ªác r·ªìi, v·ªÅ b√°o\n c√°o v·ªõi √¥ng G√¥han n√†o!");
                        } else if (player.gender == 1) {
                            Service.gI().sendThongBao(player, "Xong vi·ªác r·ªìi, v·ªÅ b√°o\n c√°o v·ªõi √¥ng Moori n√†o!");
                        } else {
                            Service.gI().sendThongBao(player, "Xong vi·ªác r·ªìi, v·ªÅ b√°o\n c√°o v·ªõi √¥ng Paragus n√†o!");
                        }
                    }
                    break;
                case ConstTask.TASK_4_3:
                    npcSay(player, ConstTask.NPC_NHA,
                            "√îng r·∫•t t·ª± h√†o v·ªÅ con\n"
                            + "√îng cho con cu·ªën b√≠ k√≠p n√†y ƒë·ªÉ n√¢ng cao v√µ h·ªçc\n"
                            + "H√£y d√πng s·ª©c m·∫°nh c·ªßa m√¨nh tr·ª´ gian di·ªát √°c b·∫£o v·ªá d√¢n l√†nh con nh√©\n"
                            + "B√¢y gi·ªù con h√£y ƒëi t·∫≠p luy·ªán ƒëi, khi n√†o m·∫°nh h∆°n th√¨ quay v·ªÅ ƒë√¢y √¥ng giao cho nhi·ªám v·ª• m·ªõi\n"
                            + "ƒêi ƒëi..");
                    break;
                //--------------------------------------------------------------
                case ConstTask.TASK_7_0:
                    break;
                case ConstTask.TASK_7_1:
                    if (isCurrentTask(player, idTaskCustom)) {
                        Service.gI().sendThongBao(player, "B·∫°n ƒë√°nh ƒë∆∞·ª£c "
                                + player.playerTask.taskMain.subTasks.get(player.playerTask.taskMain.index).count + "/"
                                + player.playerTask.taskMain.subTasks.get(player.playerTask.taskMain.index).maxCount
                                + transformName(player, " %9"));
                    } else {
                        if (player.gender == 0) {
                            Service.gI().sendThongBao(player, "B·∫°n v·ª´a gi·∫£i c·ª©u ƒë∆∞·ª£c\nBunma h√£y v·ªÅ L√†ng Aru v√† n√≥i\nchuy·ªán v·ªõi Bunma");
                        } else if (player.gender == 1) {
                            Service.gI().sendThongBao(player, "B·∫°n v·ª´a gi·∫£i c·ª©u ƒë∆∞·ª£c\nDende h√£y v·ªÅ L√†ng Mori v√† n√≥i\nchuy·ªán v·ªõi Dende");
                        } else {
                            Service.gI().sendThongBao(player, "B·∫°n v·ª´a gi·∫£i c·ª©u ƒë∆∞·ª£c\nAppule h√£y v·ªÅ L√†ng Kakarot v√† n√≥i\nchuy·ªán v·ªõi Appule");
                        }
                    }
                    break;
                case ConstTask.TASK_7_2:
                    npcSay(player, ConstTask.NPC_SHOP_LANG,
                            "C·∫£m ∆°n ng∆∞∆°i ƒë√£ c·ª©u ta. Ta s·∫Ω s·∫µn s√†ng ph·ª•c v·ª• n·∫øu ng∆∞∆°i c·∫ßn mua v·∫≠t d·ª•ng");
                    if (player.gender == 0) {
                        Service.gI().sendThongBao(player, "Xong vi·ªác r·ªìi, v·ªÅ b√°o\n c√°o v·ªõi √¥ng G√¥han n√†o!");
                    } else if (player.gender == 1) {
                        Service.gI().sendThongBao(player, "Xong vi·ªác r·ªìi, v·ªÅ b√°o\n c√°o v·ªõi √¥ng Moori n√†o!");
                    } else {
                        Service.gI().sendThongBao(player, "Xong vi·ªác r·ªìi, v·ªÅ b√°o\n c√°o v·ªõi √¥ng Paragus n√†o!");
                    }
                    break;
                case ConstTask.TASK_7_3:
                    npcSay(player, ConstTask.NPC_NHA,
                            "T·ªët l·∫Øm, con l√†m ta b·∫•t ng·ªù ƒë·∫•y. B√¢y gi·ªù h√£y ƒëi l·∫•y l·∫°i ng·ªçc ƒëem v·ªÅ ƒë√¢y cho ta");
                    break;
                //--------------------------------------------------------------------
                case ConstTask.TASK_8_0:
                    break;
                case ConstTask.TASK_8_1:
                    Service.gI().sendThongBao(player, "B·∫°n ƒë√£ t√¨m th·∫•y ng·ªçc r·ªìng 7 sao r·ªìi, h√£y ch·∫°m nhanh 2 l·∫ßn v√†o ƒë·ªëi t∆∞·ª£ng ƒë·ªÉ l·∫•y");
                    if (player.gender == 0) {
                        Service.gI().sendThongBao(player, "T√¨m th·∫•y vi√™n ng·ªçc r·ªìng 7 sao r·ªìi, ƒëem v·ªÅ cho √¥ng G√¥Han n√†o!");
                    } else if (player.gender == 1) {
                        Service.gI().sendThongBao(player, "T√¨m th·∫•y vi√™n ng·ªçc r·ªìng 7 sao r·ªìi, ƒëem v·ªÅ cho √¥ng Moori n√†o!");
                    } else {
                        Service.gI().sendThongBao(player, "T√¨m th·∫•y vi√™n ng·ªçc r·ªìng 7 sao r·ªìi, ƒëem v·ªÅ cho √¥ng Paragus n√†o!");
                    }
                    break;
                case ConstTask.TASK_8_2:
                    npcSay(player, ConstTask.NPC_NHA,
                            "T·ªët l·∫Øm, con l√†m ta b·∫•t ng·ªù ƒë·∫•y. B√¢y gi·ªù h√£y ƒëi ƒë·∫øn th√°p Karin");
                    break;
                case ConstTask.TASK_8_3:
                    break;
                //-----------------------------------------------------------------------
                case ConstTask.TASK_9_0:
                    npcSay(player, ConstNpc.BO_MONG, "H·∫Øn s·∫Øp ƒë·∫øn ƒë√¢y, h√£y gi√∫p ta ti√™u di·ªát h·∫Øn\nH√£y gi√∫p ta ti√™u di·ªát h·∫Øn");
                    Service.getInstance().sendThongBao(player, "H√¨nh nh∆∞ c√≥ ng∆∞·ªùi ƒëang t·ªõi ƒë√¢y");
                     Service.getInstance().callTau77(player);
                    break;
                case ConstTask.TASK_9_2:
                    Service.getInstance().sendThongBao(player, "H√£y n√≥i chuy·ªán v·ªõi Th·∫ßn M√®o Karin");
                    break;
                case ConstTask.TASK_9_3:
                    npcSay(player, ConstNpc.THAN_MEO_KARIN, "C√≥ ph·∫£i ng∆∞∆°i v·ª´a chi·∫øn ƒë·∫•u v·ªõi T√†u P·∫£y P·∫£y kh√¥ng?\n"
                            + "Ta tuy m√π nh∆∞ng c√≥ th·ªÉ ƒë·ªçc ƒë∆∞·ª£c √Ω nghƒ© c·ªßa ng∆∞∆°i\n"
                            + "Ng∆∞∆°i ch∆∞a ph·∫£i l√† ƒë·ªëi th·ªß c·ªßa h·∫Øn ƒë√¢u\n"
                            + "T√¨m ta l√† ƒë√∫ng r·ªìi, ƒë·ªÉ ta d·∫°y ng∆∞∆°i v√†i chi√™u, nh∆∞ng ph·∫£i chƒÉm ch·ªâ m·ªõi h·ªçc ƒë∆∞·ª£c ƒë·∫•y nh√©\n"
                            + "Ng∆∞∆°i s·∫µn s√†ng ch∆∞a");
                    break;
                case ConstTask.TASK_10_2:
                    npcSay(player, ConstNpc.BO_MONG, "C√°m ∆°n ƒë√£ gi√∫p ch√∫ng t√¥i. Xin h√£y nh·∫≠n vi√™n ng·ªçc r·ªìng 6 sao n√†y nh∆∞ m√≥n qu√† c√°m ∆°n");
                    Item ngocrong6sao = ItemService.gI().createNewItem((short) 19);
                    InventoryService.gI().addItemBag(player, ngocrong6sao, 9999);
                    Service.getInstance().sendThongBao(player, "B·∫°n v·ª´a nh·∫≠n ƒë∆∞·ª£c Ng·ªçc R·ªìng 6 sao");
                    if (player.gender == 0) {
                        Service.getInstance().sendThongBao(player, "Vi√™n ng·ªçc r·ªìng 6 sao ƒë√¢y r·ªìi, ƒëem v·ªÅ cho √¥ng G√¥han n√†o!");
                    } else if (player.gender == 1) {
                        Service.getInstance().sendThongBao(player, "Vi√™n ng·ªçc r·ªìng 6 sao ƒë√¢y r·ªìi, ƒëem v·ªÅ cho √¥ng Moori n√†o!");
                    } else {
                        Service.getInstance().sendThongBao(player, "Vi√™n ng·ªçc r·ªìng 6 sao ƒë√¢y r·ªìi, ƒëem v·ªÅ cho √¥ng Paragus n√†o!");
                    }
                    break;
                case ConstTask.TASK_10_3:
                    npcSay(player, ConstTask.NPC_NHA, "Ta th·∫≠t s·ª± h√£nh di·ªán v·ªÅ con. Gi·ªù ta kh√¥ng c√≤n g√¨ ƒë·ªÉ d·∫°y cho con, nh∆∞ng c√≥ ng∆∞·ªùi c√≤n gi·ªèi h∆°n ta\n"
                            + "ƒê√≥ l√† s∆∞ ph·ª• c·ªßa ta " + (player.gender == ConstPlayer.TRAI_DAT ? "Quy L√£o Kame" : (player.gender == ConstPlayer.NAMEC ? "Tr∆∞·ªüng l√£o Guru" : "Vua Vegeta")) + ", ng√†i r·∫•t th√≠ch ƒë·ªçc truy·ªán ƒê√¥r√™mon, con h√£y ƒëem t·ªõi cho ng√†i\n"
                            + "Nh·∫•t ƒë·ªãnh ng√†i s·∫Ω thu nh·∫≠n con l√†m ƒë·ªá t·ª≠, con r√°ng h·ªçc th√†nh t√†i nh√©");
                    break;
                //-----------------------------------------------------------------------
                case ConstTask.TASK_11_0:
                    npcSay(player, ConstTask.NPC_QUY_LAO,
                            "Ta kh√¥ng nh·∫≠n ƒë·ªá t·ª≠ ƒë√¢u. ·ªí con t·∫∑ng ta truy·ªán Doremon h·∫£, th√¥i ƒë∆∞·ª£c nh∆∞ng con ph·∫£i c·ªë g·∫Øng luy·ªán t·∫≠p ƒë√≥ nh√©. H√£y gia nh·∫≠p m·ªôt bang h·ªôi ƒë·ªÉ luy·ªán t·∫≠p, sau ƒë√≥ quay l·∫°i ƒë√¢y g·∫∑p ta");
                    break;
                case ConstTask.TASK_11_1:
                    break;
                //---------------------------------------------------------------------------
                case ConstTask.TASK_12_0:
                    break;
                case ConstTask.TASK_12_1:
                    npcSay(player, ConstTask.NPC_QUY_LAO,
                            "Con h√£y c√πng c√°c th√†nh vi√™n trong bang ti√™u di·ªát cho ta 30 con Heo r·ª´ng, 30 con Heo da xanh v√† 30 con Heo Xayda");
                    break;

                //=============================================================================
                case ConstTask.TASK_13_0:
                    if (isCurrentTask(player, idTaskCustom)) {
                        Service.gI().sendThongBao(player, "B·∫°n ƒë√°nh ƒë∆∞·ª£c "
                                + player.playerTask.taskMain.subTasks.get(player.playerTask.taskMain.index).count + "/"
                                + player.playerTask.taskMain.subTasks.get(player.playerTask.taskMain.index).maxCount
                                + transformName(player, " Heo r·ª´ng"));
                    } else {
                        Service.gI().sendThongBao(player, "Ti·∫øp theo l√† Heo da xanh");
                    }
                    break;
                case ConstTask.TASK_13_1:
                    if (isCurrentTask(player, idTaskCustom)) {
                        Service.gI().sendThongBao(player, "B·∫°n ƒë√°nh ƒë∆∞·ª£c "
                                + player.playerTask.taskMain.subTasks.get(player.playerTask.taskMain.index).count + "/"
                                + player.playerTask.taskMain.subTasks.get(player.playerTask.taskMain.index).maxCount
                                + transformName(player, " Heo da xanh"));
                    } else {
                        Service.gI().sendThongBao(player, "Ti·∫øp theo l√† Heo xayda");
                    }
                    break;
                case ConstTask.TASK_13_2:
                    if (isCurrentTask(player, idTaskCustom)) {
                        Service.gI().sendThongBao(player, "B·∫°n ƒë√°nh ƒë∆∞·ª£c "
                                + player.playerTask.taskMain.subTasks.get(player.playerTask.taskMain.index).count + "/"
                                + player.playerTask.taskMain.subTasks.get(player.playerTask.taskMain.index).maxCount
                                + transformName(player, " Heo xayda"));
                    } else {
                        if (player.gender == 0) {
                            Service.gI().sendThongBao(player, "Nhi·ªám v·ª• ho√†n\nth√†nh, b√°o c√°o v·ªõi\nQuy L√£o n√†o!");
                        } else if (player.gender == 1) {
                            Service.gI().sendThongBao(player, "Nhi·ªám v·ª• ho√†n\nth√†nh, b√°o c√°o v·ªõi\nTr∆∞·ªüng L√£o Guru n√†o!");
                        } else {
                            Service.gI().sendThongBao(player, "Nhi·ªám v·ª• ho√†n\nth√†nh, b√°o c√°o v·ªõi\nVua Vegeta n√†o!");
                        }
                    }
                    break;
                case ConstTask.TASK_13_3:
                    npcSay(player, ConstTask.NPC_QUY_LAO, "Bang c·ªßa con r·∫•t c√≥ tinh th·∫ßn ƒë·ªìng ƒë·ªôi, con h√£y c√πng c√°c th√†nh vi√™n luy·ªán t·∫≠p chƒÉm ch·ªâ ƒë·ªÉ th√†nh t√†i nh√©");
                    break;
                //===================================================================================
                case ConstTask.TASK_14_0:
                    break;
                case ConstTask.TASK_14_1:
                    break;
                case ConstTask.TASK_14_2:
                    npcSay(player, ConstTask.NPC_QUY_LAO, "Con ƒë√£ t√¨m th·∫•y truy·ªán Doremon t·∫≠p 2 r·ªìi √†, mau ƒë∆∞a cho ta n√†o");
                    break;
                //=====================================================================================
                case ConstTask.TASK_15_1:
                    if (isCurrentTask(player, idTaskCustom)) {
                        Service.gI().sendThongBao(player, "B·∫°n ƒë√°nh ƒë∆∞·ª£c "
                                + player.playerTask.taskMain.subTasks.get(player.playerTask.taskMain.index).count + "/"
                                + player.playerTask.taskMain.subTasks.get(player.playerTask.taskMain.index).maxCount
                                + transformName(player, " Bulon"));
                    } else {
                        Service.gI().sendThongBao(player, "Ti·∫øp theo l√† Ukulele");
                    }
                    break;
                case ConstTask.TASK_15_2:
                    if (isCurrentTask(player, idTaskCustom)) {
                        Service.gI().sendThongBao(player, "B·∫°n ƒë√°nh ƒë∆∞·ª£c "
                                + player.playerTask.taskMain.subTasks.get(player.playerTask.taskMain.index).count + "/"
                                + player.playerTask.taskMain.subTasks.get(player.playerTask.taskMain.index).maxCount
                                + transformName(player, " Ukulele"));
                    } else {
                        Service.gI().sendThongBao(player, "Ti·∫øp theo l√† Qu·ª∑ m·∫≠p");
                    }
                    break;
                case ConstTask.TASK_15_3:
                    if (isCurrentTask(player, idTaskCustom)) {
                        Service.gI().sendThongBao(player, "B·∫°n ƒë√°nh ƒë∆∞·ª£c "
                                + player.playerTask.taskMain.subTasks.get(player.playerTask.taskMain.index).count + "/"
                                + player.playerTask.taskMain.subTasks.get(player.playerTask.taskMain.index).maxCount
                                + transformName(player, " Qu·ª∑ m·∫≠p"));
                    } else {
                        if (player.gender == 0) {
                            Service.gI().sendThongBao(player, "Nhi·ªám v·ª• ho√†n\nth√†nh, b√°o c√°o v·ªõi\nQuy L√£o n√†o!");
                        } else if (player.gender == 1) {
                            Service.gI().sendThongBao(player, "Nhi·ªám v·ª• ho√†n\nth√†nh, b√°o c√°o v·ªõi\nTr∆∞·ªüng L√£o Guru n√†o!");
                        } else {
                            Service.gI().sendThongBao(player, "Nhi·ªám v·ª• ho√†n\nth√†nh, b√°o c√°o v·ªõi\nVua Vegeta n√†o!");
                        }
                    }
                    break;
                case ConstTask.TASK_15_4:
                    npcSay(player, ConstTask.NPC_QUY_LAO, "Con v√† bang h·ªôi l√†m r·∫•t t·ªët, ta c√≥ qu√† d√†nh cho con");
                    break;
                //=====================================================================
                case ConstTask.TASK_17_0:
                    Service.gI().sendThongBao(player, "Mau ƒë·∫øn XayDa\nƒë√°nh b·∫°i\nAkkuman t·∫°i\nTh√†nh ph·ªë Vegeta");
                    break;
                case ConstTask.TASK_17_1:
                    Service.gI().sendThongBao(player, "Mau ƒë·∫øn Tr√°i ƒê·∫•t\nƒë√°nh b·∫°i\nTambourine t·∫°i\nƒê√¥ng Karin");
                    break;
                case ConstTask.TASK_17_2:
                    Service.gI().sendThongBao(player, "Mau ƒë·∫øn Na m·∫øc\nƒë√°nh b·∫°i\nDrum t·∫°i\nThung l≈©ng Nam·∫øc");
                case ConstTask.TASK_17_3:
                    if (player.gender == 0) {
                        Service.gI().sendThongBao(player, "B√°o c√°o v·ªõi\nQuy L√£o n√†o!");
                    } else if (player.gender == 1) {
                        Service.gI().sendThongBao(player, "B√°o c√°o v·ªõi\nTr∆∞·ªüng L√£o Guru n√†o!");
                    } else {
                        Service.gI().sendThongBao(player, "B√°o c√°o v·ªõi\nVua Vegeta n√†o!");
                    }
                    break;
                case ConstTask.TASK_17_4:
                    npcSay(player, ConstTask.NPC_QUY_LAO, "Con l√†m r·∫•t t·ªët, ta c√≥ qu√† d√†nh cho con");
                    break;
                //=========================================================================
                case ConstTask.TASK_19_1:
                    if (player.gender == 0) {
                        Service.gI().sendThongBao(player, "B√°o c√°o v·ªõi\nQuy L√£o n√†o!");
                    } else if (player.gender == 1) {
                        Service.gI().sendThongBao(player, "B√°o c√°o v·ªõi\nTr∆∞·ªüng L√£o Guru n√†o!");
                    } else {
                        Service.gI().sendThongBao(player, "B√°o c√°o v·ªõi\nVua Vegeta n√†o!");
                    }
                    break;
                case ConstTask.TASK_19_2:
                    npcSay(player, ConstTask.NPC_QUY_LAO, "Con l√†m r·∫•t t·ªët, Trung √öy Tr·∫Øng ƒë√£ b·ªã ti√™u di·ªát. Ta c√≥ qu√† d√†nh cho con");
                //==========================================================================
                case ConstTask.TASK_20_7:
                    npcSay(player, ConstTask.NPC_QUY_LAO, "T·ªët l·∫Øm, gi·ªù con h√£y ƒëi ti√™u di·ªát l≈© ƒë·ªá t·ª≠ c·ªßa Fide cho ta");
                    break;
                //==========================================================================
                case ConstTask.TASK_21_0:
                    Service.gI().sendThongBao(player, "Ti·∫øp theo l√† t√¨m di·ªát M·∫≠p ƒê·∫ßu ƒêinh");
                    break;
                case ConstTask.TASK_21_1:
                    Service.gI().sendThongBao(player, "Cu·ªëi c√πng l√† t√¨m di·ªát Rambo");
                    break;
                case ConstTask.TASK_21_2:
                    if (player.gender == 0) {
                        Service.gI().sendThongBao(player, "Ch√∫c m·ª´ng b·∫°n, b·ªçn\nƒë·ªá t·ª≠ c·ªßa Fide ƒë√£ b·ªã\nti√™u di·ªát, h√£y b√°o\nc√°o v·ªõi Quy L√£o n√†o!");
                    } else if (player.gender == 1) {
                        Service.gI().sendThongBao(player, "Ch√∫c m·ª´ng b·∫°n, b·ªçn\nƒë·ªá t·ª≠ c·ªßa Fide ƒë√£ b·ªã\nti√™u di·ªát, h√£y b√°o\nc√°o v·ªõi Tr∆∞·ªüng L√£o Guru n√†o!");
                    } else {
                        Service.gI().sendThongBao(player, "Ch√∫c m·ª´ng b·∫°n, b·ªçn\nƒë·ªá t·ª≠ c·ªßa Fide ƒë√£ b·ªã\nti√™u di·ªát, h√£y b√°o\nc√°o v·ªõi Vua Vegeta n√†o!");
                    }
                    break;
                case ConstTask.TASK_21_3:
                    npcSay(player, ConstTask.NPC_QUY_LAO, "Con l√†m r·∫•t t·ªët, ta c√≥ qu√† d√†nh cho con");
                    break;

                //==========================================================================
                case ConstTask.TASK_22_0:
                    Service.gI().sendThongBao(player, "Ti·∫øp theo l√† S·ªë 3");
                    break;
                case ConstTask.TASK_22_1:
                    Service.gI().sendThongBao(player, "Ti·∫øp theo l√† S·ªë 1");
                    break;
                case ConstTask.TASK_22_2:
                    Service.gI().sendThongBao(player, "Ti·∫øp theo l√† Ti·ªÉu ƒë·ªôi tr∆∞·ªüng");
                    break;
                case ConstTask.TASK_22_3:
                    if (player.gender == 0) {
                        Service.gI().sendThongBao(player, "Ch√∫c m·ª´ng b·∫°n, b·ªçn\nti·ªÉu ƒë·ªôi s√°t th·ªß c·ªßa\nFide ƒë√£ b·ªã ti√™u di·ªát, h√£y b√°o c√°o v·ªõi Quy\nL√£o n√†o!");
                    } else if (player.gender == 1) {
                        Service.gI().sendThongBao(player, "Ch√∫c m·ª´ng b·∫°n, b·ªçn\nti·ªÉu ƒë·ªôi s√°t th·ªß c·ªßa\nFide ƒë√£ b·ªã ti√™u di·ªát, h√£y b√°o c√°o v·ªõi Tr∆∞·ªüng\nL√£o Guru n√†o!");
                    } else {
                        Service.gI().sendThongBao(player, "Ch√∫c m·ª´ng b·∫°n, b·ªçn\nti·ªÉu ƒë·ªôi s√°t th·ªß c·ªßa\nFide ƒë√£ b·ªã ti√™u di·ªát, h√£y b√°o c√°o v·ªõi Vua\nVegeta n√†o!");
                    }
                    break;
                case ConstTask.TASK_22_4:
                    npcSay(player, ConstTask.NPC_QUY_LAO, "R·∫•t t·ªët, b·ªçn Fide ƒë√£ bi·∫øt s·ª©c m·∫°nh c·ªßa ch√∫ng ta");
                    break;

                //==========================================================================
                case ConstTask.TASK_23_0:
                    Service.gI().sendThongBao(player, "H√£y t√¨m di·ªát Fide c·∫•p 2");
                case ConstTask.TASK_23_1:
                    Service.gI().sendThongBao(player, "H√£y t√¨m di·ªát Fide c·∫•p 3");
                case ConstTask.TASK_23_2:
                    if (player.gender == 0) {
                        Service.gI().sendThongBao(player, "Ch√∫c m·ª´ng b·∫°n, Fide\nƒë√£ b·ªã ti√™u di·ªát, h√£y\nb√°o c√°o v·ªõi Quy\nL√£o n√†o!");
                    } else if (player.gender == 1) {
                        Service.gI().sendThongBao(player, "Ch√∫c m·ª´ng b·∫°n, Fide\nƒë√£ b·ªã ti√™u di·ªát, h√£y\nb√°o c√°o v·ªõi Tr∆∞·ªüng\nL√£o Guru n√†o!");
                    } else {
                        Service.gI().sendThongBao(player, "Ch√∫c m·ª´ng b·∫°n, Fide\nƒë√£ b·ªã ti√™u di·ªát, h√£y\nb√°o c√°o v·ªõi Vua\nVegeta n√†o!");
                    }
                    break;
                case ConstTask.TASK_23_3:
                    npcSay(player, ConstTask.NPC_QUY_LAO, "R·∫•t t·ªët, b·ªçn Fide ƒë√£ bi·∫øt s·ª©c m·∫°nh th·∫≠t s·ª± c·ªßa ch√∫ng ta");
                    break;
                //==========================================================================
                case ConstTask.TASK_24_0:
                    npcSay(player, ConstTask.NPC_NHA, "Con c·ªë g·∫Øng theo %10 h·ªçc th√†nh t√†i, ƒë·ª´ng lo cho ta.");
                    Service.gI().sendThongBao(player, "V·ª´a c√≥ 1 phi thuy·ªÅn l·∫° v·ª´a ƒë√°p xu·ªëng tr√°i ƒë·∫•t, mau ƒë·∫øn xem");
                    break;
                case ConstTask.TASK_24_1:
                    npcSay(player, ConstNpc.CALICK, "Ch√†o ch√∫, th·ª±c ra ch√°u kh√¥ng ph·∫£i l√† ng∆∞·ªùi c·ªßa th·ªùi ƒë·∫°i n√†y m√† l√† ng∆∞·ªùi c·ªßa...\n"
                            + "T∆∞∆°ng lai 20 nƒÉm s·∫Øp t·ªõi\n T√™n ch√°u l√† Ca l√≠ch! ng∆∞·ªùi Xayda\nCh√°u ƒë·∫øn ƒë√¢y b·∫±ng 'C·ªï m√°y th·ªùi gian'\n"
                            + "B·ªë m·∫π ch√°u v·ªën l√† b·∫°n th√¢n c·ªßa ch√∫\n H·ªç ch√≠nh l√† Ca ƒê√≠c v√† Bunma!\n"
                            + "ƒê√¢y l√† thu·ªëc tr·ª£ tim d√†nh cho ch√∫ S√¥ng√¥ku\n nh·ªù ch√∫ ƒë∆∞a cho Quy L√£o gi√πm ch√°u nh√©, c√°m ∆°n ch√∫");
                    break;
                case ConstTask.TASK_24_2:
                    npcSay(player, ConstNpc.QUY_LAO_KAME, "H√¥ h√¥ h√¥, c√°m ∆°n c·∫≠u...\n"
                            + "l√∫c n√£y n√≥ tr√¥m m·∫Øt k√≠nh c·ªßa ta, c·ª© t∆∞·ªüng h·ªìn ma b√≥ng qu·∫ø c·ªßa n√≥ hi·ªán v·ªÅ ch·ª©");
                    break;
                case ConstTask.TASK_24_3:
                    npcSay(player, ConstNpc.BUNMA_TL, "C√°m ∆°n b·∫°n ƒë√£ ƒë·∫øn gi√∫p ch√∫ng t√¥i\n"
                            + "Ch√∫ng t√¥i b·ªã b·ªçn b·ªç hung bao v√¢y\n"
                            + "Ch√∫ng ƒë√¥ng ƒë·∫øn h√†ng trƒÉm con\n"
                            + "H√£y gi√∫p ch√∫ng t√¥i ti√™u di·ªát h·∫øt ch√∫ng n√≥.");
                    break;
                case ConstTask.TASK_24_4:
                    if (isCurrentTask(player, idTaskCustom)) {
                        Service.gI().sendThongBao(player, "B·∫°n ƒë√°nh ƒë∆∞·ª£c "
                                + player.playerTask.taskMain.subTasks.get(player.playerTask.taskMain.index).count + "/"
                                + player.playerTask.taskMain.subTasks.get(player.playerTask.taskMain.index).maxCount
                                + transformName(player, " X√™n con c·∫•p 1"));
                    } else {
                        Service.gI().sendThongBao(player, "V·ªÅ b√°o c√°o v·ªõi Bunma t∆∞∆°ng lai");
                    }
                    break;
                case ConstTask.TASK_24_5:
                    npcSay(player, ConstNpc.BUNMA_TL, "C·∫£m ∆°n c·∫≠u ƒë√£ gi·∫£i v√¢y cho ch√∫ng t√¥i\n"
                            + "H√£y ƒë·∫øn th√†nh ph·ªë ph√≠a nam, ƒë·∫£o bal√™ ho·∫∑c cao nguy√™n t√¨m v√† ch·∫∑n ƒë√°nh 2 R√¥b·ªët S√°t Th·ªß\n"
                            + "C·∫©n th·∫≠n v√¨ b·ªçn ch√∫ng r·∫•t m·∫°nh");
                    break;
                //=============================================================================

                case ConstTask.TASK_25_0:
                    Service.gI().sendThongBao(player, "Ti·∫øp theo l√† ti√™u di·ªát Android 19");
                    break;
                case ConstTask.TASK_25_1:
                    Service.gI().sendThongBao(player, "Ti·∫øp theo l√† ti√™u di·ªát Android 20");
                    break;
                case ConstTask.TASK_25_2:
                    if (isCurrentTask(player, idTaskCustom)) {
                        Service.gI().sendThongBao(player, "B·∫°n ƒë√°nh ƒë∆∞·ª£c "
                                + player.playerTask.taskMain.subTasks.get(player.playerTask.taskMain.index).count + "/"
                                + player.playerTask.taskMain.subTasks.get(player.playerTask.taskMain.index).maxCount
                                + transformName(player, " X√™n con c·∫•p 3"));
                    } else {
                        Service.gI().sendThongBao(player, "V·ªÅ b√°o c√°o v·ªõi Bunma t∆∞∆°ng lai");
                    }
                    break;
                case ConstTask.TASK_25_4:
                    npcSay(player, ConstNpc.BUNMA_TL, "S·ªë 1 ch√≠nh l√† b√°c h·ªçc K√¥r√™\n"
                            + "√îng ta ƒë√£ t·ª± bi·∫øn m√¨nh th√†nh R√¥b·ªët ƒë·ªÉ ƒë∆∞·ª£c b·∫•t t·ª≠\n"
                            + "2 t√™n R√¥b·ªët n√†y kh√¥ng ph·∫£i l√† R√¥b·ªët s√°t th·ªß m√† ch√∫ng t√¥i n√≥i ƒë·∫øn\n"
                            + "C√≥ th·ªÉ qu√° kh·ª© ƒë√£ thay ƒë·ªïi t·ª´ khi c·∫≠u ƒë·∫øn ƒë√¢y\n"
                            + "Mau tr·ªü v·ªÅ qu√° kh·ª© xem chuy·ªán g√¨ ƒë√£ x·∫£y ra");

                    if (isCurrentTask(player, idTaskCustom)) {
                        Service.gI().sendThongBao(player, "ƒê·∫øn s√¢n sau si√™u th·ªã");
                    }
                    break;
                //=============================================================
                case ConstTask.TASK_26_0:
                    if (isCurrentTask(player, idTaskCustom)) {
                        Service.gI().sendThongBao(player, "T√¨m v√† ti√™u di·ªát Android 15");
                    }
                    break;
                case ConstTask.TASK_26_1:
                    if (isCurrentTask(player, idTaskCustom)) {
                        Service.gI().sendThongBao(player, "T√¨m v√† ti√™u di·ªát Android 13");
                    }
                    break;
                case ConstTask.TASK_26_2:
                    if (isCurrentTask(player, idTaskCustom)) {
                        Service.gI().sendThongBao(player, "B√°o c√°o v·ªõi Bunma t∆∞∆°ng lai");
                    }
                    break;
                case ConstTask.TASK_26_3:
                    npcSay(player, ConstNpc.BUNMA_TL, "B√°c h·ªçc K√¥r√™ th·∫≠t s·ª± l√† thi√™n t√†i\n"
                            + "C·∫£ m√°y t√≠nh c·ªßa √¥ng ta c≈©ng c√≥ th·ªÉ\n"
                            + "t·ª± ƒë·ªông t·∫°o ra R√¥b·ªët s√°t th·ªß\n"
                            + "2 ƒë·ª©a R√¥b·ªët s√°t th·ªß m√† ch√∫ng t√¥i n√≥i\n"
                            + "c·ª° 17, 18 tu·ªïi, 1 trai 1 g√°i ƒÉn m·∫∑c nh∆∞ cao b·ªìi\n"
                            + "B·ªÅ ngo√†i th·∫•y hi·ªÅn l√†nh nh∆∞ng ra tay c·ª±c k√¨ t√†n ƒë·ªôc\n"
                            + "C·∫≠u ph·∫£i c·∫©n th·∫≠n ƒë·ª´ng khinh ƒë·ªãch.");
                    if (isCurrentTask(player, idTaskCustom)) {
                        Service.gI().sendThongBao(player, "ƒê·∫øn th√†nh ph·ªë, ng·ªçn n√∫i, thung l≈©ng ph√≠a B·∫Øc");
                    }
                    break;

                //====================================================//
                case ConstTask.TASK_27_0:
                    if (isCurrentTask(player, idTaskCustom)) {
                        Service.gI().sendThongBao(player, "Ti√™u di·ªát P√≠c");
                    }
                    break;
                case ConstTask.TASK_27_1:
                    if (isCurrentTask(player, idTaskCustom)) {
                        Service.gI().sendThongBao(player, "Ti√™u di·ªát P√≥c");
                    }
                    break;
                case ConstTask.TASK_27_2:
                    if (isCurrentTask(player, idTaskCustom)) {
                        Service.gI().sendThongBao(player, "Ti√™u di·ªát King Kong");
                    }
                    break;
                case ConstTask.TASK_27_3:
                    if (isCurrentTask(player, idTaskCustom)) {
                        Service.gI().sendThongBao(player, "Ti√™u di·ªát 800 x√™n con c·∫•p 5");
                    }
                    break;
                case ConstTask.TASK_27_4:
                    if (isCurrentTask(player, idTaskCustom)) {
                        Service.gI().sendThongBao(player, "B·∫°n ƒë√°nh ƒë∆∞·ª£c "
                                + player.playerTask.taskMain.subTasks.get(player.playerTask.taskMain.index).count + "/"
                                + player.playerTask.taskMain.subTasks.get(player.playerTask.taskMain.index).maxCount
                                + transformName(player, " X√™n con c·∫•p 5"));
                    } else {
                        Service.gI().sendThongBao(player, "V·ªÅ b√°o c√°o v·ªõi Bunma t∆∞∆°ng lai");
                    }
                    break;
                case ConstTask.TASK_27_5:
                    npcSay(player, ConstNpc.BUNMA_TL, "T√¥i v√† Ca L√≠ch v·ª´a ph√°t hi·ªán ra 1 v·ªè tr·ª©ng k√¨ l·∫° ƒë√£ n·ªü\n"
                            + "G·∫ßn ƒë√≥ c√≤n c√≥ v·ªè c·ªßa m·ªôt con ve s·∫ßu r·∫•t to v·ª´a l·ªôt x√°c\n"
                            + "C·∫≠u h√£y ƒë·∫øn th·ªã tr·∫•n Ginder t·ªça ƒë·ªô 213-xyz xem th·ª≠\n"
                            + "T√¥i nghi ng·ªù n√≥ l√† 1 t√°c ph·∫©m n·ªØa c·ªßa l√£o K√¥r√™\n"
                            + "C·∫≠u c·∫ßm l·∫•y c√°i n√†y, ƒë√≥ l√† raƒëa r√≤ t√¨m Capsule k√¨ b√≠\n"
                            + "Ch√∫c c·∫≠u t√¨m ƒë∆∞·ª£c v·∫≠t g√¨ ƒë√≥ th√∫ v·ªã");

                    Service.gI().sendThongBao(player, "ƒê·∫øn th·ªã tr·∫≠n Ginder");
                    break;
                //============================================================

                case ConstTask.TASK_28_0:
                    Service.gI().sendThongBao(player, "Ti√™u di·ªát X√™n b·ªç hung c·∫•p 1");
                    break;
                case ConstTask.TASK_28_1:
                    Service.gI().sendThongBao(player, "Ti√™u di·ªát X√™n b·ªç hung c·∫•p 2");
                    break;
                case ConstTask.TASK_28_2:
                    Service.gI().sendThongBao(player, "Ti√™u di·ªát X√™n b·ªç hung ho√†n thi·ªán");
                    break;
                case ConstTask.TASK_28_3:
                    Service.gI().sendThongBao(player, "Ti√™u di·ªát 700 x√™n con c·∫•p 8");
                    break;
                case ConstTask.TASK_28_4:
                    if (isCurrentTask(player, idTaskCustom)) {
                        Service.gI().sendThongBao(player, "B·∫°n ƒë√°nh ƒë∆∞·ª£c "
                                + player.playerTask.taskMain.subTasks.get(player.playerTask.taskMain.index).count + "/"
                                + player.playerTask.taskMain.subTasks.get(player.playerTask.taskMain.index).maxCount
                                + transformName(player, " X√™n con c·∫•p 8"));
                    } else {
                        Service.gI().sendThongBao(player, "V·ªÅ b√°o c√°o v·ªõi Bunma t∆∞∆°ng lai");
                    }
                    break;
                case ConstTask.TASK_28_5:
                    npcSay(player, ConstNpc.BUNMA_TL, "H·∫Øn s·ª£ ch√∫ng ta qu√° n√™n b√†y tr√≤ c√¢u gi·ªù ƒë√¢y m√†\n"
                            + "C·∫≠u h√£y tranh th·ªß 3 ng√†y n√†y t·∫≠p luy·ªán ƒë·ªÉ n√¢ng cao s·ª©c m·∫°nh b·∫£n th√¢n nh√©\n"
                            + "Capsule k√¨ b√≠ kh√¥ng ch·ª´ng l·∫°i c√≥ √≠ch\n"
                            + "H√£y thu th·∫≠p 1 √≠t ƒë·ªÉ ph√≤ng th√¢n");

                //=============================================================
                case ConstTask.TASK_29_0:
                    npcSay(player, ConstNpc.THAN_MEO_KARIN, "Wow s·ª©c m·∫°nh c·ªßa con gi·ªù kh√¥ng th·ªÉ ƒëo ƒë·∫øm ƒë∆∞·ª£c n·ªØa r·ªìi\n"
                            + "Nh∆∞ng X√™n B·ªç Hung v·∫´n c√≤n nh·ªânh h∆°n con 1 t√≠");
                    Service.gI().sendThongBao(player, "ƒê·∫øn t∆∞∆°ng lai thu\nth·∫≠p Capsule k√¨ b√≠\nn√†o, nh·ªõ s·ª≠ d·ª•ng\nm√°y d√≤");
                    break;
                case ConstTask.TASK_29_1:
                    Service.gI().sendThongBao(player, "H√£y ƒë·∫øn v√µ ƒë√†i x√™n b·ªç hung");
                    break;
                case ConstTask.TASK_29_2:
                    Service.gI().sendThongBao(player, "Ti√™u di·ªát l≈© b·ªç hung con");
                    break;
                case ConstTask.TASK_29_3:
                    Service.gI().sendThongBao(player, "H√£y ti√™u di·ªát Si√™u B·ªç Hung");
                    break;
                case ConstTask.TASK_29_4:
                    Service.gI().sendThongBao(player, "V·ªÅ b√°o cho Bunma n√†o");
                    break;
                case ConstTask.TASK_29_5:
                    npcSay(player, ConstNpc.BUNMA_TL, "Ch√∫c m·ª´ng c·∫≠u ƒë√£ chi·∫øn th·∫Øng Si√™u B·ªç Hung\n"
                            + "C√°m ∆°n c·∫≠u r·∫•t nhi·ªÅu\n"
                            + "n·∫øu r·∫£nh r·ªói c·∫≠u h√£y ƒë·∫øn ƒë√¢y t√¨m Capsule k√¨ b√≠ nh√°");
                    break;

                //=======================================================//
                case ConstTask.TASK_30_0:
                    Service.gI().sendThongBao(player, "H·∫° vua ƒë·ªãa ng·ª•c\nDrabura");
                    break;
                case ConstTask.TASK_30_1:
                    Service.gI().sendThongBao(player, "H·∫° Pui Pui");
                    break;
                case ConstTask.TASK_30_2:
                    Service.gI().sendThongBao(player, "H·∫° Pui Pui l·∫ßn 2");
                    break;
                case ConstTask.TASK_30_3:
                    Service.gI().sendThongBao(player, "H·∫° Yac√¥n");
                    break;
                case ConstTask.TASK_30_4:
                    Service.gI().sendThongBao(player, "H·∫° Drabura l·∫ßn 2");
                    break;
                case ConstTask.TASK_30_5:
                    Service.gI().sendThongBao(player, "H·∫° Mab∆∞");
                    break;
                case ConstTask.TASK_30_6:
                    Service.gI().sendThongBao(player, "B√°o c√°o v·ªõi √îsin");
                    break;
            }
            PlayerService.gI().sendInfoHpMpMoney(player);
            return true;
        }
        return false;
    }

    private void npcSay(Player player, int npcId, String text) {
        npcId = transformNpcId(player, npcId);
        text = transformName(player, text);
        int avatar = NpcService.gI().getAvatar(npcId);
        NpcService.gI().createTutorial(player, avatar, text);
    }

    //Th∆∞·ªüng nhi·ªám v·ª•
    private void rewardDoneTask(Player player) {
        switch (player.playerTask.taskMain.id) {
            case 0:
                Service.getInstance().addSMTN(player, (byte) 0, 500, false);
                Service.getInstance().addSMTN(player, (byte) 1, 500, false);
                break;
            case 1:
                Service.getInstance().addSMTN(player, (byte) 0, 1000, false);
                Service.getInstance().addSMTN(player, (byte) 1, 1000, false);
                break;
            case 2:
                Service.getInstance().addSMTN(player, (byte) 0, 1200, false);
                Service.getInstance().addSMTN(player, (byte) 1, 1200, false);
                break;
            case 3:
                Service.getInstance().addSMTN(player, (byte) 0, 3000, false);
                Service.getInstance().addSMTN(player, (byte) 1, 3000, false);
                break;
            case 4:
                Service.getInstance().addSMTN(player, (byte) 0, 7000, false);
                Service.getInstance().addSMTN(player, (byte) 1, 7000, false);
                break;
            case 5:
                Service.getInstance().addSMTN(player, (byte) 0, 20000, false);
                Service.getInstance().addSMTN(player, (byte) 1, 20000, false);
                break;
        }
    }

    // vd: pem ƒëc 1 m·ªôc nh√¢n -> +1 m·ªôc nh√¢n v√†o nv hi·ªán t·∫°i
    private void addDoneSubTask(Player player, int numDone) {
        if (player.playerTask.taskMain.id == 4 && player.playerTask.taskMain.index == 3) {
            player.playerTask.taskMain.id = 6;
            player.playerTask.taskMain.index = 0;
            sendNextTaskMain(player);
        }
        if (player.playerTask.taskMain.id == 11 && player.playerTask.taskMain.index == 0) {
            sendNextTaskMain(player);
        }
        player.playerTask.taskMain.subTasks.get(player.playerTask.taskMain.index).count += numDone;
        if (player.playerTask.taskMain.subTasks.get(player.playerTask.taskMain.index).count
                >= player.playerTask.taskMain.subTasks.get(player.playerTask.taskMain.index).maxCount) {
            player.playerTask.taskMain.index++;
            if (player.playerTask.taskMain.index >= player.playerTask.taskMain.subTasks.size()) {
                this.sendNextTaskMain(player);
            } else {
                this.sendNextSubTask(player);
            }
        } else {
            this.sendUpdateCountSubTask(player);
        }
    }

    private int transformMapId(Player player, int id) {
        if (id == ConstTask.MAP_NHA) {
            return (short) (player.gender + 21);
        } else if (id == ConstTask.MAP_200) {
            return player.gender == ConstPlayer.TRAI_DAT
                    ? 1 : (player.gender == ConstPlayer.NAMEC
                            ? 8 : 15);
        } else if (id == ConstTask.MAP_VACH_NUI) {
            return player.gender == ConstPlayer.TRAI_DAT
                    ? 39 : (player.gender == ConstPlayer.NAMEC
                            ? 40 : 41);
        } else if (id == ConstTask.MAP_200) {
            return player.gender == ConstPlayer.TRAI_DAT
                    ? 2 : (player.gender == ConstPlayer.NAMEC
                            ? 9 : 16);
        } else if (id == ConstTask.MAP_TTVT) {
            return player.gender == ConstPlayer.TRAI_DAT
                    ? 24 : (player.gender == ConstPlayer.NAMEC
                            ? 25 : 26);
        } else if (id == ConstTask.MAP_QUAI_BAY_600) {
            return player.gender == ConstPlayer.TRAI_DAT
                    ? 3 : (player.gender == ConstPlayer.NAMEC
                            ? 11 : 17);
        } else if (id == ConstTask.MAP_LANG) {
            return player.gender == ConstPlayer.TRAI_DAT
                    ? 0 : (player.gender == ConstPlayer.NAMEC
                            ? 7 : 14);
        } else if (id == ConstTask.MAP_QUY_LAO) {
            return player.gender == ConstPlayer.TRAI_DAT
                    ? 5 : (player.gender == ConstPlayer.NAMEC
                            ? 13 : 20);
        }
        return id;
    }

    private int transformNpcId(Player player, int id) {
        if (id == ConstTask.NPC_NHA) {
            return player.gender == ConstPlayer.TRAI_DAT
                    ? ConstNpc.ONG_GOHAN : (player.gender == ConstPlayer.NAMEC
                            ? ConstNpc.ONG_MOORI : ConstNpc.ONG_PARAGUS);
        } else if (id == ConstTask.NPC_TTVT) {
            return player.gender == ConstPlayer.TRAI_DAT
                    ? ConstNpc.DR_DRIEF : (player.gender == ConstPlayer.NAMEC
                            ? ConstNpc.CARGO : ConstNpc.CUI);
        } else if (id == ConstTask.NPC_SHOP_LANG) {
            return player.gender == ConstPlayer.TRAI_DAT
                    ? ConstNpc.BUNMA : (player.gender == ConstPlayer.NAMEC
                            ? ConstNpc.DENDE : ConstNpc.APPULE);
        } else if (id == ConstTask.NPC_QUY_LAO) {
            return player.gender == ConstPlayer.TRAI_DAT
                    ? ConstNpc.QUY_LAO_KAME : (player.gender == ConstPlayer.NAMEC
                            ? ConstNpc.TRUONG_LAO_GURU : ConstNpc.VUA_VEGETA);
        }
        return id;
    }

    //replate %1 %2 -> ch·ªØ
    private String transformName(Player player, String text) {
        byte gender = player.gender;

        text = text.replaceAll(ConstTask.TEN_NPC_QUY_LAO, player.gender == ConstPlayer.TRAI_DAT
                ? "Quy L√£o Kame" : (player.gender == ConstPlayer.NAMEC
                        ? "Tr∆∞·ªüng l√£o Guru" : "Vua Vegeta"));
        text = text.replaceAll(ConstTask.TEN_MAP_QUY_LAO, player.gender == ConstPlayer.TRAI_DAT
                ? "ƒê·∫£o Kam√™" : (player.gender == ConstPlayer.NAMEC
                        ? "ƒê·∫£o Guru" : "V√°ch n√∫i ƒëen"));
        text = text.replaceAll(ConstTask.TEN_QUAI_3000, player.gender == ConstPlayer.TRAI_DAT
                ? "·ªëc m∆∞·ª£n h·ªìn" : (player.gender == ConstPlayer.NAMEC
                        ? "·ªëc s√™n" : "heo Xayda m·∫π"));
        //----------------------------------------------------------------------
        text = text.replaceAll(ConstTask.TEN_LANG, player.gender == ConstPlayer.TRAI_DAT
                ? "L√†ng Aru" : (player.gender == ConstPlayer.NAMEC
                        ? "L√†ng Mori" : "L√†ng Kakarot"));
        text = text.replaceAll(ConstTask.TEN_NPC_NHA, player.gender == ConstPlayer.TRAI_DAT
                ? "√¥ng G√¥han" : (player.gender == ConstPlayer.NAMEC
                        ? "√¥ng Moori" : "√¥ng Paragus"));
        text = text.replaceAll(ConstTask.TEN_QUAI_200, player.gender == ConstPlayer.TRAI_DAT
                ? "kh·ªßng long" : (player.gender == ConstPlayer.NAMEC
                        ? "l·ª£n l√≤i" : "qu·ª∑ ƒë·∫•t"));
        text = text.replaceAll(ConstTask.TEN_MAP_200, player.gender == ConstPlayer.TRAI_DAT
                ? "ƒê·ªìi hoa c√∫c" : (player.gender == ConstPlayer.NAMEC
                        ? "ƒê·ªìi n·∫•m t√≠m" : "ƒê·ªìi hoang"));
        text = text.replaceAll(ConstTask.TEN_VACH_NUI, player.gender == ConstPlayer.TRAI_DAT
                ? "V√°ch n√∫i Aru" : (player.gender == ConstPlayer.NAMEC
                        ? "V√°ch n√∫i Moori" : "V√°ch n√∫i Kakarot"));
        text = text.replaceAll(ConstTask.TEN_MAP_500, player.gender == ConstPlayer.TRAI_DAT
                ? "Thung l≈©ng tre" : (player.gender == ConstPlayer.NAMEC
                        ? "Th·ªã tr·∫•n Moori" : "L√†ng Plane"));
        text = text.replaceAll(ConstTask.TEN_NPC_TTVT, player.gender == ConstPlayer.TRAI_DAT
                ? "Dr. Brief" : (player.gender == ConstPlayer.NAMEC
                        ? "Cargo" : "Cui"));
        text = text.replaceAll(ConstTask.TEN_QUAI_BAY_600, player.gender == ConstPlayer.TRAI_DAT
                ? "th·∫±n l·∫±n bay" : (player.gender == ConstPlayer.NAMEC
                        ? "phi long" : "qu·ª∑ bay"));
        text = text.replaceAll(ConstTask.TEN_NPC_SHOP_LANG, player.gender == ConstPlayer.TRAI_DAT
                ? "Bunma" : (player.gender == ConstPlayer.NAMEC
                        ? "Dende" : "Appule"));
        return text;
    }

    public boolean isCurrentTask(Player player, int idTaskCustom) {
        switch (idTaskCustom) {
            case ConstTask.TASK_0_0:
                return player.playerTask.taskMain.id == 0 && player.playerTask.taskMain.index == 0;
            case ConstTask.TASK_0_1:
                return player.playerTask.taskMain.id == 0 && player.playerTask.taskMain.index == 1;
            case ConstTask.TASK_0_2:
                return player.playerTask.taskMain.id == 0 && player.playerTask.taskMain.index == 2;
            case ConstTask.TASK_0_3:
                return player.playerTask.taskMain.id == 0 && player.playerTask.taskMain.index == 3;
            case ConstTask.TASK_0_4:
                return player.playerTask.taskMain.id == 0 && player.playerTask.taskMain.index == 4;
            case ConstTask.TASK_0_5:
                return player.playerTask.taskMain.id == 0 && player.playerTask.taskMain.index == 5;
            case ConstTask.TASK_0_6:
                return player.playerTask.taskMain.id == 0 && player.playerTask.taskMain.index == 6;
            case ConstTask.TASK_1_0:
                return player.playerTask.taskMain.id == 1 && player.playerTask.taskMain.index == 0;
            case ConstTask.TASK_1_1:
                return player.playerTask.taskMain.id == 1 && player.playerTask.taskMain.index == 1;
            case ConstTask.TASK_1_2:
                return player.playerTask.taskMain.id == 1 && player.playerTask.taskMain.index == 2;
            case ConstTask.TASK_1_3:
                return player.playerTask.taskMain.id == 1 && player.playerTask.taskMain.index == 3;
            case ConstTask.TASK_1_4:
                return player.playerTask.taskMain.id == 1 && player.playerTask.taskMain.index == 4;
            case ConstTask.TASK_1_5:
                return player.playerTask.taskMain.id == 1 && player.playerTask.taskMain.index == 5;
            case ConstTask.TASK_1_6:
                return player.playerTask.taskMain.id == 1 && player.playerTask.taskMain.index == 6;
            case ConstTask.TASK_2_0:
                return player.playerTask.taskMain.id == 2 && player.playerTask.taskMain.index == 0;
            case ConstTask.TASK_2_1:
                return player.playerTask.taskMain.id == 2 && player.playerTask.taskMain.index == 1;
            case ConstTask.TASK_2_2:
                return player.playerTask.taskMain.id == 2 && player.playerTask.taskMain.index == 2;
            case ConstTask.TASK_2_3:
                return player.playerTask.taskMain.id == 2 && player.playerTask.taskMain.index == 3;
            case ConstTask.TASK_2_4:
                return player.playerTask.taskMain.id == 2 && player.playerTask.taskMain.index == 4;
            case ConstTask.TASK_2_5:
                return player.playerTask.taskMain.id == 2 && player.playerTask.taskMain.index == 5;
            case ConstTask.TASK_2_6:
                return player.playerTask.taskMain.id == 2 && player.playerTask.taskMain.index == 6;
            case ConstTask.TASK_3_0:
                return player.playerTask.taskMain.id == 3 && player.playerTask.taskMain.index == 0;
            case ConstTask.TASK_3_1:
                return player.playerTask.taskMain.id == 3 && player.playerTask.taskMain.index == 1;
            case ConstTask.TASK_3_2:
                return player.playerTask.taskMain.id == 3 && player.playerTask.taskMain.index == 2;
            case ConstTask.TASK_3_3:
                return player.playerTask.taskMain.id == 3 && player.playerTask.taskMain.index == 3;
            case ConstTask.TASK_3_4:
                return player.playerTask.taskMain.id == 3 && player.playerTask.taskMain.index == 4;
            case ConstTask.TASK_3_5:
                return player.playerTask.taskMain.id == 3 && player.playerTask.taskMain.index == 5;
            case ConstTask.TASK_3_6:
                return player.playerTask.taskMain.id == 3 && player.playerTask.taskMain.index == 6;
            case ConstTask.TASK_4_0:
                return player.playerTask.taskMain.id == 4 && player.playerTask.taskMain.index == 0;
            case ConstTask.TASK_4_1:
                return player.playerTask.taskMain.id == 4 && player.playerTask.taskMain.index == 1;
            case ConstTask.TASK_4_2:
                return player.playerTask.taskMain.id == 4 && player.playerTask.taskMain.index == 2;
            case ConstTask.TASK_4_3:
                return player.playerTask.taskMain.id == 4 && player.playerTask.taskMain.index == 3;
            case ConstTask.TASK_4_4:
                return player.playerTask.taskMain.id == 4 && player.playerTask.taskMain.index == 4;
            case ConstTask.TASK_4_5:
                return player.playerTask.taskMain.id == 4 && player.playerTask.taskMain.index == 5;
            case ConstTask.TASK_4_6:
                return player.playerTask.taskMain.id == 4 && player.playerTask.taskMain.index == 6;
            case ConstTask.TASK_5_0:
                return player.playerTask.taskMain.id == 5 && player.playerTask.taskMain.index == 0;
            case ConstTask.TASK_5_1:
                return player.playerTask.taskMain.id == 5 && player.playerTask.taskMain.index == 1;
            case ConstTask.TASK_5_2:
                return player.playerTask.taskMain.id == 5 && player.playerTask.taskMain.index == 2;
            case ConstTask.TASK_5_3:
                return player.playerTask.taskMain.id == 5 && player.playerTask.taskMain.index == 3;
            case ConstTask.TASK_5_4:
                return player.playerTask.taskMain.id == 5 && player.playerTask.taskMain.index == 4;
            case ConstTask.TASK_5_5:
                return player.playerTask.taskMain.id == 5 && player.playerTask.taskMain.index == 5;
            case ConstTask.TASK_5_6:
                return player.playerTask.taskMain.id == 5 && player.playerTask.taskMain.index == 6;
            case ConstTask.TASK_6_0:
                return player.playerTask.taskMain.id == 6 && player.playerTask.taskMain.index == 0;
            case ConstTask.TASK_6_1:
                return player.playerTask.taskMain.id == 6 && player.playerTask.taskMain.index == 1;
            case ConstTask.TASK_6_2:
                return player.playerTask.taskMain.id == 6 && player.playerTask.taskMain.index == 2;
            case ConstTask.TASK_6_3:
                return player.playerTask.taskMain.id == 6 && player.playerTask.taskMain.index == 3;
            case ConstTask.TASK_6_4:
                return player.playerTask.taskMain.id == 6 && player.playerTask.taskMain.index == 4;
            case ConstTask.TASK_6_5:
                return player.playerTask.taskMain.id == 6 && player.playerTask.taskMain.index == 5;
            case ConstTask.TASK_6_6:
                return player.playerTask.taskMain.id == 6 && player.playerTask.taskMain.index == 6;
            case ConstTask.TASK_7_0:
                return player.playerTask.taskMain.id == 7 && player.playerTask.taskMain.index == 0;
            case ConstTask.TASK_7_1:
                return player.playerTask.taskMain.id == 7 && player.playerTask.taskMain.index == 1;
            case ConstTask.TASK_7_2:
                return player.playerTask.taskMain.id == 7 && player.playerTask.taskMain.index == 2;
            case ConstTask.TASK_7_3:
                return player.playerTask.taskMain.id == 7 && player.playerTask.taskMain.index == 3;
            case ConstTask.TASK_7_4:
                return player.playerTask.taskMain.id == 7 && player.playerTask.taskMain.index == 4;
            case ConstTask.TASK_7_5:
                return player.playerTask.taskMain.id == 7 && player.playerTask.taskMain.index == 5;
            case ConstTask.TASK_7_6:
                return player.playerTask.taskMain.id == 7 && player.playerTask.taskMain.index == 6;
            case ConstTask.TASK_8_0:
                return player.playerTask.taskMain.id == 8 && player.playerTask.taskMain.index == 0;
            case ConstTask.TASK_8_1:
                return player.playerTask.taskMain.id == 8 && player.playerTask.taskMain.index == 1;
            case ConstTask.TASK_8_2:
                return player.playerTask.taskMain.id == 8 && player.playerTask.taskMain.index == 2;
            case ConstTask.TASK_8_3:
                return player.playerTask.taskMain.id == 8 && player.playerTask.taskMain.index == 3;
            case ConstTask.TASK_8_4:
                return player.playerTask.taskMain.id == 8 && player.playerTask.taskMain.index == 4;
            case ConstTask.TASK_8_5:
                return player.playerTask.taskMain.id == 8 && player.playerTask.taskMain.index == 5;
            case ConstTask.TASK_8_6:
                return player.playerTask.taskMain.id == 8 && player.playerTask.taskMain.index == 6;
            case ConstTask.TASK_9_0:
                return player.playerTask.taskMain.id == 9 && player.playerTask.taskMain.index == 0;
            case ConstTask.TASK_9_1:
                return player.playerTask.taskMain.id == 9 && player.playerTask.taskMain.index == 1;
            case ConstTask.TASK_9_2:
                return player.playerTask.taskMain.id == 9 && player.playerTask.taskMain.index == 2;
            case ConstTask.TASK_9_3:
                return player.playerTask.taskMain.id == 9 && player.playerTask.taskMain.index == 3;
            case ConstTask.TASK_9_4:
                return player.playerTask.taskMain.id == 9 && player.playerTask.taskMain.index == 4;
            case ConstTask.TASK_9_5:
                return player.playerTask.taskMain.id == 9 && player.playerTask.taskMain.index == 5;
            case ConstTask.TASK_9_6:
                return player.playerTask.taskMain.id == 9 && player.playerTask.taskMain.index == 6;
            case ConstTask.TASK_10_0:
                return player.playerTask.taskMain.id == 10 && player.playerTask.taskMain.index == 0;
            case ConstTask.TASK_10_1:
                return player.playerTask.taskMain.id == 10 && player.playerTask.taskMain.index == 1;
            case ConstTask.TASK_10_2:
                return player.playerTask.taskMain.id == 10 && player.playerTask.taskMain.index == 2;
            case ConstTask.TASK_10_3:
                return player.playerTask.taskMain.id == 10 && player.playerTask.taskMain.index == 3;
            case ConstTask.TASK_10_4:
                return player.playerTask.taskMain.id == 10 && player.playerTask.taskMain.index == 4;
            case ConstTask.TASK_10_5:
                return player.playerTask.taskMain.id == 10 && player.playerTask.taskMain.index == 5;
            case ConstTask.TASK_10_6:
                return player.playerTask.taskMain.id == 10 && player.playerTask.taskMain.index == 6;
            case ConstTask.TASK_11_0:
                return player.playerTask.taskMain.id == 11 && player.playerTask.taskMain.index == 0;
            case ConstTask.TASK_11_1:
                return player.playerTask.taskMain.id == 11 && player.playerTask.taskMain.index == 1;
            case ConstTask.TASK_11_2:
                return player.playerTask.taskMain.id == 11 && player.playerTask.taskMain.index == 2;
            case ConstTask.TASK_11_3:
                return player.playerTask.taskMain.id == 11 && player.playerTask.taskMain.index == 3;
            case ConstTask.TASK_11_4:
                return player.playerTask.taskMain.id == 11 && player.playerTask.taskMain.index == 4;
            case ConstTask.TASK_11_5:
                return player.playerTask.taskMain.id == 11 && player.playerTask.taskMain.index == 5;
            case ConstTask.TASK_11_6:
                return player.playerTask.taskMain.id == 11 && player.playerTask.taskMain.index == 6;
            case ConstTask.TASK_12_0:
                return player.playerTask.taskMain.id == 12 && player.playerTask.taskMain.index == 0;
            case ConstTask.TASK_12_1:
                return player.playerTask.taskMain.id == 12 && player.playerTask.taskMain.index == 1;
            case ConstTask.TASK_12_2:
                return player.playerTask.taskMain.id == 12 && player.playerTask.taskMain.index == 2;
            case ConstTask.TASK_12_3:
                return player.playerTask.taskMain.id == 12 && player.playerTask.taskMain.index == 3;
            case ConstTask.TASK_12_4:
                return player.playerTask.taskMain.id == 12 && player.playerTask.taskMain.index == 4;
            case ConstTask.TASK_12_5:
                return player.playerTask.taskMain.id == 12 && player.playerTask.taskMain.index == 5;
            case ConstTask.TASK_12_6:
                return player.playerTask.taskMain.id == 12 && player.playerTask.taskMain.index == 6;
            case ConstTask.TASK_13_0:
                return player.playerTask.taskMain.id == 13 && player.playerTask.taskMain.index == 0;
            case ConstTask.TASK_13_1:
                return player.playerTask.taskMain.id == 13 && player.playerTask.taskMain.index == 1;
            case ConstTask.TASK_13_2:
                return player.playerTask.taskMain.id == 13 && player.playerTask.taskMain.index == 2;
            case ConstTask.TASK_13_3:
                return player.playerTask.taskMain.id == 13 && player.playerTask.taskMain.index == 3;
            case ConstTask.TASK_13_4:
                return player.playerTask.taskMain.id == 13 && player.playerTask.taskMain.index == 4;
            case ConstTask.TASK_13_5:
                return player.playerTask.taskMain.id == 13 && player.playerTask.taskMain.index == 5;
            case ConstTask.TASK_13_6:
                return player.playerTask.taskMain.id == 13 && player.playerTask.taskMain.index == 6;
            case ConstTask.TASK_14_0:
                return player.playerTask.taskMain.id == 14 && player.playerTask.taskMain.index == 0;
            case ConstTask.TASK_14_1:
                return player.playerTask.taskMain.id == 14 && player.playerTask.taskMain.index == 1;
            case ConstTask.TASK_14_2:
                return player.playerTask.taskMain.id == 14 && player.playerTask.taskMain.index == 2;
            case ConstTask.TASK_14_3:
                return player.playerTask.taskMain.id == 14 && player.playerTask.taskMain.index == 3;
            case ConstTask.TASK_14_4:
                return player.playerTask.taskMain.id == 14 && player.playerTask.taskMain.index == 4;
            case ConstTask.TASK_14_5:
                return player.playerTask.taskMain.id == 14 && player.playerTask.taskMain.index == 5;
            case ConstTask.TASK_14_6:
                return player.playerTask.taskMain.id == 14 && player.playerTask.taskMain.index == 6;
            case ConstTask.TASK_15_0:
                return player.playerTask.taskMain.id == 15 && player.playerTask.taskMain.index == 0;
            case ConstTask.TASK_15_1:
                return player.playerTask.taskMain.id == 15 && player.playerTask.taskMain.index == 1;
            case ConstTask.TASK_15_2:
                return player.playerTask.taskMain.id == 15 && player.playerTask.taskMain.index == 2;
            case ConstTask.TASK_15_3:
                return player.playerTask.taskMain.id == 15 && player.playerTask.taskMain.index == 3;
            case ConstTask.TASK_15_4:
                return player.playerTask.taskMain.id == 15 && player.playerTask.taskMain.index == 4;
            case ConstTask.TASK_15_5:
                return player.playerTask.taskMain.id == 15 && player.playerTask.taskMain.index == 5;
            case ConstTask.TASK_15_6:
                return player.playerTask.taskMain.id == 15 && player.playerTask.taskMain.index == 6;
            case ConstTask.TASK_16_0:
                return player.playerTask.taskMain.id == 16 && player.playerTask.taskMain.index == 0;
            case ConstTask.TASK_16_1:
                return player.playerTask.taskMain.id == 16 && player.playerTask.taskMain.index == 1;
            case ConstTask.TASK_16_2:
                return player.playerTask.taskMain.id == 16 && player.playerTask.taskMain.index == 2;
            case ConstTask.TASK_16_3:
                return player.playerTask.taskMain.id == 16 && player.playerTask.taskMain.index == 3;
            case ConstTask.TASK_16_4:
                return player.playerTask.taskMain.id == 16 && player.playerTask.taskMain.index == 4;
            case ConstTask.TASK_16_5:
                return player.playerTask.taskMain.id == 16 && player.playerTask.taskMain.index == 5;
            case ConstTask.TASK_16_6:
                return player.playerTask.taskMain.id == 16 && player.playerTask.taskMain.index == 6;
            case ConstTask.TASK_17_0:
                return player.playerTask.taskMain.id == 17 && player.playerTask.taskMain.index == 0;
            case ConstTask.TASK_17_1:
                return player.playerTask.taskMain.id == 17 && player.playerTask.taskMain.index == 1;
            case ConstTask.TASK_17_2:
                return player.playerTask.taskMain.id == 17 && player.playerTask.taskMain.index == 2;
            case ConstTask.TASK_17_3:
                return player.playerTask.taskMain.id == 17 && player.playerTask.taskMain.index == 3;
            case ConstTask.TASK_17_4:
                return player.playerTask.taskMain.id == 17 && player.playerTask.taskMain.index == 4;
            case ConstTask.TASK_17_5:
                return player.playerTask.taskMain.id == 17 && player.playerTask.taskMain.index == 5;
            case ConstTask.TASK_17_6:
                return player.playerTask.taskMain.id == 17 && player.playerTask.taskMain.index == 6;
            case ConstTask.TASK_18_0:
                return player.playerTask.taskMain.id == 18 && player.playerTask.taskMain.index == 0;
            case ConstTask.TASK_18_1:
                return player.playerTask.taskMain.id == 18 && player.playerTask.taskMain.index == 1;
            case ConstTask.TASK_18_2:
                return player.playerTask.taskMain.id == 18 && player.playerTask.taskMain.index == 2;
            case ConstTask.TASK_18_3:
                return player.playerTask.taskMain.id == 18 && player.playerTask.taskMain.index == 3;
            case ConstTask.TASK_18_4:
                return player.playerTask.taskMain.id == 18 && player.playerTask.taskMain.index == 4;
            case ConstTask.TASK_18_5:
                return player.playerTask.taskMain.id == 18 && player.playerTask.taskMain.index == 5;
            case ConstTask.TASK_18_6:
                return player.playerTask.taskMain.id == 18 && player.playerTask.taskMain.index == 6;
            case ConstTask.TASK_19_0:
                return player.playerTask.taskMain.id == 19 && player.playerTask.taskMain.index == 0;
            case ConstTask.TASK_19_1:
                return player.playerTask.taskMain.id == 19 && player.playerTask.taskMain.index == 1;
            case ConstTask.TASK_19_2:
                return player.playerTask.taskMain.id == 19 && player.playerTask.taskMain.index == 2;
            case ConstTask.TASK_19_3:
                return player.playerTask.taskMain.id == 19 && player.playerTask.taskMain.index == 3;
            case ConstTask.TASK_19_4:
                return player.playerTask.taskMain.id == 19 && player.playerTask.taskMain.index == 4;
            case ConstTask.TASK_19_5:
                return player.playerTask.taskMain.id == 19 && player.playerTask.taskMain.index == 5;
            case ConstTask.TASK_19_6:
                return player.playerTask.taskMain.id == 19 && player.playerTask.taskMain.index == 6;
            case ConstTask.TASK_20_0:
                return player.playerTask.taskMain.id == 20 && player.playerTask.taskMain.index == 0;
            case ConstTask.TASK_20_1:
                return player.playerTask.taskMain.id == 20 && player.playerTask.taskMain.index == 1;
            case ConstTask.TASK_20_2:
                return player.playerTask.taskMain.id == 20 && player.playerTask.taskMain.index == 2;
            case ConstTask.TASK_20_3:
                return player.playerTask.taskMain.id == 20 && player.playerTask.taskMain.index == 3;
            case ConstTask.TASK_20_4:
                return player.playerTask.taskMain.id == 20 && player.playerTask.taskMain.index == 4;
            case ConstTask.TASK_20_5:
                return player.playerTask.taskMain.id == 20 && player.playerTask.taskMain.index == 5;
            case ConstTask.TASK_20_6:
                return player.playerTask.taskMain.id == 20 && player.playerTask.taskMain.index == 6;
            case ConstTask.TASK_21_0:
                return player.playerTask.taskMain.id == 21 && player.playerTask.taskMain.index == 0;
            case ConstTask.TASK_21_1:
                return player.playerTask.taskMain.id == 21 && player.playerTask.taskMain.index == 1;
            case ConstTask.TASK_21_2:
                return player.playerTask.taskMain.id == 21 && player.playerTask.taskMain.index == 2;
            case ConstTask.TASK_21_3:
                return player.playerTask.taskMain.id == 21 && player.playerTask.taskMain.index == 3;
            case ConstTask.TASK_21_4:
                return player.playerTask.taskMain.id == 21 && player.playerTask.taskMain.index == 4;
            case ConstTask.TASK_21_5:
                return player.playerTask.taskMain.id == 21 && player.playerTask.taskMain.index == 5;
            case ConstTask.TASK_21_6:
                return player.playerTask.taskMain.id == 21 && player.playerTask.taskMain.index == 6;
            case ConstTask.TASK_22_0:
                return player.playerTask.taskMain.id == 22 && player.playerTask.taskMain.index == 0;
            case ConstTask.TASK_22_1:
                return player.playerTask.taskMain.id == 22 && player.playerTask.taskMain.index == 1;
            case ConstTask.TASK_22_2:
                return player.playerTask.taskMain.id == 22 && player.playerTask.taskMain.index == 2;
            case ConstTask.TASK_22_3:
                return player.playerTask.taskMain.id == 22 && player.playerTask.taskMain.index == 3;
            case ConstTask.TASK_22_4:
                return player.playerTask.taskMain.id == 22 && player.playerTask.taskMain.index == 4;
            case ConstTask.TASK_22_5:
                return player.playerTask.taskMain.id == 22 && player.playerTask.taskMain.index == 5;
            case ConstTask.TASK_22_6:
                return player.playerTask.taskMain.id == 22 && player.playerTask.taskMain.index == 6;
            case ConstTask.TASK_23_0:
                return player.playerTask.taskMain.id == 23 && player.playerTask.taskMain.index == 0;
            case ConstTask.TASK_23_1:
                return player.playerTask.taskMain.id == 23 && player.playerTask.taskMain.index == 1;
            case ConstTask.TASK_23_2:
                return player.playerTask.taskMain.id == 23 && player.playerTask.taskMain.index == 2;
            case ConstTask.TASK_23_3:
                return player.playerTask.taskMain.id == 23 && player.playerTask.taskMain.index == 3;
            case ConstTask.TASK_23_4:
                return player.playerTask.taskMain.id == 23 && player.playerTask.taskMain.index == 4;
            case ConstTask.TASK_23_5:
                return player.playerTask.taskMain.id == 23 && player.playerTask.taskMain.index == 5;
            case ConstTask.TASK_23_6:
                return player.playerTask.taskMain.id == 23 && player.playerTask.taskMain.index == 6;
            case ConstTask.TASK_24_0:
                return player.playerTask.taskMain.id == 24 && player.playerTask.taskMain.index == 0;
            case ConstTask.TASK_24_1:
                return player.playerTask.taskMain.id == 24 && player.playerTask.taskMain.index == 1;
            case ConstTask.TASK_24_2:
                return player.playerTask.taskMain.id == 24 && player.playerTask.taskMain.index == 2;
            case ConstTask.TASK_24_3:
                return player.playerTask.taskMain.id == 24 && player.playerTask.taskMain.index == 3;
            case ConstTask.TASK_24_4:
                return player.playerTask.taskMain.id == 24 && player.playerTask.taskMain.index == 4;
            case ConstTask.TASK_24_5:
                return player.playerTask.taskMain.id == 24 && player.playerTask.taskMain.index == 5;
            case ConstTask.TASK_24_6:
                return player.playerTask.taskMain.id == 24 && player.playerTask.taskMain.index == 6;
            case ConstTask.TASK_25_0:
                return player.playerTask.taskMain.id == 25 && player.playerTask.taskMain.index == 0;
            case ConstTask.TASK_25_1:
                return player.playerTask.taskMain.id == 25 && player.playerTask.taskMain.index == 1;
            case ConstTask.TASK_25_2:
                return player.playerTask.taskMain.id == 25 && player.playerTask.taskMain.index == 2;
            case ConstTask.TASK_25_3:
                return player.playerTask.taskMain.id == 25 && player.playerTask.taskMain.index == 3;
            case ConstTask.TASK_25_4:
                return player.playerTask.taskMain.id == 25 && player.playerTask.taskMain.index == 4;
            case ConstTask.TASK_25_5:
                return player.playerTask.taskMain.id == 25 && player.playerTask.taskMain.index == 5;
            case ConstTask.TASK_25_6:
                return player.playerTask.taskMain.id == 25 && player.playerTask.taskMain.index == 6;
            case ConstTask.TASK_26_0:
                return player.playerTask.taskMain.id == 26 && player.playerTask.taskMain.index == 0;
            case ConstTask.TASK_26_1:
                return player.playerTask.taskMain.id == 26 && player.playerTask.taskMain.index == 1;
            case ConstTask.TASK_26_2:
                return player.playerTask.taskMain.id == 26 && player.playerTask.taskMain.index == 2;
            case ConstTask.TASK_26_3:
                return player.playerTask.taskMain.id == 26 && player.playerTask.taskMain.index == 3;
            case ConstTask.TASK_26_4:
                return player.playerTask.taskMain.id == 26 && player.playerTask.taskMain.index == 4;
            case ConstTask.TASK_26_5:
                return player.playerTask.taskMain.id == 26 && player.playerTask.taskMain.index == 5;
            case ConstTask.TASK_26_6:
                return player.playerTask.taskMain.id == 26 && player.playerTask.taskMain.index == 6;
            case ConstTask.TASK_27_0:
                return player.playerTask.taskMain.id == 27 && player.playerTask.taskMain.index == 0;
            case ConstTask.TASK_27_1:
                return player.playerTask.taskMain.id == 27 && player.playerTask.taskMain.index == 1;
            case ConstTask.TASK_27_2:
                return player.playerTask.taskMain.id == 27 && player.playerTask.taskMain.index == 2;
            case ConstTask.TASK_27_3:
                return player.playerTask.taskMain.id == 27 && player.playerTask.taskMain.index == 3;
            case ConstTask.TASK_27_4:
                return player.playerTask.taskMain.id == 27 && player.playerTask.taskMain.index == 4;
            case ConstTask.TASK_27_5:
                return player.playerTask.taskMain.id == 27 && player.playerTask.taskMain.index == 5;
            case ConstTask.TASK_27_6:
                return player.playerTask.taskMain.id == 27 && player.playerTask.taskMain.index == 6;
            case ConstTask.TASK_28_0:
                return player.playerTask.taskMain.id == 28 && player.playerTask.taskMain.index == 0;
            case ConstTask.TASK_28_1:
                return player.playerTask.taskMain.id == 28 && player.playerTask.taskMain.index == 1;
            case ConstTask.TASK_28_2:
                return player.playerTask.taskMain.id == 28 && player.playerTask.taskMain.index == 2;
            case ConstTask.TASK_28_3:
                return player.playerTask.taskMain.id == 28 && player.playerTask.taskMain.index == 3;
            case ConstTask.TASK_28_4:
                return player.playerTask.taskMain.id == 28 && player.playerTask.taskMain.index == 4;
            case ConstTask.TASK_28_5:
                return player.playerTask.taskMain.id == 28 && player.playerTask.taskMain.index == 5;
            case ConstTask.TASK_28_6:
                return player.playerTask.taskMain.id == 28 && player.playerTask.taskMain.index == 6;
            case ConstTask.TASK_29_0:
                return player.playerTask.taskMain.id == 29 && player.playerTask.taskMain.index == 0;
            case ConstTask.TASK_29_1:
                return player.playerTask.taskMain.id == 29 && player.playerTask.taskMain.index == 1;
            case ConstTask.TASK_29_2:
                return player.playerTask.taskMain.id == 29 && player.playerTask.taskMain.index == 2;
            case ConstTask.TASK_29_3:
                return player.playerTask.taskMain.id == 29 && player.playerTask.taskMain.index == 3;
            case ConstTask.TASK_29_4:
                return player.playerTask.taskMain.id == 29 && player.playerTask.taskMain.index == 4;
            case ConstTask.TASK_29_5:
                return player.playerTask.taskMain.id == 29 && player.playerTask.taskMain.index == 5;
            case ConstTask.TASK_29_6:
                return player.playerTask.taskMain.id == 29 && player.playerTask.taskMain.index == 6;
            case ConstTask.TASK_30_0:
                return player.playerTask.taskMain.id == 30 && player.playerTask.taskMain.index == 0;
            case ConstTask.TASK_30_1:
                return player.playerTask.taskMain.id == 30 && player.playerTask.taskMain.index == 1;
            case ConstTask.TASK_30_2:
                return player.playerTask.taskMain.id == 30 && player.playerTask.taskMain.index == 2;
            case ConstTask.TASK_30_3:
                return player.playerTask.taskMain.id == 30 && player.playerTask.taskMain.index == 3;
            case ConstTask.TASK_30_4:
                return player.playerTask.taskMain.id == 30 && player.playerTask.taskMain.index == 4;
            case ConstTask.TASK_30_5:
                return player.playerTask.taskMain.id == 30 && player.playerTask.taskMain.index == 5;
            case ConstTask.TASK_30_6:
                return player.playerTask.taskMain.id == 30 && player.playerTask.taskMain.index == 6;
            case ConstTask.TASK_31_0:
                return player.playerTask.taskMain.id == 31 && player.playerTask.taskMain.index == 0;
            case ConstTask.TASK_31_1:
                return player.playerTask.taskMain.id == 31 && player.playerTask.taskMain.index == 1;
            case ConstTask.TASK_31_2:
                return player.playerTask.taskMain.id == 31 && player.playerTask.taskMain.index == 2;
            case ConstTask.TASK_31_3:
                return player.playerTask.taskMain.id == 31 && player.playerTask.taskMain.index == 3;
            case ConstTask.TASK_31_4:
                return player.playerTask.taskMain.id == 31 && player.playerTask.taskMain.index == 4;
            case ConstTask.TASK_31_5:
                return player.playerTask.taskMain.id == 31 && player.playerTask.taskMain.index == 5;
            case ConstTask.TASK_31_6:
                return player.playerTask.taskMain.id == 31 && player.playerTask.taskMain.index == 6;
            case ConstTask.TASK_32_0:
                return player.playerTask.taskMain.id == 32 && player.playerTask.taskMain.index == 0;
            case ConstTask.TASK_32_1:
                return player.playerTask.taskMain.id == 32 && player.playerTask.taskMain.index == 1;
            case ConstTask.TASK_32_2:
                return player.playerTask.taskMain.id == 32 && player.playerTask.taskMain.index == 2;
            case ConstTask.TASK_32_3:
                return player.playerTask.taskMain.id == 32 && player.playerTask.taskMain.index == 3;
            case ConstTask.TASK_32_4:
                return player.playerTask.taskMain.id == 32 && player.playerTask.taskMain.index == 4;
            case ConstTask.TASK_32_5:
                return player.playerTask.taskMain.id == 32 && player.playerTask.taskMain.index == 5;
            case ConstTask.TASK_32_6:
                return player.playerTask.taskMain.id == 32 && player.playerTask.taskMain.index == 6;
            case ConstTask.TASK_33_0:
                return player.playerTask.taskMain.id == 33 && player.playerTask.taskMain.index == 0;
            case ConstTask.TASK_33_1:
                return player.playerTask.taskMain.id == 33 && player.playerTask.taskMain.index == 1;
            case ConstTask.TASK_33_2:
                return player.playerTask.taskMain.id == 33 && player.playerTask.taskMain.index == 2;
            case ConstTask.TASK_33_3:
                return player.playerTask.taskMain.id == 33 && player.playerTask.taskMain.index == 3;
            case ConstTask.TASK_33_4:
                return player.playerTask.taskMain.id == 33 && player.playerTask.taskMain.index == 4;
            case ConstTask.TASK_33_5:
                return player.playerTask.taskMain.id == 33 && player.playerTask.taskMain.index == 5;
            case ConstTask.TASK_33_6:
                return player.playerTask.taskMain.id == 33 && player.playerTask.taskMain.index == 6;
            case ConstTask.TASK_34_0:
                return player.playerTask.taskMain.id == 34 && player.playerTask.taskMain.index == 0;
            case ConstTask.TASK_34_1:
                return player.playerTask.taskMain.id == 34 && player.playerTask.taskMain.index == 1;
            case ConstTask.TASK_34_2:
                return player.playerTask.taskMain.id == 34 && player.playerTask.taskMain.index == 2;
            case ConstTask.TASK_34_3:
                return player.playerTask.taskMain.id == 34 && player.playerTask.taskMain.index == 3;
            case ConstTask.TASK_34_4:
                return player.playerTask.taskMain.id == 34 && player.playerTask.taskMain.index == 4;
            case ConstTask.TASK_34_5:
                return player.playerTask.taskMain.id == 34 && player.playerTask.taskMain.index == 5;
            case ConstTask.TASK_34_6:
                return player.playerTask.taskMain.id == 34 && player.playerTask.taskMain.index == 6;
            case ConstTask.TASK_35_0:
                return player.playerTask.taskMain.id == 35 && player.playerTask.taskMain.index == 0;
            case ConstTask.TASK_35_1:
                return player.playerTask.taskMain.id == 35 && player.playerTask.taskMain.index == 1;
            case ConstTask.TASK_35_2:
                return player.playerTask.taskMain.id == 35 && player.playerTask.taskMain.index == 2;
            case ConstTask.TASK_35_3:
                return player.playerTask.taskMain.id == 35 && player.playerTask.taskMain.index == 3;
            case ConstTask.TASK_35_4:
                return player.playerTask.taskMain.id == 35 && player.playerTask.taskMain.index == 4;
            case ConstTask.TASK_35_5:
                return player.playerTask.taskMain.id == 35 && player.playerTask.taskMain.index == 5;
            case ConstTask.TASK_35_6:
                return player.playerTask.taskMain.id == 35 && player.playerTask.taskMain.index == 6;
            case ConstTask.TASK_36_0:
                return player.playerTask.taskMain.id == 36 && player.playerTask.taskMain.index == 0;
            case ConstTask.TASK_36_1:
                return player.playerTask.taskMain.id == 36 && player.playerTask.taskMain.index == 1;
            case ConstTask.TASK_36_2:
                return player.playerTask.taskMain.id == 36 && player.playerTask.taskMain.index == 2;
            case ConstTask.TASK_36_3:
                return player.playerTask.taskMain.id == 36 && player.playerTask.taskMain.index == 3;
            case ConstTask.TASK_36_4:
                return player.playerTask.taskMain.id == 36 && player.playerTask.taskMain.index == 4;
            case ConstTask.TASK_36_5:
                return player.playerTask.taskMain.id == 36 && player.playerTask.taskMain.index == 5;
            case ConstTask.TASK_36_6:
                return player.playerTask.taskMain.id == 36 && player.playerTask.taskMain.index == 6;
            case ConstTask.TASK_37_0:
                return player.playerTask.taskMain.id == 37 && player.playerTask.taskMain.index == 0;
            case ConstTask.TASK_37_1:
                return player.playerTask.taskMain.id == 37 && player.playerTask.taskMain.index == 1;
            case ConstTask.TASK_37_2:
                return player.playerTask.taskMain.id == 37 && player.playerTask.taskMain.index == 2;
            case ConstTask.TASK_37_3:
                return player.playerTask.taskMain.id == 37 && player.playerTask.taskMain.index == 3;
            case ConstTask.TASK_37_4:
                return player.playerTask.taskMain.id == 37 && player.playerTask.taskMain.index == 4;
            case ConstTask.TASK_37_5:
                return player.playerTask.taskMain.id == 37 && player.playerTask.taskMain.index == 5;
            case ConstTask.TASK_37_6:
                return player.playerTask.taskMain.id == 37 && player.playerTask.taskMain.index == 6;
            case ConstTask.TASK_38_0:
                return player.playerTask.taskMain.id == 38 && player.playerTask.taskMain.index == 0;
            case ConstTask.TASK_38_1:
                return player.playerTask.taskMain.id == 38 && player.playerTask.taskMain.index == 1;
            case ConstTask.TASK_38_2:
                return player.playerTask.taskMain.id == 38 && player.playerTask.taskMain.index == 2;
            case ConstTask.TASK_38_3:
                return player.playerTask.taskMain.id == 38 && player.playerTask.taskMain.index == 3;
            case ConstTask.TASK_38_4:
                return player.playerTask.taskMain.id == 38 && player.playerTask.taskMain.index == 4;
            case ConstTask.TASK_38_5:
                return player.playerTask.taskMain.id == 38 && player.playerTask.taskMain.index == 5;
            case ConstTask.TASK_38_6:
                return player.playerTask.taskMain.id == 38 && player.playerTask.taskMain.index == 6;
            case ConstTask.TASK_39_0:
                return player.playerTask.taskMain.id == 39 && player.playerTask.taskMain.index == 0;
            case ConstTask.TASK_39_1:
                return player.playerTask.taskMain.id == 39 && player.playerTask.taskMain.index == 1;
            case ConstTask.TASK_39_2:
                return player.playerTask.taskMain.id == 39 && player.playerTask.taskMain.index == 2;
            case ConstTask.TASK_39_3:
                return player.playerTask.taskMain.id == 39 && player.playerTask.taskMain.index == 3;
            case ConstTask.TASK_39_4:
                return player.playerTask.taskMain.id == 39 && player.playerTask.taskMain.index == 4;
            case ConstTask.TASK_39_5:
                return player.playerTask.taskMain.id == 39 && player.playerTask.taskMain.index == 5;
            case ConstTask.TASK_39_6:
                return player.playerTask.taskMain.id == 39 && player.playerTask.taskMain.index == 6;
            case ConstTask.TASK_40_0:
                return player.playerTask.taskMain.id == 40 && player.playerTask.taskMain.index == 0;
            case ConstTask.TASK_40_1:
                return player.playerTask.taskMain.id == 40 && player.playerTask.taskMain.index == 1;
            case ConstTask.TASK_40_2:
                return player.playerTask.taskMain.id == 40 && player.playerTask.taskMain.index == 2;
            case ConstTask.TASK_40_3:
                return player.playerTask.taskMain.id == 40 && player.playerTask.taskMain.index == 3;
            case ConstTask.TASK_40_4:
                return player.playerTask.taskMain.id == 40 && player.playerTask.taskMain.index == 4;
            case ConstTask.TASK_40_5:
                return player.playerTask.taskMain.id == 40 && player.playerTask.taskMain.index == 5;
            case ConstTask.TASK_40_6:
                return player.playerTask.taskMain.id == 40 && player.playerTask.taskMain.index == 6;
            case ConstTask.TASK_41_0:
                return player.playerTask.taskMain.id == 41 && player.playerTask.taskMain.index == 0;
            case ConstTask.TASK_41_1:
                return player.playerTask.taskMain.id == 41 && player.playerTask.taskMain.index == 1;
            case ConstTask.TASK_41_2:
                return player.playerTask.taskMain.id == 41 && player.playerTask.taskMain.index == 2;
            case ConstTask.TASK_41_3:
                return player.playerTask.taskMain.id == 41 && player.playerTask.taskMain.index == 3;
            case ConstTask.TASK_41_4:
                return player.playerTask.taskMain.id == 41 && player.playerTask.taskMain.index == 4;
            case ConstTask.TASK_41_5:
                return player.playerTask.taskMain.id == 41 && player.playerTask.taskMain.index == 5;
            case ConstTask.TASK_41_6:
                return player.playerTask.taskMain.id == 41 && player.playerTask.taskMain.index == 6;
            case ConstTask.TASK_42_0:
                return player.playerTask.taskMain.id == 42 && player.playerTask.taskMain.index == 0;
            case ConstTask.TASK_42_1:
                return player.playerTask.taskMain.id == 42 && player.playerTask.taskMain.index == 1;
            case ConstTask.TASK_42_2:
                return player.playerTask.taskMain.id == 42 && player.playerTask.taskMain.index == 2;
            case ConstTask.TASK_42_3:
                return player.playerTask.taskMain.id == 42 && player.playerTask.taskMain.index == 3;
            case ConstTask.TASK_42_4:
                return player.playerTask.taskMain.id == 42 && player.playerTask.taskMain.index == 4;
            case ConstTask.TASK_42_5:
                return player.playerTask.taskMain.id == 42 && player.playerTask.taskMain.index == 5;
            case ConstTask.TASK_42_6:
                return player.playerTask.taskMain.id == 42 && player.playerTask.taskMain.index == 6;
            case ConstTask.TASK_43_0:
                return player.playerTask.taskMain.id == 43 && player.playerTask.taskMain.index == 0;
            case ConstTask.TASK_43_1:
                return player.playerTask.taskMain.id == 43 && player.playerTask.taskMain.index == 1;
            case ConstTask.TASK_43_2:
                return player.playerTask.taskMain.id == 43 && player.playerTask.taskMain.index == 2;
            case ConstTask.TASK_43_3:
                return player.playerTask.taskMain.id == 43 && player.playerTask.taskMain.index == 3;
            case ConstTask.TASK_43_4:
                return player.playerTask.taskMain.id == 43 && player.playerTask.taskMain.index == 4;
            case ConstTask.TASK_43_5:
                return player.playerTask.taskMain.id == 43 && player.playerTask.taskMain.index == 5;
            case ConstTask.TASK_43_6:
                return player.playerTask.taskMain.id == 43 && player.playerTask.taskMain.index == 6;
            case ConstTask.TASK_44_0:
                return player.playerTask.taskMain.id == 44 && player.playerTask.taskMain.index == 0;
            case ConstTask.TASK_44_1:
                return player.playerTask.taskMain.id == 44 && player.playerTask.taskMain.index == 1;
            case ConstTask.TASK_44_2:
                return player.playerTask.taskMain.id == 44 && player.playerTask.taskMain.index == 2;
            case ConstTask.TASK_44_3:
                return player.playerTask.taskMain.id == 44 && player.playerTask.taskMain.index == 3;
            case ConstTask.TASK_44_4:
                return player.playerTask.taskMain.id == 44 && player.playerTask.taskMain.index == 4;
            case ConstTask.TASK_44_5:
                return player.playerTask.taskMain.id == 44 && player.playerTask.taskMain.index == 5;
            case ConstTask.TASK_44_6:
                return player.playerTask.taskMain.id == 44 && player.playerTask.taskMain.index == 6;
            case ConstTask.TASK_45_0:
                return player.playerTask.taskMain.id == 45 && player.playerTask.taskMain.index == 0;
            case ConstTask.TASK_45_1:
                return player.playerTask.taskMain.id == 45 && player.playerTask.taskMain.index == 1;
            case ConstTask.TASK_45_2:
                return player.playerTask.taskMain.id == 45 && player.playerTask.taskMain.index == 2;
            case ConstTask.TASK_45_3:
                return player.playerTask.taskMain.id == 45 && player.playerTask.taskMain.index == 3;
            case ConstTask.TASK_45_4:
                return player.playerTask.taskMain.id == 45 && player.playerTask.taskMain.index == 4;
            case ConstTask.TASK_45_5:
                return player.playerTask.taskMain.id == 45 && player.playerTask.taskMain.index == 5;
            case ConstTask.TASK_45_6:
                return player.playerTask.taskMain.id == 45 && player.playerTask.taskMain.index == 6;
            case ConstTask.TASK_46_0:
                return player.playerTask.taskMain.id == 46 && player.playerTask.taskMain.index == 0;
            case ConstTask.TASK_46_1:
                return player.playerTask.taskMain.id == 46 && player.playerTask.taskMain.index == 1;
            case ConstTask.TASK_46_2:
                return player.playerTask.taskMain.id == 46 && player.playerTask.taskMain.index == 2;
            case ConstTask.TASK_46_3:
                return player.playerTask.taskMain.id == 46 && player.playerTask.taskMain.index == 3;
            case ConstTask.TASK_46_4:
                return player.playerTask.taskMain.id == 46 && player.playerTask.taskMain.index == 4;
            case ConstTask.TASK_46_5:
                return player.playerTask.taskMain.id == 46 && player.playerTask.taskMain.index == 5;
            case ConstTask.TASK_46_6:
                return player.playerTask.taskMain.id == 46 && player.playerTask.taskMain.index == 6;
            case ConstTask.TASK_47_0:
                return player.playerTask.taskMain.id == 47 && player.playerTask.taskMain.index == 0;
            case ConstTask.TASK_47_1:
                return player.playerTask.taskMain.id == 47 && player.playerTask.taskMain.index == 1;
            case ConstTask.TASK_47_2:
                return player.playerTask.taskMain.id == 47 && player.playerTask.taskMain.index == 2;
            case ConstTask.TASK_47_3:
                return player.playerTask.taskMain.id == 47 && player.playerTask.taskMain.index == 3;
            case ConstTask.TASK_47_4:
                return player.playerTask.taskMain.id == 47 && player.playerTask.taskMain.index == 4;
            case ConstTask.TASK_47_5:
                return player.playerTask.taskMain.id == 47 && player.playerTask.taskMain.index == 5;
            case ConstTask.TASK_47_6:
                return player.playerTask.taskMain.id == 47 && player.playerTask.taskMain.index == 6;
            case ConstTask.TASK_48_0:
                return player.playerTask.taskMain.id == 48 && player.playerTask.taskMain.index == 0;
            case ConstTask.TASK_48_1:
                return player.playerTask.taskMain.id == 48 && player.playerTask.taskMain.index == 1;
            case ConstTask.TASK_48_2:
                return player.playerTask.taskMain.id == 48 && player.playerTask.taskMain.index == 2;
            case ConstTask.TASK_48_3:
                return player.playerTask.taskMain.id == 48 && player.playerTask.taskMain.index == 3;
            case ConstTask.TASK_48_4:
                return player.playerTask.taskMain.id == 48 && player.playerTask.taskMain.index == 4;
            case ConstTask.TASK_48_5:
                return player.playerTask.taskMain.id == 48 && player.playerTask.taskMain.index == 5;
            case ConstTask.TASK_48_6:
                return player.playerTask.taskMain.id == 48 && player.playerTask.taskMain.index == 6;
            case ConstTask.TASK_49_0:
                return player.playerTask.taskMain.id == 49 && player.playerTask.taskMain.index == 0;
            case ConstTask.TASK_49_1:
                return player.playerTask.taskMain.id == 49 && player.playerTask.taskMain.index == 1;
            case ConstTask.TASK_49_2:
                return player.playerTask.taskMain.id == 49 && player.playerTask.taskMain.index == 2;
            case ConstTask.TASK_49_3:
                return player.playerTask.taskMain.id == 49 && player.playerTask.taskMain.index == 3;
            case ConstTask.TASK_49_4:
                return player.playerTask.taskMain.id == 49 && player.playerTask.taskMain.index == 4;
            case ConstTask.TASK_49_5:
                return player.playerTask.taskMain.id == 49 && player.playerTask.taskMain.index == 5;
            case ConstTask.TASK_49_6:
                return player.playerTask.taskMain.id == 49 && player.playerTask.taskMain.index == 6;
            case ConstTask.TASK_50_0:
                return player.playerTask.taskMain.id == 50 && player.playerTask.taskMain.index == 0;
            case ConstTask.TASK_50_1:
                return player.playerTask.taskMain.id == 50 && player.playerTask.taskMain.index == 1;
            case ConstTask.TASK_50_2:
                return player.playerTask.taskMain.id == 50 && player.playerTask.taskMain.index == 2;
            case ConstTask.TASK_50_3:
                return player.playerTask.taskMain.id == 50 && player.playerTask.taskMain.index == 3;
            case ConstTask.TASK_50_4:
                return player.playerTask.taskMain.id == 50 && player.playerTask.taskMain.index == 4;
            case ConstTask.TASK_50_5:
                return player.playerTask.taskMain.id == 50 && player.playerTask.taskMain.index == 5;
            case ConstTask.TASK_50_6:
                return player.playerTask.taskMain.id == 50 && player.playerTask.taskMain.index == 6;
        }
        return false;
    }

    public int getIdTask(Player player) {
        if (player.isPet || player.isBoss || player.playerTask == null || player.playerTask.taskMain == null) {
            return -1;
        } else if (player.playerTask.taskMain.id == 0 && player.playerTask.taskMain.index == 0) {
            return ConstTask.TASK_0_0;
        } else if (player.playerTask.taskMain.id == 0 && player.playerTask.taskMain.index == 1) {
            return ConstTask.TASK_0_1;
        } else if (player.playerTask.taskMain.id == 0 && player.playerTask.taskMain.index == 2) {
            return ConstTask.TASK_0_2;
        } else if (player.playerTask.taskMain.id == 0 && player.playerTask.taskMain.index == 3) {
            return ConstTask.TASK_0_3;
        } else if (player.playerTask.taskMain.id == 0 && player.playerTask.taskMain.index == 4) {
            return ConstTask.TASK_0_4;
        } else if (player.playerTask.taskMain.id == 0 && player.playerTask.taskMain.index == 5) {
            return ConstTask.TASK_0_5;
        } else if (player.playerTask.taskMain.id == 0 && player.playerTask.taskMain.index == 6) {
            return ConstTask.TASK_0_6;
        } else if (player.playerTask.taskMain.id == 1 && player.playerTask.taskMain.index == 0) {
            return ConstTask.TASK_1_0;
        } else if (player.playerTask.taskMain.id == 1 && player.playerTask.taskMain.index == 1) {
            return ConstTask.TASK_1_1;
        } else if (player.playerTask.taskMain.id == 1 && player.playerTask.taskMain.index == 2) {
            return ConstTask.TASK_1_2;
        } else if (player.playerTask.taskMain.id == 1 && player.playerTask.taskMain.index == 3) {
            return ConstTask.TASK_1_3;
        } else if (player.playerTask.taskMain.id == 1 && player.playerTask.taskMain.index == 4) {
            return ConstTask.TASK_1_4;
        } else if (player.playerTask.taskMain.id == 1 && player.playerTask.taskMain.index == 5) {
            return ConstTask.TASK_1_5;
        } else if (player.playerTask.taskMain.id == 1 && player.playerTask.taskMain.index == 6) {
            return ConstTask.TASK_1_6;
        } else if (player.playerTask.taskMain.id == 2 && player.playerTask.taskMain.index == 0) {
            return ConstTask.TASK_2_0;
        } else if (player.playerTask.taskMain.id == 2 && player.playerTask.taskMain.index == 1) {
            return ConstTask.TASK_2_1;
        } else if (player.playerTask.taskMain.id == 2 && player.playerTask.taskMain.index == 2) {
            return ConstTask.TASK_2_2;
        } else if (player.playerTask.taskMain.id == 2 && player.playerTask.taskMain.index == 3) {
            return ConstTask.TASK_2_3;
        } else if (player.playerTask.taskMain.id == 2 && player.playerTask.taskMain.index == 4) {
            return ConstTask.TASK_2_4;
        } else if (player.playerTask.taskMain.id == 2 && player.playerTask.taskMain.index == 5) {
            return ConstTask.TASK_2_5;
        } else if (player.playerTask.taskMain.id == 2 && player.playerTask.taskMain.index == 6) {
            return ConstTask.TASK_2_6;
        } else if (player.playerTask.taskMain.id == 3 && player.playerTask.taskMain.index == 0) {
            return ConstTask.TASK_3_0;
        } else if (player.playerTask.taskMain.id == 3 && player.playerTask.taskMain.index == 1) {
            return ConstTask.TASK_3_1;
        } else if (player.playerTask.taskMain.id == 3 && player.playerTask.taskMain.index == 2) {
            return ConstTask.TASK_3_2;
        } else if (player.playerTask.taskMain.id == 3 && player.playerTask.taskMain.index == 3) {
            return ConstTask.TASK_3_3;
        } else if (player.playerTask.taskMain.id == 3 && player.playerTask.taskMain.index == 4) {
            return ConstTask.TASK_3_4;
        } else if (player.playerTask.taskMain.id == 3 && player.playerTask.taskMain.index == 5) {
            return ConstTask.TASK_3_5;
        } else if (player.playerTask.taskMain.id == 3 && player.playerTask.taskMain.index == 6) {
            return ConstTask.TASK_3_6;
        } else if (player.playerTask.taskMain.id == 4 && player.playerTask.taskMain.index == 0) {
            return ConstTask.TASK_4_0;
        } else if (player.playerTask.taskMain.id == 4 && player.playerTask.taskMain.index == 1) {
            return ConstTask.TASK_4_1;
        } else if (player.playerTask.taskMain.id == 4 && player.playerTask.taskMain.index == 2) {
            return ConstTask.TASK_4_2;
        } else if (player.playerTask.taskMain.id == 4 && player.playerTask.taskMain.index == 3) {
            return ConstTask.TASK_4_3;
        } else if (player.playerTask.taskMain.id == 4 && player.playerTask.taskMain.index == 4) {
            return ConstTask.TASK_4_4;
        } else if (player.playerTask.taskMain.id == 4 && player.playerTask.taskMain.index == 5) {
            return ConstTask.TASK_4_5;
        } else if (player.playerTask.taskMain.id == 4 && player.playerTask.taskMain.index == 6) {
            return ConstTask.TASK_4_6;
        } else if (player.playerTask.taskMain.id == 5 && player.playerTask.taskMain.index == 0) {
            return ConstTask.TASK_5_0;
        } else if (player.playerTask.taskMain.id == 5 && player.playerTask.taskMain.index == 1) {
            return ConstTask.TASK_5_1;
        } else if (player.playerTask.taskMain.id == 5 && player.playerTask.taskMain.index == 2) {
            return ConstTask.TASK_5_2;
        } else if (player.playerTask.taskMain.id == 5 && player.playerTask.taskMain.index == 3) {
            return ConstTask.TASK_5_3;
        } else if (player.playerTask.taskMain.id == 5 && player.playerTask.taskMain.index == 4) {
            return ConstTask.TASK_5_4;
        } else if (player.playerTask.taskMain.id == 5 && player.playerTask.taskMain.index == 5) {
            return ConstTask.TASK_5_5;
        } else if (player.playerTask.taskMain.id == 5 && player.playerTask.taskMain.index == 6) {
            return ConstTask.TASK_5_6;
        } else if (player.playerTask.taskMain.id == 6 && player.playerTask.taskMain.index == 0) {
            return ConstTask.TASK_6_0;
        } else if (player.playerTask.taskMain.id == 6 && player.playerTask.taskMain.index == 1) {
            return ConstTask.TASK_6_1;
        } else if (player.playerTask.taskMain.id == 6 && player.playerTask.taskMain.index == 2) {
            return ConstTask.TASK_6_2;
        } else if (player.playerTask.taskMain.id == 6 && player.playerTask.taskMain.index == 3) {
            return ConstTask.TASK_6_3;
        } else if (player.playerTask.taskMain.id == 6 && player.playerTask.taskMain.index == 4) {
            return ConstTask.TASK_6_4;
        } else if (player.playerTask.taskMain.id == 6 && player.playerTask.taskMain.index == 5) {
            return ConstTask.TASK_6_5;
        } else if (player.playerTask.taskMain.id == 6 && player.playerTask.taskMain.index == 6) {
            return ConstTask.TASK_6_6;
        } else if (player.playerTask.taskMain.id == 7 && player.playerTask.taskMain.index == 0) {
            return ConstTask.TASK_7_0;
        } else if (player.playerTask.taskMain.id == 7 && player.playerTask.taskMain.index == 1) {
            return ConstTask.TASK_7_1;
        } else if (player.playerTask.taskMain.id == 7 && player.playerTask.taskMain.index == 2) {
            return ConstTask.TASK_7_2;
        } else if (player.playerTask.taskMain.id == 7 && player.playerTask.taskMain.index == 3) {
            return ConstTask.TASK_7_3;
        } else if (player.playerTask.taskMain.id == 7 && player.playerTask.taskMain.index == 4) {
            return ConstTask.TASK_7_4;
        } else if (player.playerTask.taskMain.id == 7 && player.playerTask.taskMain.index == 5) {
            return ConstTask.TASK_7_5;
        } else if (player.playerTask.taskMain.id == 7 && player.playerTask.taskMain.index == 6) {
            return ConstTask.TASK_7_6;
        } else if (player.playerTask.taskMain.id == 8 && player.playerTask.taskMain.index == 0) {
            return ConstTask.TASK_8_0;
        } else if (player.playerTask.taskMain.id == 8 && player.playerTask.taskMain.index == 1) {
            return ConstTask.TASK_8_1;
        } else if (player.playerTask.taskMain.id == 8 && player.playerTask.taskMain.index == 2) {
            return ConstTask.TASK_8_2;
        } else if (player.playerTask.taskMain.id == 8 && player.playerTask.taskMain.index == 3) {
            return ConstTask.TASK_8_3;
        } else if (player.playerTask.taskMain.id == 8 && player.playerTask.taskMain.index == 4) {
            return ConstTask.TASK_8_4;
        } else if (player.playerTask.taskMain.id == 8 && player.playerTask.taskMain.index == 5) {
            return ConstTask.TASK_8_5;
        } else if (player.playerTask.taskMain.id == 8 && player.playerTask.taskMain.index == 6) {
            return ConstTask.TASK_8_6;
        } else if (player.playerTask.taskMain.id == 9 && player.playerTask.taskMain.index == 0) {
            return ConstTask.TASK_9_0;
        } else if (player.playerTask.taskMain.id == 9 && player.playerTask.taskMain.index == 1) {
            return ConstTask.TASK_9_1;
        } else if (player.playerTask.taskMain.id == 9 && player.playerTask.taskMain.index == 2) {
            return ConstTask.TASK_9_2;
        } else if (player.playerTask.taskMain.id == 9 && player.playerTask.taskMain.index == 3) {
            return ConstTask.TASK_9_3;
        } else if (player.playerTask.taskMain.id == 9 && player.playerTask.taskMain.index == 4) {
            return ConstTask.TASK_9_4;
        } else if (player.playerTask.taskMain.id == 9 && player.playerTask.taskMain.index == 5) {
            return ConstTask.TASK_9_5;
        } else if (player.playerTask.taskMain.id == 9 && player.playerTask.taskMain.index == 6) {
            return ConstTask.TASK_9_6;
        } else if (player.playerTask.taskMain.id == 10 && player.playerTask.taskMain.index == 0) {
            return ConstTask.TASK_10_0;
        } else if (player.playerTask.taskMain.id == 10 && player.playerTask.taskMain.index == 1) {
            return ConstTask.TASK_10_1;
        } else if (player.playerTask.taskMain.id == 10 && player.playerTask.taskMain.index == 2) {
            return ConstTask.TASK_10_2;
        } else if (player.playerTask.taskMain.id == 10 && player.playerTask.taskMain.index == 3) {
            return ConstTask.TASK_10_3;
        } else if (player.playerTask.taskMain.id == 10 && player.playerTask.taskMain.index == 4) {
            return ConstTask.TASK_10_4;
        } else if (player.playerTask.taskMain.id == 10 && player.playerTask.taskMain.index == 5) {
            return ConstTask.TASK_10_5;
        } else if (player.playerTask.taskMain.id == 10 && player.playerTask.taskMain.index == 6) {
            return ConstTask.TASK_10_6;
        } else if (player.playerTask.taskMain.id == 11 && player.playerTask.taskMain.index == 0) {
            return ConstTask.TASK_11_0;
        } else if (player.playerTask.taskMain.id == 11 && player.playerTask.taskMain.index == 1) {
            return ConstTask.TASK_11_1;
        } else if (player.playerTask.taskMain.id == 11 && player.playerTask.taskMain.index == 2) {
            return ConstTask.TASK_11_2;
        } else if (player.playerTask.taskMain.id == 11 && player.playerTask.taskMain.index == 3) {
            return ConstTask.TASK_11_3;
        } else if (player.playerTask.taskMain.id == 11 && player.playerTask.taskMain.index == 4) {
            return ConstTask.TASK_11_4;
        } else if (player.playerTask.taskMain.id == 11 && player.playerTask.taskMain.index == 5) {
            return ConstTask.TASK_11_5;
        } else if (player.playerTask.taskMain.id == 11 && player.playerTask.taskMain.index == 6) {
            return ConstTask.TASK_11_6;
        } else if (player.playerTask.taskMain.id == 12 && player.playerTask.taskMain.index == 0) {
            return ConstTask.TASK_12_0;
        } else if (player.playerTask.taskMain.id == 12 && player.playerTask.taskMain.index == 1) {
            return ConstTask.TASK_12_1;
        } else if (player.playerTask.taskMain.id == 12 && player.playerTask.taskMain.index == 2) {
            return ConstTask.TASK_12_2;
        } else if (player.playerTask.taskMain.id == 12 && player.playerTask.taskMain.index == 3) {
            return ConstTask.TASK_12_3;
        } else if (player.playerTask.taskMain.id == 12 && player.playerTask.taskMain.index == 4) {
            return ConstTask.TASK_12_4;
        } else if (player.playerTask.taskMain.id == 12 && player.playerTask.taskMain.index == 5) {
            return ConstTask.TASK_12_5;
        } else if (player.playerTask.taskMain.id == 12 && player.playerTask.taskMain.index == 6) {
            return ConstTask.TASK_12_6;
        } else if (player.playerTask.taskMain.id == 13 && player.playerTask.taskMain.index == 0) {
            return ConstTask.TASK_13_0;
        } else if (player.playerTask.taskMain.id == 13 && player.playerTask.taskMain.index == 1) {
            return ConstTask.TASK_13_1;
        } else if (player.playerTask.taskMain.id == 13 && player.playerTask.taskMain.index == 2) {
            return ConstTask.TASK_13_2;
        } else if (player.playerTask.taskMain.id == 13 && player.playerTask.taskMain.index == 3) {
            return ConstTask.TASK_13_3;
        } else if (player.playerTask.taskMain.id == 13 && player.playerTask.taskMain.index == 4) {
            return ConstTask.TASK_13_4;
        } else if (player.playerTask.taskMain.id == 13 && player.playerTask.taskMain.index == 5) {
            return ConstTask.TASK_13_5;
        } else if (player.playerTask.taskMain.id == 13 && player.playerTask.taskMain.index == 6) {
            return ConstTask.TASK_13_6;
        } else if (player.playerTask.taskMain.id == 14 && player.playerTask.taskMain.index == 0) {
            return ConstTask.TASK_14_0;
        } else if (player.playerTask.taskMain.id == 14 && player.playerTask.taskMain.index == 1) {
            return ConstTask.TASK_14_1;
        } else if (player.playerTask.taskMain.id == 14 && player.playerTask.taskMain.index == 2) {
            return ConstTask.TASK_14_2;
        } else if (player.playerTask.taskMain.id == 14 && player.playerTask.taskMain.index == 3) {
            return ConstTask.TASK_14_3;
        } else if (player.playerTask.taskMain.id == 14 && player.playerTask.taskMain.index == 4) {
            return ConstTask.TASK_14_4;
        } else if (player.playerTask.taskMain.id == 14 && player.playerTask.taskMain.index == 5) {
            return ConstTask.TASK_14_5;
        } else if (player.playerTask.taskMain.id == 14 && player.playerTask.taskMain.index == 6) {
            return ConstTask.TASK_14_6;
        } else if (player.playerTask.taskMain.id == 15 && player.playerTask.taskMain.index == 0) {
            return ConstTask.TASK_15_0;
        } else if (player.playerTask.taskMain.id == 15 && player.playerTask.taskMain.index == 1) {
            return ConstTask.TASK_15_1;
        } else if (player.playerTask.taskMain.id == 15 && player.playerTask.taskMain.index == 2) {
            return ConstTask.TASK_15_2;
        } else if (player.playerTask.taskMain.id == 15 && player.playerTask.taskMain.index == 3) {
            return ConstTask.TASK_15_3;
        } else if (player.playerTask.taskMain.id == 15 && player.playerTask.taskMain.index == 4) {
            return ConstTask.TASK_15_4;
        } else if (player.playerTask.taskMain.id == 15 && player.playerTask.taskMain.index == 5) {
            return ConstTask.TASK_15_5;
        } else if (player.playerTask.taskMain.id == 15 && player.playerTask.taskMain.index == 6) {
            return ConstTask.TASK_15_6;
        } else if (player.playerTask.taskMain.id == 16 && player.playerTask.taskMain.index == 0) {
            return ConstTask.TASK_16_0;
        } else if (player.playerTask.taskMain.id == 16 && player.playerTask.taskMain.index == 1) {
            return ConstTask.TASK_16_1;
        } else if (player.playerTask.taskMain.id == 16 && player.playerTask.taskMain.index == 2) {
            return ConstTask.TASK_16_2;
        } else if (player.playerTask.taskMain.id == 16 && player.playerTask.taskMain.index == 3) {
            return ConstTask.TASK_16_3;
        } else if (player.playerTask.taskMain.id == 16 && player.playerTask.taskMain.index == 4) {
            return ConstTask.TASK_16_4;
        } else if (player.playerTask.taskMain.id == 16 && player.playerTask.taskMain.index == 5) {
            return ConstTask.TASK_16_5;
        } else if (player.playerTask.taskMain.id == 16 && player.playerTask.taskMain.index == 6) {
            return ConstTask.TASK_16_6;
        } else if (player.playerTask.taskMain.id == 17 && player.playerTask.taskMain.index == 0) {
            return ConstTask.TASK_17_0;
        } else if (player.playerTask.taskMain.id == 17 && player.playerTask.taskMain.index == 1) {
            return ConstTask.TASK_17_1;
        } else if (player.playerTask.taskMain.id == 17 && player.playerTask.taskMain.index == 2) {
            return ConstTask.TASK_17_2;
        } else if (player.playerTask.taskMain.id == 17 && player.playerTask.taskMain.index == 3) {
            return ConstTask.TASK_17_3;
        } else if (player.playerTask.taskMain.id == 17 && player.playerTask.taskMain.index == 4) {
            return ConstTask.TASK_17_4;
        } else if (player.playerTask.taskMain.id == 17 && player.playerTask.taskMain.index == 5) {
            return ConstTask.TASK_17_5;
        } else if (player.playerTask.taskMain.id == 17 && player.playerTask.taskMain.index == 6) {
            return ConstTask.TASK_17_6;
        } else if (player.playerTask.taskMain.id == 18 && player.playerTask.taskMain.index == 0) {
            return ConstTask.TASK_18_0;
        } else if (player.playerTask.taskMain.id == 18 && player.playerTask.taskMain.index == 1) {
            return ConstTask.TASK_18_1;
        } else if (player.playerTask.taskMain.id == 18 && player.playerTask.taskMain.index == 2) {
            return ConstTask.TASK_18_2;
        } else if (player.playerTask.taskMain.id == 18 && player.playerTask.taskMain.index == 3) {
            return ConstTask.TASK_18_3;
        } else if (player.playerTask.taskMain.id == 18 && player.playerTask.taskMain.index == 4) {
            return ConstTask.TASK_18_4;
        } else if (player.playerTask.taskMain.id == 18 && player.playerTask.taskMain.index == 5) {
            return ConstTask.TASK_18_5;
        } else if (player.playerTask.taskMain.id == 18 && player.playerTask.taskMain.index == 6) {
            return ConstTask.TASK_18_6;
        } else if (player.playerTask.taskMain.id == 19 && player.playerTask.taskMain.index == 0) {
            return ConstTask.TASK_19_0;
        } else if (player.playerTask.taskMain.id == 19 && player.playerTask.taskMain.index == 1) {
            return ConstTask.TASK_19_1;
        } else if (player.playerTask.taskMain.id == 19 && player.playerTask.taskMain.index == 2) {
            return ConstTask.TASK_19_2;
        } else if (player.playerTask.taskMain.id == 19 && player.playerTask.taskMain.index == 3) {
            return ConstTask.TASK_19_3;
        } else if (player.playerTask.taskMain.id == 19 && player.playerTask.taskMain.index == 4) {
            return ConstTask.TASK_19_4;
        } else if (player.playerTask.taskMain.id == 19 && player.playerTask.taskMain.index == 5) {
            return ConstTask.TASK_19_5;
        } else if (player.playerTask.taskMain.id == 19 && player.playerTask.taskMain.index == 6) {
            return ConstTask.TASK_19_6;
        } else if (player.playerTask.taskMain.id == 20 && player.playerTask.taskMain.index == 0) {
            return ConstTask.TASK_20_0;
        } else if (player.playerTask.taskMain.id == 20 && player.playerTask.taskMain.index == 1) {
            return ConstTask.TASK_20_1;
        } else if (player.playerTask.taskMain.id == 20 && player.playerTask.taskMain.index == 2) {
            return ConstTask.TASK_20_2;
        } else if (player.playerTask.taskMain.id == 20 && player.playerTask.taskMain.index == 3) {
            return ConstTask.TASK_20_3;
        } else if (player.playerTask.taskMain.id == 20 && player.playerTask.taskMain.index == 4) {
            return ConstTask.TASK_20_4;
        } else if (player.playerTask.taskMain.id == 20 && player.playerTask.taskMain.index == 5) {
            return ConstTask.TASK_20_5;
        } else if (player.playerTask.taskMain.id == 20 && player.playerTask.taskMain.index == 6) {
            return ConstTask.TASK_20_6;
        } else if (player.playerTask.taskMain.id == 21 && player.playerTask.taskMain.index == 0) {
            return ConstTask.TASK_21_0;
        } else if (player.playerTask.taskMain.id == 21 && player.playerTask.taskMain.index == 1) {
            return ConstTask.TASK_21_1;
        } else if (player.playerTask.taskMain.id == 21 && player.playerTask.taskMain.index == 2) {
            return ConstTask.TASK_21_2;
        } else if (player.playerTask.taskMain.id == 21 && player.playerTask.taskMain.index == 3) {
            return ConstTask.TASK_21_3;
        } else if (player.playerTask.taskMain.id == 21 && player.playerTask.taskMain.index == 4) {
            return ConstTask.TASK_21_4;
        } else if (player.playerTask.taskMain.id == 21 && player.playerTask.taskMain.index == 5) {
            return ConstTask.TASK_21_5;
        } else if (player.playerTask.taskMain.id == 21 && player.playerTask.taskMain.index == 6) {
            return ConstTask.TASK_21_6;
        } else if (player.playerTask.taskMain.id == 22 && player.playerTask.taskMain.index == 0) {
            return ConstTask.TASK_22_0;
        } else if (player.playerTask.taskMain.id == 22 && player.playerTask.taskMain.index == 1) {
            return ConstTask.TASK_22_1;
        } else if (player.playerTask.taskMain.id == 22 && player.playerTask.taskMain.index == 2) {
            return ConstTask.TASK_22_2;
        } else if (player.playerTask.taskMain.id == 22 && player.playerTask.taskMain.index == 3) {
            return ConstTask.TASK_22_3;
        } else if (player.playerTask.taskMain.id == 22 && player.playerTask.taskMain.index == 4) {
            return ConstTask.TASK_22_4;
        } else if (player.playerTask.taskMain.id == 22 && player.playerTask.taskMain.index == 5) {
            return ConstTask.TASK_22_5;
        } else if (player.playerTask.taskMain.id == 22 && player.playerTask.taskMain.index == 6) {
            return ConstTask.TASK_22_6;
        } else if (player.playerTask.taskMain.id == 23 && player.playerTask.taskMain.index == 0) {
            return ConstTask.TASK_23_0;
        } else if (player.playerTask.taskMain.id == 23 && player.playerTask.taskMain.index == 1) {
            return ConstTask.TASK_23_1;
        } else if (player.playerTask.taskMain.id == 23 && player.playerTask.taskMain.index == 2) {
            return ConstTask.TASK_23_2;
        } else if (player.playerTask.taskMain.id == 23 && player.playerTask.taskMain.index == 3) {
            return ConstTask.TASK_23_3;
        } else if (player.playerTask.taskMain.id == 23 && player.playerTask.taskMain.index == 4) {
            return ConstTask.TASK_23_4;
        } else if (player.playerTask.taskMain.id == 23 && player.playerTask.taskMain.index == 5) {
            return ConstTask.TASK_23_5;
        } else if (player.playerTask.taskMain.id == 23 && player.playerTask.taskMain.index == 6) {
            return ConstTask.TASK_23_6;
        } else if (player.playerTask.taskMain.id == 24 && player.playerTask.taskMain.index == 0) {
            return ConstTask.TASK_24_0;
        } else if (player.playerTask.taskMain.id == 24 && player.playerTask.taskMain.index == 1) {
            return ConstTask.TASK_24_1;
        } else if (player.playerTask.taskMain.id == 24 && player.playerTask.taskMain.index == 2) {
            return ConstTask.TASK_24_2;
        } else if (player.playerTask.taskMain.id == 24 && player.playerTask.taskMain.index == 3) {
            return ConstTask.TASK_24_3;
        } else if (player.playerTask.taskMain.id == 24 && player.playerTask.taskMain.index == 4) {
            return ConstTask.TASK_24_4;
        } else if (player.playerTask.taskMain.id == 24 && player.playerTask.taskMain.index == 5) {
            return ConstTask.TASK_24_5;
        } else if (player.playerTask.taskMain.id == 24 && player.playerTask.taskMain.index == 6) {
            return ConstTask.TASK_24_6;
        } else if (player.playerTask.taskMain.id == 25 && player.playerTask.taskMain.index == 0) {
            return ConstTask.TASK_25_0;
        } else if (player.playerTask.taskMain.id == 25 && player.playerTask.taskMain.index == 1) {
            return ConstTask.TASK_25_1;
        } else if (player.playerTask.taskMain.id == 25 && player.playerTask.taskMain.index == 2) {
            return ConstTask.TASK_25_2;
        } else if (player.playerTask.taskMain.id == 25 && player.playerTask.taskMain.index == 3) {
            return ConstTask.TASK_25_3;
        } else if (player.playerTask.taskMain.id == 25 && player.playerTask.taskMain.index == 4) {
            return ConstTask.TASK_25_4;
        } else if (player.playerTask.taskMain.id == 25 && player.playerTask.taskMain.index == 5) {
            return ConstTask.TASK_25_5;
        } else if (player.playerTask.taskMain.id == 25 && player.playerTask.taskMain.index == 6) {
            return ConstTask.TASK_25_6;
        } else if (player.playerTask.taskMain.id == 26 && player.playerTask.taskMain.index == 0) {
            return ConstTask.TASK_26_0;
        } else if (player.playerTask.taskMain.id == 26 && player.playerTask.taskMain.index == 1) {
            return ConstTask.TASK_26_1;
        } else if (player.playerTask.taskMain.id == 26 && player.playerTask.taskMain.index == 2) {
            return ConstTask.TASK_26_2;
        } else if (player.playerTask.taskMain.id == 26 && player.playerTask.taskMain.index == 3) {
            return ConstTask.TASK_26_3;
        } else if (player.playerTask.taskMain.id == 26 && player.playerTask.taskMain.index == 4) {
            return ConstTask.TASK_26_4;
        } else if (player.playerTask.taskMain.id == 26 && player.playerTask.taskMain.index == 5) {
            return ConstTask.TASK_26_5;
        } else if (player.playerTask.taskMain.id == 26 && player.playerTask.taskMain.index == 6) {
            return ConstTask.TASK_26_6;
        } else if (player.playerTask.taskMain.id == 27 && player.playerTask.taskMain.index == 0) {
            return ConstTask.TASK_27_0;
        } else if (player.playerTask.taskMain.id == 27 && player.playerTask.taskMain.index == 1) {
            return ConstTask.TASK_27_1;
        } else if (player.playerTask.taskMain.id == 27 && player.playerTask.taskMain.index == 2) {
            return ConstTask.TASK_27_2;
        } else if (player.playerTask.taskMain.id == 27 && player.playerTask.taskMain.index == 3) {
            return ConstTask.TASK_27_3;
        } else if (player.playerTask.taskMain.id == 27 && player.playerTask.taskMain.index == 4) {
            return ConstTask.TASK_27_4;
        } else if (player.playerTask.taskMain.id == 27 && player.playerTask.taskMain.index == 5) {
            return ConstTask.TASK_27_5;
        } else if (player.playerTask.taskMain.id == 27 && player.playerTask.taskMain.index == 6) {
            return ConstTask.TASK_27_6;
        } else if (player.playerTask.taskMain.id == 28 && player.playerTask.taskMain.index == 0) {
            return ConstTask.TASK_28_0;
        } else if (player.playerTask.taskMain.id == 28 && player.playerTask.taskMain.index == 1) {
            return ConstTask.TASK_28_1;
        } else if (player.playerTask.taskMain.id == 28 && player.playerTask.taskMain.index == 2) {
            return ConstTask.TASK_28_2;
        } else if (player.playerTask.taskMain.id == 28 && player.playerTask.taskMain.index == 3) {
            return ConstTask.TASK_28_3;
        } else if (player.playerTask.taskMain.id == 28 && player.playerTask.taskMain.index == 4) {
            return ConstTask.TASK_28_4;
        } else if (player.playerTask.taskMain.id == 28 && player.playerTask.taskMain.index == 5) {
            return ConstTask.TASK_28_5;
        } else if (player.playerTask.taskMain.id == 28 && player.playerTask.taskMain.index == 6) {
            return ConstTask.TASK_28_6;
        } else if (player.playerTask.taskMain.id == 29 && player.playerTask.taskMain.index == 0) {
            return ConstTask.TASK_29_0;
        } else if (player.playerTask.taskMain.id == 29 && player.playerTask.taskMain.index == 1) {
            return ConstTask.TASK_29_1;
        } else if (player.playerTask.taskMain.id == 29 && player.playerTask.taskMain.index == 2) {
            return ConstTask.TASK_29_2;
        } else if (player.playerTask.taskMain.id == 29 && player.playerTask.taskMain.index == 3) {
            return ConstTask.TASK_29_3;
        } else if (player.playerTask.taskMain.id == 29 && player.playerTask.taskMain.index == 4) {
            return ConstTask.TASK_29_4;
        } else if (player.playerTask.taskMain.id == 29 && player.playerTask.taskMain.index == 5) {
            return ConstTask.TASK_29_5;
        } else if (player.playerTask.taskMain.id == 29 && player.playerTask.taskMain.index == 6) {
            return ConstTask.TASK_29_6;
        } else if (player.playerTask.taskMain.id == 30 && player.playerTask.taskMain.index == 0) {
            return ConstTask.TASK_30_0;
        } else if (player.playerTask.taskMain.id == 30 && player.playerTask.taskMain.index == 1) {
            return ConstTask.TASK_30_1;
        } else if (player.playerTask.taskMain.id == 30 && player.playerTask.taskMain.index == 2) {
            return ConstTask.TASK_30_2;
        } else if (player.playerTask.taskMain.id == 30 && player.playerTask.taskMain.index == 3) {
            return ConstTask.TASK_30_3;
        } else if (player.playerTask.taskMain.id == 30 && player.playerTask.taskMain.index == 4) {
            return ConstTask.TASK_30_4;
        } else if (player.playerTask.taskMain.id == 30 && player.playerTask.taskMain.index == 5) {
            return ConstTask.TASK_30_5;
        } else if (player.playerTask.taskMain.id == 30 && player.playerTask.taskMain.index == 6) {
            return ConstTask.TASK_30_6;
        } else if (player.playerTask.taskMain.id == 31 && player.playerTask.taskMain.index == 0) {
            return ConstTask.TASK_31_0;
        } else if (player.playerTask.taskMain.id == 31 && player.playerTask.taskMain.index == 1) {
            return ConstTask.TASK_31_1;
        } else if (player.playerTask.taskMain.id == 31 && player.playerTask.taskMain.index == 2) {
            return ConstTask.TASK_31_2;
        } else if (player.playerTask.taskMain.id == 31 && player.playerTask.taskMain.index == 3) {
            return ConstTask.TASK_31_3;
        } else if (player.playerTask.taskMain.id == 31 && player.playerTask.taskMain.index == 4) {
            return ConstTask.TASK_31_4;
        } else if (player.playerTask.taskMain.id == 31 && player.playerTask.taskMain.index == 5) {
            return ConstTask.TASK_31_5;
        } else if (player.playerTask.taskMain.id == 31 && player.playerTask.taskMain.index == 6) {
            return ConstTask.TASK_31_6;
        } else if (player.playerTask.taskMain.id == 32 && player.playerTask.taskMain.index == 0) {
            return ConstTask.TASK_32_0;
        } else if (player.playerTask.taskMain.id == 32 && player.playerTask.taskMain.index == 1) {
            return ConstTask.TASK_32_1;
        } else if (player.playerTask.taskMain.id == 32 && player.playerTask.taskMain.index == 2) {
            return ConstTask.TASK_32_2;
        } else if (player.playerTask.taskMain.id == 32 && player.playerTask.taskMain.index == 3) {
            return ConstTask.TASK_32_3;
        } else if (player.playerTask.taskMain.id == 32 && player.playerTask.taskMain.index == 4) {
            return ConstTask.TASK_32_4;
        } else if (player.playerTask.taskMain.id == 32 && player.playerTask.taskMain.index == 5) {
            return ConstTask.TASK_32_5;
        } else if (player.playerTask.taskMain.id == 32 && player.playerTask.taskMain.index == 6) {
            return ConstTask.TASK_32_6;
        } else if (player.playerTask.taskMain.id == 33 && player.playerTask.taskMain.index == 0) {
            return ConstTask.TASK_33_0;
        } else if (player.playerTask.taskMain.id == 33 && player.playerTask.taskMain.index == 1) {
            return ConstTask.TASK_33_1;
        } else if (player.playerTask.taskMain.id == 33 && player.playerTask.taskMain.index == 2) {
            return ConstTask.TASK_33_2;
        } else if (player.playerTask.taskMain.id == 33 && player.playerTask.taskMain.index == 3) {
            return ConstTask.TASK_33_3;
        } else if (player.playerTask.taskMain.id == 33 && player.playerTask.taskMain.index == 4) {
            return ConstTask.TASK_33_4;
        } else if (player.playerTask.taskMain.id == 33 && player.playerTask.taskMain.index == 5) {
            return ConstTask.TASK_33_5;
        } else if (player.playerTask.taskMain.id == 33 && player.playerTask.taskMain.index == 6) {
            return ConstTask.TASK_33_6;
        } else if (player.playerTask.taskMain.id == 34 && player.playerTask.taskMain.index == 0) {
            return ConstTask.TASK_34_0;
        } else if (player.playerTask.taskMain.id == 34 && player.playerTask.taskMain.index == 1) {
            return ConstTask.TASK_34_1;
        } else if (player.playerTask.taskMain.id == 34 && player.playerTask.taskMain.index == 2) {
            return ConstTask.TASK_34_2;
        } else if (player.playerTask.taskMain.id == 34 && player.playerTask.taskMain.index == 3) {
            return ConstTask.TASK_34_3;
        } else if (player.playerTask.taskMain.id == 34 && player.playerTask.taskMain.index == 4) {
            return ConstTask.TASK_34_4;
        } else if (player.playerTask.taskMain.id == 34 && player.playerTask.taskMain.index == 5) {
            return ConstTask.TASK_34_5;
        } else if (player.playerTask.taskMain.id == 34 && player.playerTask.taskMain.index == 6) {
            return ConstTask.TASK_34_6;
        } else if (player.playerTask.taskMain.id == 35 && player.playerTask.taskMain.index == 0) {
            return ConstTask.TASK_35_0;
        } else if (player.playerTask.taskMain.id == 35 && player.playerTask.taskMain.index == 1) {
            return ConstTask.TASK_35_1;
        } else if (player.playerTask.taskMain.id == 35 && player.playerTask.taskMain.index == 2) {
            return ConstTask.TASK_35_2;
        } else if (player.playerTask.taskMain.id == 35 && player.playerTask.taskMain.index == 3) {
            return ConstTask.TASK_35_3;
        } else if (player.playerTask.taskMain.id == 35 && player.playerTask.taskMain.index == 4) {
            return ConstTask.TASK_35_4;
        } else if (player.playerTask.taskMain.id == 35 && player.playerTask.taskMain.index == 5) {
            return ConstTask.TASK_35_5;
        } else if (player.playerTask.taskMain.id == 35 && player.playerTask.taskMain.index == 6) {
            return ConstTask.TASK_35_6;
        } else if (player.playerTask.taskMain.id == 36 && player.playerTask.taskMain.index == 0) {
            return ConstTask.TASK_36_0;
        } else if (player.playerTask.taskMain.id == 36 && player.playerTask.taskMain.index == 1) {
            return ConstTask.TASK_36_1;
        } else if (player.playerTask.taskMain.id == 36 && player.playerTask.taskMain.index == 2) {
            return ConstTask.TASK_36_2;
        } else if (player.playerTask.taskMain.id == 36 && player.playerTask.taskMain.index == 3) {
            return ConstTask.TASK_36_3;
        } else if (player.playerTask.taskMain.id == 36 && player.playerTask.taskMain.index == 4) {
            return ConstTask.TASK_36_4;
        } else if (player.playerTask.taskMain.id == 36 && player.playerTask.taskMain.index == 5) {
            return ConstTask.TASK_36_5;
        } else if (player.playerTask.taskMain.id == 36 && player.playerTask.taskMain.index == 6) {
            return ConstTask.TASK_36_6;
        } else if (player.playerTask.taskMain.id == 37 && player.playerTask.taskMain.index == 0) {
            return ConstTask.TASK_37_0;
        } else if (player.playerTask.taskMain.id == 37 && player.playerTask.taskMain.index == 1) {
            return ConstTask.TASK_37_1;
        } else if (player.playerTask.taskMain.id == 37 && player.playerTask.taskMain.index == 2) {
            return ConstTask.TASK_37_2;
        } else if (player.playerTask.taskMain.id == 37 && player.playerTask.taskMain.index == 3) {
            return ConstTask.TASK_37_3;
        } else if (player.playerTask.taskMain.id == 37 && player.playerTask.taskMain.index == 4) {
            return ConstTask.TASK_37_4;
        } else if (player.playerTask.taskMain.id == 37 && player.playerTask.taskMain.index == 5) {
            return ConstTask.TASK_37_5;
        } else if (player.playerTask.taskMain.id == 37 && player.playerTask.taskMain.index == 6) {
            return ConstTask.TASK_37_6;
        } else if (player.playerTask.taskMain.id == 38 && player.playerTask.taskMain.index == 0) {
            return ConstTask.TASK_38_0;
        } else if (player.playerTask.taskMain.id == 38 && player.playerTask.taskMain.index == 1) {
            return ConstTask.TASK_38_1;
        } else if (player.playerTask.taskMain.id == 38 && player.playerTask.taskMain.index == 2) {
            return ConstTask.TASK_38_2;
        } else if (player.playerTask.taskMain.id == 38 && player.playerTask.taskMain.index == 3) {
            return ConstTask.TASK_38_3;
        } else if (player.playerTask.taskMain.id == 38 && player.playerTask.taskMain.index == 4) {
            return ConstTask.TASK_38_4;
        } else if (player.playerTask.taskMain.id == 38 && player.playerTask.taskMain.index == 5) {
            return ConstTask.TASK_38_5;
        } else if (player.playerTask.taskMain.id == 38 && player.playerTask.taskMain.index == 6) {
            return ConstTask.TASK_38_6;
        } else if (player.playerTask.taskMain.id == 39 && player.playerTask.taskMain.index == 0) {
            return ConstTask.TASK_39_0;
        } else if (player.playerTask.taskMain.id == 39 && player.playerTask.taskMain.index == 1) {
            return ConstTask.TASK_39_1;
        } else if (player.playerTask.taskMain.id == 39 && player.playerTask.taskMain.index == 2) {
            return ConstTask.TASK_39_2;
        } else if (player.playerTask.taskMain.id == 39 && player.playerTask.taskMain.index == 3) {
            return ConstTask.TASK_39_3;
        } else if (player.playerTask.taskMain.id == 39 && player.playerTask.taskMain.index == 4) {
            return ConstTask.TASK_39_4;
        } else if (player.playerTask.taskMain.id == 39 && player.playerTask.taskMain.index == 5) {
            return ConstTask.TASK_39_5;
        } else if (player.playerTask.taskMain.id == 39 && player.playerTask.taskMain.index == 6) {
            return ConstTask.TASK_39_6;
        } else if (player.playerTask.taskMain.id == 40 && player.playerTask.taskMain.index == 0) {
            return ConstTask.TASK_40_0;
        } else if (player.playerTask.taskMain.id == 40 && player.playerTask.taskMain.index == 1) {
            return ConstTask.TASK_40_1;
        } else if (player.playerTask.taskMain.id == 40 && player.playerTask.taskMain.index == 2) {
            return ConstTask.TASK_40_2;
        } else if (player.playerTask.taskMain.id == 40 && player.playerTask.taskMain.index == 3) {
            return ConstTask.TASK_40_3;
        } else if (player.playerTask.taskMain.id == 40 && player.playerTask.taskMain.index == 4) {
            return ConstTask.TASK_40_4;
        } else if (player.playerTask.taskMain.id == 40 && player.playerTask.taskMain.index == 5) {
            return ConstTask.TASK_40_5;
        } else if (player.playerTask.taskMain.id == 40 && player.playerTask.taskMain.index == 6) {
            return ConstTask.TASK_40_6;
        } else if (player.playerTask.taskMain.id == 41 && player.playerTask.taskMain.index == 0) {
            return ConstTask.TASK_41_0;
        } else if (player.playerTask.taskMain.id == 41 && player.playerTask.taskMain.index == 1) {
            return ConstTask.TASK_41_1;
        } else if (player.playerTask.taskMain.id == 41 && player.playerTask.taskMain.index == 2) {
            return ConstTask.TASK_41_2;
        } else if (player.playerTask.taskMain.id == 41 && player.playerTask.taskMain.index == 3) {
            return ConstTask.TASK_41_3;
        } else if (player.playerTask.taskMain.id == 41 && player.playerTask.taskMain.index == 4) {
            return ConstTask.TASK_41_4;
        } else if (player.playerTask.taskMain.id == 41 && player.playerTask.taskMain.index == 5) {
            return ConstTask.TASK_41_5;
        } else if (player.playerTask.taskMain.id == 41 && player.playerTask.taskMain.index == 6) {
            return ConstTask.TASK_41_6;
        } else if (player.playerTask.taskMain.id == 42 && player.playerTask.taskMain.index == 0) {
            return ConstTask.TASK_42_0;
        } else if (player.playerTask.taskMain.id == 42 && player.playerTask.taskMain.index == 1) {
            return ConstTask.TASK_42_1;
        } else if (player.playerTask.taskMain.id == 42 && player.playerTask.taskMain.index == 2) {
            return ConstTask.TASK_42_2;
        } else if (player.playerTask.taskMain.id == 42 && player.playerTask.taskMain.index == 3) {
            return ConstTask.TASK_42_3;
        } else if (player.playerTask.taskMain.id == 42 && player.playerTask.taskMain.index == 4) {
            return ConstTask.TASK_42_4;
        } else if (player.playerTask.taskMain.id == 42 && player.playerTask.taskMain.index == 5) {
            return ConstTask.TASK_42_5;
        } else if (player.playerTask.taskMain.id == 42 && player.playerTask.taskMain.index == 6) {
            return ConstTask.TASK_42_6;
        } else if (player.playerTask.taskMain.id == 43 && player.playerTask.taskMain.index == 0) {
            return ConstTask.TASK_43_0;
        } else if (player.playerTask.taskMain.id == 43 && player.playerTask.taskMain.index == 1) {
            return ConstTask.TASK_43_1;
        } else if (player.playerTask.taskMain.id == 43 && player.playerTask.taskMain.index == 2) {
            return ConstTask.TASK_43_2;
        } else if (player.playerTask.taskMain.id == 43 && player.playerTask.taskMain.index == 3) {
            return ConstTask.TASK_43_3;
        } else if (player.playerTask.taskMain.id == 43 && player.playerTask.taskMain.index == 4) {
            return ConstTask.TASK_43_4;
        } else if (player.playerTask.taskMain.id == 43 && player.playerTask.taskMain.index == 5) {
            return ConstTask.TASK_43_5;
        } else if (player.playerTask.taskMain.id == 43 && player.playerTask.taskMain.index == 6) {
            return ConstTask.TASK_43_6;
        } else if (player.playerTask.taskMain.id == 44 && player.playerTask.taskMain.index == 0) {
            return ConstTask.TASK_44_0;
        } else if (player.playerTask.taskMain.id == 44 && player.playerTask.taskMain.index == 1) {
            return ConstTask.TASK_44_1;
        } else if (player.playerTask.taskMain.id == 44 && player.playerTask.taskMain.index == 2) {
            return ConstTask.TASK_44_2;
        } else if (player.playerTask.taskMain.id == 44 && player.playerTask.taskMain.index == 3) {
            return ConstTask.TASK_44_3;
        } else if (player.playerTask.taskMain.id == 44 && player.playerTask.taskMain.index == 4) {
            return ConstTask.TASK_44_4;
        } else if (player.playerTask.taskMain.id == 44 && player.playerTask.taskMain.index == 5) {
            return ConstTask.TASK_44_5;
        } else if (player.playerTask.taskMain.id == 44 && player.playerTask.taskMain.index == 6) {
            return ConstTask.TASK_44_6;
        } else if (player.playerTask.taskMain.id == 45 && player.playerTask.taskMain.index == 0) {
            return ConstTask.TASK_45_0;
        } else if (player.playerTask.taskMain.id == 45 && player.playerTask.taskMain.index == 1) {
            return ConstTask.TASK_45_1;
        } else if (player.playerTask.taskMain.id == 45 && player.playerTask.taskMain.index == 2) {
            return ConstTask.TASK_45_2;
        } else if (player.playerTask.taskMain.id == 45 && player.playerTask.taskMain.index == 3) {
            return ConstTask.TASK_45_3;
        } else if (player.playerTask.taskMain.id == 45 && player.playerTask.taskMain.index == 4) {
            return ConstTask.TASK_45_4;
        } else if (player.playerTask.taskMain.id == 45 && player.playerTask.taskMain.index == 5) {
            return ConstTask.TASK_45_5;
        } else if (player.playerTask.taskMain.id == 45 && player.playerTask.taskMain.index == 6) {
            return ConstTask.TASK_45_6;
        } else if (player.playerTask.taskMain.id == 46 && player.playerTask.taskMain.index == 0) {
            return ConstTask.TASK_46_0;
        } else if (player.playerTask.taskMain.id == 46 && player.playerTask.taskMain.index == 1) {
            return ConstTask.TASK_46_1;
        } else if (player.playerTask.taskMain.id == 46 && player.playerTask.taskMain.index == 2) {
            return ConstTask.TASK_46_2;
        } else if (player.playerTask.taskMain.id == 46 && player.playerTask.taskMain.index == 3) {
            return ConstTask.TASK_46_3;
        } else if (player.playerTask.taskMain.id == 46 && player.playerTask.taskMain.index == 4) {
            return ConstTask.TASK_46_4;
        } else if (player.playerTask.taskMain.id == 46 && player.playerTask.taskMain.index == 5) {
            return ConstTask.TASK_46_5;
        } else if (player.playerTask.taskMain.id == 46 && player.playerTask.taskMain.index == 6) {
            return ConstTask.TASK_46_6;
        } else if (player.playerTask.taskMain.id == 47 && player.playerTask.taskMain.index == 0) {
            return ConstTask.TASK_47_0;
        } else if (player.playerTask.taskMain.id == 47 && player.playerTask.taskMain.index == 1) {
            return ConstTask.TASK_47_1;
        } else if (player.playerTask.taskMain.id == 47 && player.playerTask.taskMain.index == 2) {
            return ConstTask.TASK_47_2;
        } else if (player.playerTask.taskMain.id == 47 && player.playerTask.taskMain.index == 3) {
            return ConstTask.TASK_47_3;
        } else if (player.playerTask.taskMain.id == 47 && player.playerTask.taskMain.index == 4) {
            return ConstTask.TASK_47_4;
        } else if (player.playerTask.taskMain.id == 47 && player.playerTask.taskMain.index == 5) {
            return ConstTask.TASK_47_5;
        } else if (player.playerTask.taskMain.id == 47 && player.playerTask.taskMain.index == 6) {
            return ConstTask.TASK_47_6;
        } else if (player.playerTask.taskMain.id == 48 && player.playerTask.taskMain.index == 0) {
            return ConstTask.TASK_48_0;
        } else if (player.playerTask.taskMain.id == 48 && player.playerTask.taskMain.index == 1) {
            return ConstTask.TASK_48_1;
        } else if (player.playerTask.taskMain.id == 48 && player.playerTask.taskMain.index == 2) {
            return ConstTask.TASK_48_2;
        } else if (player.playerTask.taskMain.id == 48 && player.playerTask.taskMain.index == 3) {
            return ConstTask.TASK_48_3;
        } else if (player.playerTask.taskMain.id == 48 && player.playerTask.taskMain.index == 4) {
            return ConstTask.TASK_48_4;
        } else if (player.playerTask.taskMain.id == 48 && player.playerTask.taskMain.index == 5) {
            return ConstTask.TASK_48_5;
        } else if (player.playerTask.taskMain.id == 48 && player.playerTask.taskMain.index == 6) {
            return ConstTask.TASK_48_6;
        } else if (player.playerTask.taskMain.id == 49 && player.playerTask.taskMain.index == 0) {
            return ConstTask.TASK_49_0;
        } else if (player.playerTask.taskMain.id == 49 && player.playerTask.taskMain.index == 1) {
            return ConstTask.TASK_49_1;
        } else if (player.playerTask.taskMain.id == 49 && player.playerTask.taskMain.index == 2) {
            return ConstTask.TASK_49_2;
        } else if (player.playerTask.taskMain.id == 49 && player.playerTask.taskMain.index == 3) {
            return ConstTask.TASK_49_3;
        } else if (player.playerTask.taskMain.id == 49 && player.playerTask.taskMain.index == 4) {
            return ConstTask.TASK_49_4;
        } else if (player.playerTask.taskMain.id == 49 && player.playerTask.taskMain.index == 5) {
            return ConstTask.TASK_49_5;
        } else if (player.playerTask.taskMain.id == 49 && player.playerTask.taskMain.index == 6) {
            return ConstTask.TASK_49_6;
        } else if (player.playerTask.taskMain.id == 50 && player.playerTask.taskMain.index == 0) {
            return ConstTask.TASK_50_0;
        } else if (player.playerTask.taskMain.id == 50 && player.playerTask.taskMain.index == 1) {
            return ConstTask.TASK_50_1;
        } else if (player.playerTask.taskMain.id == 50 && player.playerTask.taskMain.index == 2) {
            return ConstTask.TASK_50_2;
        } else if (player.playerTask.taskMain.id == 50 && player.playerTask.taskMain.index == 3) {
            return ConstTask.TASK_50_3;
        } else if (player.playerTask.taskMain.id == 50 && player.playerTask.taskMain.index == 4) {
            return ConstTask.TASK_50_4;
        } else if (player.playerTask.taskMain.id == 50 && player.playerTask.taskMain.index == 5) {
            return ConstTask.TASK_50_5;
        } else if (player.playerTask.taskMain.id == 50 && player.playerTask.taskMain.index == 6) {
            return ConstTask.TASK_50_6;
        } else {
            return -1;
        }
    }

    //--------------------------------------------------------------------------
    public SideTaskTemplate getSideTaskTemplateById(int id) {
        if (id != -1) {
            return Manager.SIDE_TASKS_TEMPLATE.get(id);
        }
        return null;
    }

    public void changeSideTask(Player player, byte level) {
        if (player.playerTask.sideTask.leftTask > 0) {
            player.playerTask.sideTask.reset();
            SideTaskTemplate temp = Manager.SIDE_TASKS_TEMPLATE.get(Util.nextInt(0, Manager.SIDE_TASKS_TEMPLATE.size() - 1));
            player.playerTask.sideTask.template = temp;
            player.playerTask.sideTask.maxCount = Util.nextInt(temp.count[level][0], temp.count[level][1]);
            player.playerTask.sideTask.leftTask--;
            player.playerTask.sideTask.level = level;
            player.playerTask.sideTask.receivedTime = System.currentTimeMillis();
            NpcService.gI().createTutorial(player, NpcService.gI().getAvatar(ConstNpc.BO_MONG), "Nhi·ªám v·ª• c·∫•p ƒë·ªô " + player.playerTask.sideTask.getLevel() + ":\b"
                    + player.playerTask.sideTask.getName() + "\b"
                    + "Hi·ªán t·∫°i ƒë√£ ho√†n th√†nh: "
                    + player.playerTask.sideTask.count + "/"
                    + player.playerTask.sideTask.maxCount + "\b"
                    + "Th·ªùi gian nh·∫≠n nhi·ªám v·ª•: 0 gi√¢y tr∆∞·ªõc");
            send_text_time_nhiem_vu(player);
        } else {
            Service.getInstance().sendThongBao(player,
                    "B·∫°n ƒë√£ nh·∫≠n h·∫øt nhi·ªám v·ª• h√¥m nay. H√£y ch·ªù t·ªõi ng√†y mai r·ªìi nh·∫≠n ti·∫øp");
        }
    }

    public void send_text_time_nhiem_vu(Player player) {
        if (player.playerTask.sideTask.template != null) {
            ItemTimeService.gI().sendTextTime(player, TEXT_NHIEM_VU_HANG_NGAY, "Nhi·ªám v·ª• h·∫±ng ng√†y: " + player.playerTask.sideTask.getName() + " (" + player.playerTask.sideTask.getPercentProcess() + "%)", 20);
        }
        player.lastimelogin3 = System.currentTimeMillis();
    }

    public void removeSideTask(Player player) {
        Service.getInstance().sendThongBao(player, "Nhi·ªám v·ª• l√† " + player.playerTask.sideTask.getName() + " ƒë√£ b·ªã h·ªßy b·ªè");
        player.playerTask.sideTask.reset();
    }

    public void paySideTask(Player player) {
        if (player.playerTask.sideTask.template != null) {
            if (player.playerTask.sideTask.isDone()) {
                int goldReward = 0;
                switch (player.playerTask.sideTask.level) {
                    case ConstTask.EASY:
                        goldReward = ConstTask.GOLD_EASY;
                        break;
                    case ConstTask.NORMAL:
                        goldReward = ConstTask.GOLD_NORMAL;
                        break;
                    case ConstTask.HARD:
                        goldReward = ConstTask.GOLD_HARD;
                        break;
                    case ConstTask.VERY_HARD:
                        goldReward = ConstTask.GOLD_VERY_HARD;
                        break;
                    case ConstTask.HELL:
                        goldReward = ConstTask.GOLD_HELL;
                        break;
                }
                if (Manager.EVENT_SEVER == 4) {
                    Item it = ItemService.gI().createNewItem((short) ConstItem.DO_XANH);
                    it.itemOptions.add(new ItemOption(74, 0));
                    InventoryService.gI().addItemBag(player, it, 0);
                    InventoryService.gI().sendItemBags(player);
                }
                
                player.inventory.addGold(goldReward);
                Service.getInstance().sendMoney(player);
                Service.getInstance().sendThongBao(player, "B·∫°n nh·∫≠n ƒë∆∞·ª£c "
                        + Util.numberToMoney(goldReward) + " v√†ng");
                player.playerTask.sideTask.reset();
            } else {
                Service.getInstance().sendThongBao(player, "B·∫°n ch∆∞a ho√†n th√†nh nhi·ªám v·ª•");
            }
        }
    }

    public void checkDoneSideTaskKillMob(Player player, Mob mob) {
        if (player.playerTask.sideTask.template != null) {
            if ((player.playerTask.sideTask.template.id == 0 && mob.tempId == ConstMob.KHUNG_LONG)
                    || (player.playerTask.sideTask.template.id == 1 && mob.tempId == ConstMob.LON_LOI)
                    || (player.playerTask.sideTask.template.id == 2 && mob.tempId == ConstMob.QUY_DAT)
                    || (player.playerTask.sideTask.template.id == 3 && mob.tempId == ConstMob.KHUNG_LONG_ME)
                    || (player.playerTask.sideTask.template.id == 4 && mob.tempId == ConstMob.LON_LOI_ME)
                    || (player.playerTask.sideTask.template.id == 5 && mob.tempId == ConstMob.QUY_DAT_ME)
                    || (player.playerTask.sideTask.template.id == 6 && mob.tempId == ConstMob.THAN_LAN_BAY)
                    || (player.playerTask.sideTask.template.id == 7 && mob.tempId == ConstMob.PHI_LONG)
                    || (player.playerTask.sideTask.template.id == 8 && mob.tempId == ConstMob.QUY_BAY)
                    || (player.playerTask.sideTask.template.id == 9 && mob.tempId == ConstMob.THAN_LAN_ME)
                    || (player.playerTask.sideTask.template.id == 10 && mob.tempId == ConstMob.PHI_LONG_ME)
                    || (player.playerTask.sideTask.template.id == 11 && mob.tempId == ConstMob.QUY_BAY_ME)
                    || (player.playerTask.sideTask.template.id == 12 && mob.tempId == ConstMob.HEO_RUNG)
                    || (player.playerTask.sideTask.template.id == 13 && mob.tempId == ConstMob.HEO_DA_XANH)
                    || (player.playerTask.sideTask.template.id == 14 && mob.tempId == ConstMob.HEO_XAYDA)
                    || (player.playerTask.sideTask.template.id == 15 && mob.tempId == ConstMob.OC_MUON_HON)
                    || (player.playerTask.sideTask.template.id == 16 && mob.tempId == ConstMob.OC_SEN)
                    || (player.playerTask.sideTask.template.id == 17 && mob.tempId == ConstMob.HEO_XAYDA_ME)
                    || (player.playerTask.sideTask.template.id == 18 && mob.tempId == ConstMob.KHONG_TAC)
                    || (player.playerTask.sideTask.template.id == 19 && mob.tempId == ConstMob.QUY_DAU_TO)
                    || (player.playerTask.sideTask.template.id == 20 && mob.tempId == ConstMob.QUY_DIA_NGUC)
                    || (player.playerTask.sideTask.template.id == 21 && mob.tempId == ConstMob.HEO_RUNG_ME)
                    || (player.playerTask.sideTask.template.id == 22 && mob.tempId == ConstMob.HEO_XANH_ME)
                    || (player.playerTask.sideTask.template.id == 23 && mob.tempId == ConstMob.ALIEN)
                    || (player.playerTask.sideTask.template.id == 24 && mob.tempId == ConstMob.TAMBOURINE)
                    || (player.playerTask.sideTask.template.id == 25 && mob.tempId == ConstMob.DRUM)
                    || (player.playerTask.sideTask.template.id == 26 && mob.tempId == ConstMob.AKKUMAN)
                    || (player.playerTask.sideTask.template.id == 27 && mob.tempId == ConstMob.NAPPA)
                    || (player.playerTask.sideTask.template.id == 28 && mob.tempId == ConstMob.SOLDIER)
                    || (player.playerTask.sideTask.template.id == 29 && mob.tempId == ConstMob.APPULE)
                    || (player.playerTask.sideTask.template.id == 30 && mob.tempId == ConstMob.RASPBERRY)
                    || (player.playerTask.sideTask.template.id == 31 && mob.tempId == ConstMob.THAN_LAN_XANH)
                    || (player.playerTask.sideTask.template.id == 32 && mob.tempId == ConstMob.QUY_DAU_NHON)
                    || (player.playerTask.sideTask.template.id == 33 && mob.tempId == ConstMob.QUY_DAU_VANG)
                    || (player.playerTask.sideTask.template.id == 34 && mob.tempId == ConstMob.QUY_DA_TIM)
                    || (player.playerTask.sideTask.template.id == 35 && mob.tempId == ConstMob.QUY_GIA)
                    || (player.playerTask.sideTask.template.id == 36 && mob.tempId == ConstMob.CA_SAU)
                    || (player.playerTask.sideTask.template.id == 37 && mob.tempId == ConstMob.DOI_DA_XANH)
                    || (player.playerTask.sideTask.template.id == 38 && mob.tempId == ConstMob.QUY_CHIM)
                    || (player.playerTask.sideTask.template.id == 39 && mob.tempId == ConstMob.LINH_DAU_TROC)
                    || (player.playerTask.sideTask.template.id == 40 && mob.tempId == ConstMob.LINH_TAI_DAI)
                    || (player.playerTask.sideTask.template.id == 41 && mob.tempId == ConstMob.LINH_VU_TRU)
                    || (player.playerTask.sideTask.template.id == 42 && mob.tempId == ConstMob.KHI_LONG_DEN)
                    || (player.playerTask.sideTask.template.id == 43 && mob.tempId == ConstMob.KHI_GIAP_SAT)
                    || (player.playerTask.sideTask.template.id == 44 && mob.tempId == ConstMob.KHI_LONG_DO)
                    || (player.playerTask.sideTask.template.id == 45 && mob.tempId == ConstMob.KHI_LONG_VANG)
                    || (player.playerTask.sideTask.template.id == 46 && mob.tempId == ConstMob.XEN_CON_CAP_1)
                    || (player.playerTask.sideTask.template.id == 47 && mob.tempId == ConstMob.XEN_CON_CAP_2)
                    || (player.playerTask.sideTask.template.id == 48 && mob.tempId == ConstMob.XEN_CON_CAP_3)
                    || (player.playerTask.sideTask.template.id == 49 && mob.tempId == ConstMob.XEN_CON_CAP_4)
                    || (player.playerTask.sideTask.template.id == 50 && mob.tempId == ConstMob.XEN_CON_CAP_5)
                    || (player.playerTask.sideTask.template.id == 51 && mob.tempId == ConstMob.XEN_CON_CAP_6)
                    || (player.playerTask.sideTask.template.id == 52 && mob.tempId == ConstMob.XEN_CON_CAP_7)
                    || (player.playerTask.sideTask.template.id == 53 && mob.tempId == ConstMob.XEN_CON_CAP_8)
                    || (player.playerTask.sideTask.template.id == 54 && mob.tempId == ConstMob.TAI_TIM)
                    || (player.playerTask.sideTask.template.id == 55 && mob.tempId == ConstMob.ABO)
                    || (player.playerTask.sideTask.template.id == 56 && mob.tempId == ConstMob.KADO)
                    || (player.playerTask.sideTask.template.id == 57 && mob.tempId == ConstMob.DA_XANH)) {
                player.playerTask.sideTask.count++;
                notifyProcessSideTask(player);
            }
        }
    }

    public void checkDoneSideTaskPickItem(Player player, ItemMap item) {
        if (player.playerTask.sideTask.template != null) {
            if ((player.playerTask.sideTask.template.id == 58 && item.itemTemplate.type == 9)) {
                player.playerTask.sideTask.count += item.quantity;
                notifyProcessSideTask(player);
            }
        }
    }

    private void notifyProcessSideTask(Player player) {
        int percentDone = player.playerTask.sideTask.getPercentProcess();
        boolean notify = false;
        if (percentDone != 100) {
            if (!player.playerTask.sideTask.notify90 && percentDone >= 90) {
                player.playerTask.sideTask.notify90 = true;
                notify = true;
            } else if (!player.playerTask.sideTask.notify80 && percentDone >= 80) {
                player.playerTask.sideTask.notify80 = true;
                notify = true;
            } else if (!player.playerTask.sideTask.notify70 && percentDone >= 70) {
                player.playerTask.sideTask.notify70 = true;
                notify = true;
            } else if (!player.playerTask.sideTask.notify60 && percentDone >= 60) {
                player.playerTask.sideTask.notify60 = true;
                notify = true;
            } else if (!player.playerTask.sideTask.notify50 && percentDone >= 50) {
                player.playerTask.sideTask.notify50 = true;
                notify = true;
            } else if (!player.playerTask.sideTask.notify40 && percentDone >= 40) {
                player.playerTask.sideTask.notify40 = true;
                notify = true;
            } else if (!player.playerTask.sideTask.notify30 && percentDone >= 30) {
                player.playerTask.sideTask.notify30 = true;
                notify = true;
            } else if (!player.playerTask.sideTask.notify20 && percentDone >= 20) {
                player.playerTask.sideTask.notify20 = true;
                notify = true;
            } else if (!player.playerTask.sideTask.notify10 && percentDone >= 10) {
                player.playerTask.sideTask.notify10 = true;
                notify = true;
            } else if (!player.playerTask.sideTask.notify0 && percentDone >= 0) {
                player.playerTask.sideTask.notify0 = true;
                notify = true;
            }
            if (notify) {
                Service.getInstance().sendThongBao(player, "Nhi·ªám v·ª•: "
                        + player.playerTask.sideTask.getName() + " ƒë√£ ho√†n th√†nh: "
                        + player.playerTask.sideTask.count + "/" + player.playerTask.sideTask.maxCount + " ("
                        + percentDone + "%)");
            }
        } else {
            Service.getInstance().sendThongBao(player, "Ch√∫c m·ª´ng b·∫°n ƒë√£ ho√†n th√†nh nhi·ªám v·ª•, "
                    + "b√¢y gi·ªù h√£y quay v·ªÅ B√≤ M·ªông tr·∫£ nhi·ªám v·ª•.");
        }
    }

    public void sendAchivement(Player player) {
        List<Achivement> achivements = player.playerTask.achivements;
        Message m = new Message(Cmd.ACHIEVEMENT);
        DataOutputStream ds = m.writer();
        try {
            ds.writeByte(0);
            ds.writeByte(achivements.size());
            for (Achivement a : achivements) {
                String detail = String.format(a.getDetail(), a.getCount(player), a.getMaxCount());
                ds.writeUTF(a.getName());
                if (a.getName().equals("L·∫ßn ƒë·∫ßu n·∫°p ng·ªçc")) {
                    ds.writeUTF("N·∫°p √≠t nh·∫•t 150 ng·ªçc");
                } else if (a.getName().equals("Tr√πm nh·∫∑t ve chai")) {
                    if (player.gender == 0) {
                        ds.writeUTF("B√°n cho Bunma 200 m√≥n ƒë·ªì");
                    } else if (player.gender == 1) {
                        ds.writeUTF("B√°n cho Dende 200 m√≥n ƒë·ªì");
                    } else {
                        ds.writeUTF(detail);
                    }
                } else {
                    ds.writeUTF(detail);
                }
                ds.writeShort(a.getMoney());
                ds.writeBoolean(a.isFinish());
                ds.writeBoolean(a.isReceive());
            }
            ds.flush();
            player.sendMessage(m);
            m.cleanup();
        } catch (IOException e) {

        }
    }

    public void rewardAchivement(Player player, byte id) {
        Achivement achivement = player.playerTask.achivements.get(id);
        if (achivement.isFinish()) {
            player.inventory.ruby += achivement.getMoney();
            Service.getInstance().sendMoney(player);
            achivement.setReceive(true);
            sendAchivement(player);
            Service.getInstance().sendThongBao(player, "B·∫°n nh·∫≠n ƒë∆∞·ª£c " + achivement.getMoney() + " h·ªìng ng·ªçc");
        }
    }

    public void checkDoneAchivements(Player player) {
        List<Achivement> list = player.playerTask.achivements;
        for (Achivement achivement : list) {
            if (achivement.getId() == ConstAchive.GIA_NHAP_THAN_CAP || achivement.getId() == ConstAchive.SUC_MANH_GIOI_VUONG_THAN) {
                if (achivement.isDone(player)) {
                    achivement.setFinish(true);
                }
            } else if (achivement.isDone(player)) {
                achivement.setFinish(true);
            }
        }
    }
}
