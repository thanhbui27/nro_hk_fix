package nro.models.boss.fide;

import nro.models.boss.*;
import nro.models.player.Player;
import nro.server.ServerNotify;
import nro.services.TaskService;
import nro.services.func.ChangeMapService;

/**
 *
 * @author üíñ Tr·∫ßn L·∫°i üíñ
 * @copyright üíñ GirlkuN üíñ
 *
 */
public class FideDaiCa2 extends FutureBoss {

    public FideDaiCa2() {
        super(BossFactory.FIDE_DAI_CA_2, BossData.FIDE_DAI_CA_2);
    }

    @Override
    protected boolean useSpecialSkill() {
        return false;
    }


    @Override
    public void rewards(Player pl) {
        TaskService.gI().checkDoneTaskKillBoss(pl, this);
        generalRewards(pl);
    }

    @Override
    public void idle() {

    }

    @Override
    public void checkPlayerDie(Player pl) {

    }

    @Override
    public void initTalk() {
        this.textTalkMidle = new String[]{"Xem b·∫£n lƒ©nh c·ªßa ng∆∞∆°i nh∆∞ n√†o ƒë√£", "C√°c ng∆∞∆°i t·ªõi s·ªë m·ªõi g·∫∑p ph·∫£i ta"};
        this.textTalkAfter = new String[]{"√Åc qu·ª∑ bi·∫øn h√¨nh, h√™y aaa......."};
    }

    @Override
    public void leaveMap() {
        Boss fd3 = BossFactory.createBoss(BossFactory.FIDE_DAI_CA_3);
        fd3.zone = this.zone;
        fd3.location.x = this.location.x;
        fd3.location.y = this.location.y;
        super.leaveMap();
        BossManager.gI().removeBoss(this);
    }

    @Override
    public void joinMap() {
        if (this.zone != null) {
            ChangeMapService.gI().changeMap(this, zone, this.location.x, this.location.y);
            ServerNotify.gI().notify("Boss " + this.name + " v·ª´a xu·∫•t hi·ªán t·∫°i " + this.zone.map.mapName);
        }
    }
}
