package nro.models.npc;

import nro.services.func.minigame.ChonAiDay_Gem;
import nro.services.func.minigame.ChonAiDay_Ruby;
import nro.services.func.minigame.ChonAiDay_Gold;
import nro.attr.Attribute;
import nro.attr.AttributeManager;
import nro.consts.*;
import nro.dialog.ConfirmDialog;
import nro.dialog.MenuDialog;
import nro.jdbc.daos.PlayerDAO;
import nro.lib.RandomCollection;
import nro.models.boss.Boss;
import nro.models.boss.BossFactory;
import nro.models.boss.BossManager;
import nro.models.boss.event.EscortedBoss;
import nro.models.boss.event.Qilin;
import nro.models.clan.Clan;
import nro.models.clan.ClanMember;
import nro.models.item.Item;
import nro.models.item.ItemOption;
import nro.models.item.ItemTemplate;
import nro.models.map.ItemMap;
import nro.models.map.Map;
import nro.models.map.SantaCity;
import nro.models.map.Zone;
import nro.models.map.DaiHoiVoThuat.DHVT23Service;
import nro.models.map.dungeon.SnakeRoad;
import nro.models.map.dungeon.zones.ZSnakeRoad;
import nro.models.map.mabu.MabuWar;
import nro.models.map.phoban.DoanhTrai;
import nro.models.map.war.BlackBallWar;
import nro.models.map.war.NamekBallWar;
import nro.models.player.Inventory;
import nro.models.player.NPoint;
import nro.models.player.Player;
import nro.models.skill.Skill;
import nro.noti.NotiManager;
import nro.server.Maintenance;
import nro.server.Manager;
import nro.server.ServerManager;
import nro.server.io.Message;
import nro.services.*;
import nro.services.func.*;
import nro.utils.Log;
import nro.utils.SkillUtil;
import nro.utils.TimeUtil;
import nro.utils.Util;

import java.io.IOException;
import java.sql.PreparedStatement;
import java.sql.Timestamp;
import java.time.LocalTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Calendar;
import java.util.HashMap;
import java.util.List;
import java.util.Random;
import java.util.concurrent.Executors;
import java.util.concurrent.ScheduledExecutorService;
import java.util.concurrent.TimeUnit;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.stream.Collectors;
import nro.manager.SieuHangManager;
import nro.models.boss.BossData;
import nro.models.boss.Potaufeu.Boss_NhanBan;
import nro.models.boss.mabu_war.Goku_Tang5;
import nro.models.boss.mapoffline.Boss_MrP√¥P√¥;
import nro.models.boss.mapoffline.Boss_ThanMeo;
import nro.models.boss.mapoffline.Boss_ThuongDe;
import nro.models.boss.mapoffline.Boss_Whis;
import nro.models.boss.mapoffline.Boss_Yanjiro;
import nro.models.boss.mapoffline.NPC_ToSuKaio;
import nro.models.consignment.ConsignmentShop;
import static nro.models.item.ItemTime.TEXT_NHIEM_VU_HANG_NGAY;
import nro.models.map.DaiHoiVoThuat.DaiHoiVoThuatManager;
import nro.models.map.DaiHoiVoThuat.DaiHoiVoThuatService;
import nro.models.map.VoDaiSinhTu.VoDaiSinhTuService;
import nro.models.map.mabu.MabuWar14h;
import nro.models.map.phoban.BanDoKhoBau;
import nro.models.map.phoban.KhiGas;
import nro.server.Controller;

import static nro.server.Manager.*;
import nro.server.TaiXiu;
import static nro.services.func.CombineServiceNew.CHE_TAO_DO_THIEN_SU;
import static nro.services.func.CombineServiceNew.NANG_CAP_BONG_TAI;
import static nro.services.func.CombineServiceNew.NANG_CAP_SKH;
import static nro.services.func.Input.ADD_ITEM;
import static nro.services.func.Input.NUMERIC;
import static nro.services.func.SummonDragon.*;

/**
 * @author üíñ Tr·∫ßn L·∫°i üíñ
 * @copyright üíñ GirlkuN üíñ
 */
public class NpcFactory {

    private static boolean nhanVang = true;
    private static boolean nhanDeTu = true;

    // playerid - object
    public static final java.util.Map<Long, Object> PLAYERID_OBJECT = new HashMap<Long, Object>();

    private NpcFactory() {

    }

    public static Npc createNPC(int mapId, int status, int cx, int cy, int tempId, int avartar) {
        Npc npc = null;
        try {
            switch (tempId) {
                case ConstNpc.TORIBOT:
                    npc = new Npc(mapId, status, cx, cy, tempId, avartar) {
                        @Override
                        public void openBaseMenu(Player player) {
                            this.createOtherMenu(player, ConstNpc.BASE_MENU,
                                    "Ch√†o m·ª´ng b·∫°n ƒë·∫øn v·ªõi c·ª≠a h√†ng ƒë√° q√∫y s·ªë 1 th·ªùi ƒë·∫°i", "C·ª≠a H√†ng");
                        }

                        @Override
                        public void confirmMenu(Player player, int select) {
                            if (canOpenNpc(player)) {
                                ShopService.gI().openShopSpecial(player, this, ConstNpc.SHOP_TORIBOT, 0, -1);
                             
                            }
                        }
                    };
                    break;
               
                case ConstNpc.NGO_KHONG:
                    npc = new Npc(mapId, status, cx, cy, tempId, avartar) {
                        @Override
                        public void openBaseMenu(Player player) {
                            this.createOtherMenu(player, ConstNpc.BASE_MENU, "Chu mi nga", "T·∫∑ng qu·∫£\nH·ªìng ƒë√†o\nCh√≠n");
                        }

                        @Override
                        public void confirmMenu(Player player, int select) {
                            if (canOpenNpc(player)) {
                                int itemNeed = ConstItem.QUA_HONG_DAO_CHIN;
                                Item item = InventoryService.gI().findItemBagByTemp(player, itemNeed);
                                if (item != null) {
                                    RandomCollection<Integer> rc = Manager.HONG_DAO_CHIN;
                                    int itemID = rc.next();
                                    int x = cx + Util.nextInt(-50, 50);
                                    int y = player.zone.map.yPhysicInTop(x, cy - 24);
                                    int quantity = 1;
                                    if (itemID == ConstItem.HONG_NGOC) {
                                        quantity = Util.nextInt(1, 2);
                                    }
                                    InventoryService.gI().subQuantityItemsBag(player, item, 1);
                                    InventoryService.gI().sendItemBags(player);
                                    ItemMap itemMap = new ItemMap(player.zone, itemID, quantity, x, y, player.id);
                                    Service.getInstance().dropItemMap(player.zone, itemMap);
                                    npcChat(player.zone, "Xie xie");
                                } else {
                                    Service.getInstance().sendThongBao(player, "Kh√¥ng t√¨m th·∫•y!");
                                }
                            }
                        }
                    };
                    break;
                case ConstNpc.DUONG_TANG:
                    npc = new Npc(mapId, status, cx, cy, tempId, avartar) {
                        @Override
                        public void openBaseMenu(Player player) {
                            if (this.mapId == MapName.LANG_ARU) {
                                this.createOtherMenu(player, ConstNpc.BASE_MENU,
                                        "A mi ph√≤ ph√≤, th√≠ ch·ªß h√£y gi√∫p gi·∫£i c·ª©u ƒë·ªì ƒë·ªá c·ªßa b·∫ßn tƒÉng ƒëang b·ªã phong ·∫•n t·∫°i ng≈© h√†nh s∆°n.",
                                        "ƒê·ªìng √Ω", "T·ª´ ch·ªëi");
                            }
                            if (this.mapId == MapName.NGU_HANH_SON_3) {
                                this.createOtherMenu(player, ConstNpc.BASE_MENU,
                                        "A mi ph√≤ ph√≤, th√≠ ch·ªß h√£y thu th·∫≠p b√πa 'gi·∫£i khai phong ·∫•n', m·ªói ch·ªØ 10 c√°i.",
                                        "V·ªÅ\nL√†ng Aru", "T·ª´ ch·ªëi");
                            }
                            if (this.mapId == MapName.NGU_HANH_SON) {
                                this.createOtherMenu(player, ConstNpc.BASE_MENU,
                                        "A mi ph√≤ ph√≤, th√≠ ch·ªß h√£y thu th·∫≠p b√πa 'gi·∫£i khai phong ·∫•n', m·ªói ch·ªØ 10 c√°i.",
                                        "ƒê·ªïi ƒë√†o ch√≠n", "Gi·∫£i phong ·∫•n", "T·ª´ ch·ªëi");
                            }
                        }

                        @Override
                        public void confirmMenu(Player player, int select) {
                            if (canOpenNpc(player)) {
                                if (this.mapId == MapName.LANG_ARU) {
                                    if (player.iDMark.isBaseMenu()) {
                                        switch (select) {
                                            case 0:

                                                if (!Manager.gI().getGameConfig().isOpenPrisonPlanet()) {
                                                    Service.getInstance().sendThongBao(player,
                                                            "L·ªëi v√†o ng≈© h√†nh s∆°n ch∆∞a m·ªü");
                                                    return;
                                                }

                                                Zone zone = MapService.gI().getZoneJoinByMapIdAndZoneId(player, 124, 0);
                                                if (zone != null) {
                                                    player.location.x = 100;
                                                    player.location.y = 384;
                                                    MapService.gI().goToMap(player, zone);
                                                    Service.getInstance().clearMap(player);
                                                    zone.mapInfo(player);
                                                    player.zone.loadAnotherToMe(player);
                                                    player.zone.load_Me_To_Another(player);
                                                }
                                                // Service.getInstance().sendThongBao(player, "L·ªëi v√†o ng≈© h√†nh s∆°n ch∆∞a
                                                // m·ªü");
                                                break;
                                        }
                                    }
                                }
                                if (this.mapId == MapName.NGU_HANH_SON_3) {
                                    if (player.iDMark.isBaseMenu()) {
                                        switch (select) {
                                            case 0:
                                                Zone zone = MapService.gI().getZoneJoinByMapIdAndZoneId(player, 0, 0);
                                                if (zone != null) {
                                                    player.location.x = 600;
                                                    player.location.y = 432;
                                                    MapService.gI().goToMap(player, zone);
                                                    Service.getInstance().clearMap(player);
                                                    zone.mapInfo(player);
                                                    player.zone.loadAnotherToMe(player);
                                                    player.zone.load_Me_To_Another(player);
                                                }
                                                break;
                                        }
                                    }
                                }
                                if (this.mapId == MapName.NGU_HANH_SON) {
                                    if (player.iDMark.isBaseMenu()) {
                                        switch (select) {
                                            case 0:
                                                // ƒê·ªïi ƒë√†o
                                                Item item = InventoryService.gI().findItemBagByTemp(player,
                                                        ConstItem.QUA_HONG_DAO);
                                                if (item == null || item.quantity < 10) {
                                                    npcChat(player,
                                                            "C·∫ßn 10 qu·∫£ ƒë√†o xanh ƒë·ªÉ ƒë·ªïi l·∫•y ƒë√†o ch√≠n t·ª´ b·∫ßn tƒÉng.");
                                                    return;
                                                }
                                                if (InventoryService.gI().getCountEmptyBag(player) == 0) {
                                                    npcChat(player, "T√∫i ƒë·∫ßy r·ªìi k√¨a.");
                                                    return;
                                                }
                                                Item newItem = ItemService.gI()
                                                        .createNewItem((short) ConstItem.QUA_HONG_DAO_CHIN, 1);
                                                InventoryService.gI().subQuantityItemsBag(player, item, 10);
                                                InventoryService.gI().addItemBag(player, newItem, 0);
                                                InventoryService.gI().sendItemBags(player);
                                                npcChat(player,
                                                        "Ta ƒë√£ ƒë·ªïi cho th√≠ ch·ªß r·ªìi ƒë√≥, h√£y mang cho ƒë·ªá t·ª≠ ta ƒëi n√†o.");
                                                break;

                                            case 1:
                                                // gi·∫£i phong ·∫•n
                                                if (InventoryService.gI().getCountEmptyBag(player) == 0) {
                                                    npcChat(player, "T√∫i ƒë·∫ßy r·ªìi k√¨a.");
                                                    return;
                                                }
                                                int[] itemsNeed = {ConstItem.CHU_GIAI, ConstItem.CHU_KHAI,
                                                    ConstItem.CHU_PHONG, ConstItem.CHU_AN};
                                                List<Item> items = InventoryService.gI().getListItem(player, itemsNeed)
                                                        .stream().filter(i -> i.quantity >= 10)
                                                        .collect(Collectors.toList());
                                                boolean[] flags = new boolean[4];
                                                for (Item i : items) {
                                                    switch ((int) i.template.id) {
                                                        case ConstItem.CHU_GIAI:
                                                            flags[0] = true;
                                                            break;

                                                        case ConstItem.CHU_KHAI:
                                                            flags[1] = true;
                                                            break;

                                                        case ConstItem.CHU_PHONG:
                                                            flags[2] = true;
                                                            break;

                                                        case ConstItem.CHU_AN:
                                                            flags[3] = true;
                                                            break;
                                                    }
                                                }
                                                for (int i = 0; i < flags.length; i++) {
                                                    if (!flags[i]) {
                                                        ItemTemplate template = ItemService.gI()
                                                                .getTemplate(itemsNeed[i]);
                                                        npcChat("Th√≠ ch·ªß c√≤n thi·∫øu " + template.name);
                                                        return;
                                                    }
                                                }

                                                for (Item i : items) {
                                                    InventoryService.gI().subQuantityItemsBag(player, i, 10);
                                                }

                                                RandomCollection<Integer> rc = new RandomCollection<>();
                                                rc.add(10, ConstItem.CAI_TRANG_TON_NGO_KHONG_DE_TU);
                                                rc.add(10, ConstItem.CAI_TRANG_BAT_GIOI_DE_TU);
                                                rc.add(50, ConstItem.GAY_NHU_Y);
                                                switch (player.gender) {
                                                    case ConstPlayer.TRAI_DAT:
                                                        rc.add(30, ConstItem.CAI_TRANG_TON_NGO_KHONG);
                                                        break;

                                                    case ConstPlayer.NAMEC:
                                                        rc.add(30, ConstItem.CAI_TRANG_TON_NGO_KHONG_545);
                                                        break;

                                                    case ConstPlayer.XAYDA:
                                                        rc.add(30, ConstItem.CAI_TRANG_TON_NGO_KHONG_546);
                                                        break;
                                                }
                                                int itemID = rc.next();
                                                Item nItem = ItemService.gI().createNewItem((short) itemID);
                                                boolean all = itemID == ConstItem.CAI_TRANG_TON_NGO_KHONG_DE_TU
                                                        || itemID == ConstItem.CAI_TRANG_BAT_GIOI_DE_TU
                                                        || itemID == ConstItem.CAI_TRANG_TON_NGO_KHONG
                                                        || itemID == ConstItem.CAI_TRANG_TON_NGO_KHONG_545
                                                        || itemID == ConstItem.CAI_TRANG_TON_NGO_KHONG_546;
                                                if (all) {
                                                    nItem.itemOptions.add(new ItemOption(50, Util.nextInt(20, 30)));
                                                    nItem.itemOptions.add(new ItemOption(77, Util.nextInt(20, 30)));
                                                    nItem.itemOptions.add(new ItemOption(103, Util.nextInt(20, 30)));
                                                    nItem.itemOptions.add(new ItemOption(93, Util.nextInt(5, 10)));
                                                    nItem.itemOptions.add(new ItemOption(100, Util.nextInt(10, 2000)));
                                                    nItem.itemOptions.add(new ItemOption(101, Util.nextInt(500, 5000)));
                                                }
                                                if (itemID == ConstItem.CAI_TRANG_TON_NGO_KHONG
                                                        || itemID == ConstItem.CAI_TRANG_TON_NGO_KHONG_545
                                                        || itemID == ConstItem.CAI_TRANG_TON_NGO_KHONG_546) {
                                                    nItem.itemOptions.add(new ItemOption(80, Util.nextInt(5, 15)));
                                                    nItem.itemOptions.add(new ItemOption(81, Util.nextInt(5, 15)));
                                                    nItem.itemOptions.add(new ItemOption(106, 0));
                                                } else if (itemID == ConstItem.CAI_TRANG_TON_NGO_KHONG_DE_TU
                                                        || itemID == ConstItem.CAI_TRANG_BAT_GIOI_DE_TU) {
                                                    nItem.itemOptions.add(new ItemOption(197, 0));
                                                }
                                                if (all) {
                                                    if (Util.isTrue(499, 500)) {
                                                        nItem.itemOptions.add(new ItemOption(93, Util.nextInt(3, 30)));
                                                    }
                                                } else if (itemID == ConstItem.GAY_NHU_Y) {
                                                    RandomCollection<Integer> rc2 = new RandomCollection<>();
                                                    rc2.add(60, 30);
                                                    rc2.add(30, 90);
                                                    rc2.add(10, 365);
                                                    nItem.itemOptions.add(new ItemOption(50, Util.nextInt(2, 6)));
                                                    nItem.itemOptions.add(new ItemOption(77, Util.nextInt(2, 6)));
                                                    nItem.itemOptions.add(new ItemOption(103, Util.nextInt(2, 6)));
                                                    nItem.itemOptions.add(new ItemOption(93, rc2.next()));
                                                }
                                                InventoryService.gI().addItemBag(player, nItem, 0);
                                                InventoryService.gI().sendItemBags(player);
                                                npcChat(player.zone,
                                                        "A mi ph√≤ ph√≤, ƒëa t·∫° th√≠ ch·ªß t∆∞∆°ng tr·ª£, xin h√£y nh·∫≠n m√≥n qu√† m·ªçn n√†y, b·∫ßn tƒÉng s·∫Ω ni·ªám ch√∫ gi·∫£i tho√°t cho Ng·ªô Kh√¥ng");
                                                break;
                                        }
                                    }
                                }
                            }
                        }
                    };
                    break;
                case ConstNpc.TAPION:
                    npc = new Npc(mapId, status, cx, cy, tempId, avartar) {
                        @Override
                        public void openBaseMenu(Player player) {
                            if (canOpenNpc(player)) {
                                if (this.mapId == 19) {
                                    this.createOtherMenu(player, ConstNpc.BASE_MENU,
                                            "√Åc qu·ª∑ truy·ªÅn thuy·∫øt Hirudegarn\nƒë√£ tho√°t kh·ªèi phong ·∫•n ng√†n nƒÉm\nH√£y gi√∫p t√¥i ch·∫ø ng·ª± n√≥",
                                            "OK", "T·ª´ ch·ªëi");
                                }
                                if (this.mapId == 126) {
                                    this.createOtherMenu(player, ConstNpc.BASE_MENU, "T√¥i s·∫Ω ƒë∆∞a b·∫°n v·ªÅ", "OK",
                                            "T·ª´ ch·ªëi");
                                }
                            }
                        }

                        @Override
                        public void confirmMenu(Player player, int select) {
                            if (canOpenNpc(player)) {
                                if (this.mapId == 19) {
                                    if (player.iDMark.isBaseMenu()) {
                                        switch (select) {
                                            case 0:
                                                SantaCity santaCity = (SantaCity) MapService.gI().getMapById(126);
                                                if (santaCity != null) {
                                                    if (!santaCity.isOpened() || santaCity.isClosed()) {
                                                        Service.getInstance().sendThongBao(player,
                                                                "H·∫πn g·∫∑p b·∫°n l√∫c 22h m·ªói ng√†y");
                                                        return;
                                                    }
                                                    santaCity.enter(player);
                                                } else {
                                                    Service.getInstance().sendThongBao(player, "C√≥ l·ªói x·∫£y ra!");
                                                }
                                                break;
                                        }
                                    }
                                }
                                if (this.mapId == 126) {
                                    if (player.iDMark.isBaseMenu()) {
                                        switch (select) {
                                            case 0:
                                                SantaCity santaCity = (SantaCity) MapService.gI().getMapById(126);
                                                if (santaCity != null) {
                                                    santaCity.leave(player);
                                                } else {
                                                    Service.getInstance().sendThongBao(player, "C√≥ l·ªói x·∫£y ra!");
                                                }
                                                break;
                                        }
                                    }
                                }
                            }
                        }
                    };
                    break;
                case 77:
                    npc = new Npc(mapId, status, cx, cy, tempId, avartar) {
                        @Override
                        public void openBaseMenu(Player player) {
                            if (canOpenNpc(player)) {
                                if (this.mapId == 0 || this.mapId == 7 || this.mapId == 14) {
                                    if (Manager.gI().demTimeSuKien2() != 0) {
                                        this.createOtherMenu(player, ConstNpc.MENU_DUA_TOP,
                                                "|2|S·ª± ki·ªán ƒëua TOP ch√†o m·ª´ng khai m·ªü m√°y ch·ªß Ng·ªçc R·ªìng Online\n"
                                                + "di·ªÖn ra t·ª´ " + Manager.timeStartDuaTop + " ƒë·∫øn " + Manager.timeEndDuaTop + "\n"
                                                + "Gi·∫£i th∆∞·ªüng kh·ªßng ch∆∞a t·ª´ng c√≥, xem chi ti·∫øt t·∫°i di·ªÖn ƒë√†n, fanpage\n"
                                                + Manager.demTimeSuKien(), "Top\nS·ª©c m·∫°nh", "Top\nƒê·∫°i gia", "T·ª´ ch·ªëi");
                                    } else {
                                        this.createOtherMenu(player, ConstNpc.MENU_DUA_TOP,
                                                "|2|S·ª± ki·ªán ƒëua TOP ch√†o m·ª´ng khai m·ªü m√°y ch·ªß Ng·ªçc R·ªìng Online\n"
                                                + "di·ªÖn ra t·ª´ " + Manager.timeStartDuaTop + " ƒë·∫øn " + Manager.timeEndDuaTop + "\n"
                                                + "Gi·∫£i th∆∞·ªüng kh·ªßng ch∆∞a t·ª´ng c√≥, xem chi ti·∫øt t·∫°i di·ªÖn ƒë√†n, fanpage\n"
                                                + Manager.demTimeSuKien(), "Top\nS·ª©c m·∫°nh", "Top\nƒê·∫°i gia", "Nh·∫≠n th∆∞·ªüng\nS·ª± ki·ªán\nƒêua Top", "T·ª´ ch·ªëi");
                                    }
                                }
                            }
                        }

                        @Override
                        public void confirmMenu(Player player, int select) {
                            if (canOpenNpc(player)) {
                                if (player.iDMark.getIndexMenu() == ConstNpc.MENU_DUA_TOP) {
                                    if (Manager.gI().demTimeSuKien2() > 0) {
                                        switch (select) {
                                            case 0:
                                                Service.getInstance().showTopPower(player);
                                                break;
                                            case 1:
                                                Service.getInstance().showTopRichMan(player);
                                                break;
                                        }
                                    } else {
                                        switch (select) {
                                            case 0:
                                                Service.getInstance().showTopPower(player);
                                                break;
                                            case 1:
                                                Service.getInstance().showTopRichMan(player);
                                                break;
                                            case 2: // xem ƒëi·ªÉm
                                                ShopService.gI().openBoxItemReward(player);
                                                break;
                                        }
                                    }

                                }
                            }
                        }
                    };
                    break;

                case ConstNpc.MR_POPO:
                    npc = new Npc(mapId, status, cx, cy, tempId, avartar) {
                        @Override
                        public void openBaseMenu(Player player) {
                            if (canOpenNpc(player)) {
                                if (this.mapId == 0) {
                                    this.createOtherMenu(player, ConstNpc.BASE_MENU,
                                            "Th∆∞·ª£ng ƒë·∫ø v·ª´a ph√°t hi·ªán 1 lo·∫°i kh√≠ ƒëang √¢m th·∫ßm\n"
                                            + "h·ªßy di·ªát m·ªçi m·∫ßm s·ªëng tr√™n Tr√°i ƒê·∫•t,\n"
                                            + "n√≥ ƒë∆∞·ª£c g·ªçi l√† Destron Gas.\n"
                                            + "Ta s·∫Ω ƒë∆∞a c√°c c·∫≠u ƒë·∫øn n∆°i ·∫•y, c√°c c·∫≠u s·∫µn s√†ng ch∆∞a?",
                                            "Th√¥ng tin\nChi ti·∫øt", "Top 100\nBang h·ªôi",
                                            "Th√†nh t√≠ch\nBang", "OK", "T·ª´ ch·ªëi");
                                }
                            }
                        }

                        @Override
                        public void confirmMenu(Player player, int select) {
                            if (canOpenNpc(player)) {
                                if (this.mapId == 0) {
                                    if (player.iDMark.isBaseMenu()) {
                                        switch (select) {
                                            case 0:// Th√¥ng tin chi ti·∫øt
                                                NpcService.gI().createTutorial(player, avartar, "Ch√∫ng ta g·∫∑p r·∫Øc r·ªëi r·ªìi\b"
                                                        + "Th∆∞·ª£ng ƒê·∫ø n√≥i v·ªõi t√¥i r·∫±ng c√≥ 1 lo·∫°i kh√≠\bg·ªçi l√† Destron Gas, th·ª© n√†y kh√¥ng thu·ªôc v·ªÅ n∆°i ƒë√¢y\n"
                                                        + "N√≥ t√≠ch t·ª• tr√™n Tr√°i ƒê·∫•t\bv√† n√≥ s·∫Ω h·ªßy di·ªát m·ªçi m√¥ t·∫ø b√†o s·ªëng\b"
                                                        + "C√≥ t·∫•t c·∫£ 4 ƒë·ªãa ƒëi·ªÉm m√† Th∆∞·ª£ng ƒê·∫ø b·∫£o t√¥i n√≥i v·ªõi c·∫≠u\bC·∫≠u c√≥ th·ªÉ ƒë·∫øn ki·ªÉm tra...\n"
                                                        + "ƒê·∫ßu ti√™n l√† Th√†nh ph·ªë Santa t·ªça l·∫°c ·ªü ph√≠a T√¢y nam c·ªßa th·ªß ƒë√¥ ·ªü Vi·ªÖn ƒê√¥ng.\n"
                                                        + "Th·ª© hai l√† g·∫ßn Kim T·ª± Th√°p ·ªü v√πng Sa M·∫°c vi·ªÖn t√¢y c·ªßa th·ªß ƒë√¥ ph√≠a B·∫Øc\n"
                                                        + "Th·ª© ba V√πng ƒê·∫•t BƒÉng Gi√° ·ªü Ph∆∞∆°ng B·∫Øc xa x√¥i\n"
                                                        + "Th·ª© t∆∞ l√† H√†nh tinh B√≥ng T·ªëi ƒëang che ph·ªß m·ªôt ph·∫ßn ƒë·ªãa c·∫ßu\bC·∫≠u ƒë√£ hi·ªÉu r√µ ch∆∞a?");
                                                break;
                                            case 1:// Top 100 bang h·ªôi

                                                break;
                                            case 2:// Th√†nh t√≠ch Bang

                                                break;
                                            case 10: //OK
                                                if (player.clan != null) {
                                                    if (player.clan.isLeader(player)) {
                                                        if (player.clan.khiGas != null) {
                                                            this.createOtherMenu(player, ConstNpc.MENU_OPENED_KGHD,
                                                                    "Bang h·ªôi c·ªßa c·∫≠u ƒëang tham gia Destron Gas c·∫•p ƒë·ªô 110\n"
                                                                    + "c·∫≠u c√≥ mu·ªën ƒëi c√πng h·ªç kh√¥ng? (" + Util.convertSecondsToTime2((System.currentTimeMillis() - player.clan.khiGas.lastTimeOpen) / 1000) + ")", "ƒê·ªìng √Ω", "T·ª´ ch·ªëi");
                                                        } else {
                                                            Input.gI().createFormChooseLevelKhiGas(player);
                                                        }
                                                    } else {
                                                        Service.getInstance().sendThongBao(player, "Ch·ª©c nƒÉng ch·ªâ d√†nh cho bang ch·ªß");
                                                    }
                                                }
                                                break;
                                        }
                                    } else if (player.iDMark.getIndexMenu() == ConstNpc.MENU_ACCEPT_GO_TO_KGHD) {
                                        switch (select) {
                                            case 11:
                                                KhiGasHuyDietService.gI().openKhiGas(player, Byte.parseByte(String.valueOf(PLAYERID_OBJECT.get(player.id))));
                                                break;
                                        }
                                    } else if (player.iDMark.getIndexMenu() == ConstNpc.MENU_OPENED_KGHD) {
                                        switch (select) {
                                            case 0:
                                                ChangeMapService.gI().goToKhiGas(player);
                                                break;
                                        }
                                    }
                                }
                            }
                        }
                    };

                    break;
                case ConstNpc.SU_KIEN_HE:
                    npc = new Npc(mapId, status, cx, cy, tempId, avartar) {
                        @Override
                        public void openBaseMenu(Player player) {
                            if (canOpenNpc(player)) {
                                if (this.mapId == 0 || this.mapId == 7 || this.mapId == 14) {
                                    this.createOtherMenu(player, ConstNpc.BASE_MENU, "Xin ch√†o, s·ª± ki·ªán h√® 2024 ƒëang ƒë∆∞·ª£c di·ªÖn ra\n PH√Å TAN C∆†N N√ìNG M√ôA H√à, Ch√∫c c√°c c∆∞ d√¢n vui v·∫ª.", "ƒê·ªïi Qu√†\nS·ª± Ki·ªán", "T·∫Øm\nN∆∞·ªõc N√≥ng", "B·∫Øt\nS√¢u B·ªç", "Shop S·ª± Ki·ªán","T·ª´ Ch·ªëi");
                               }
                            }
                        }

                        @Override
                        public void confirmMenu(Player player, int select) {
                            if (canOpenNpc(player)) {
                                if (this.mapId == 0 || this.mapId == 7 || this.mapId == 14) {
                                    if (player.iDMark.isBaseMenu()) {
                                        switch (select) {
                                            case 0:
                                this.createOtherMenu(player, ConstNpc.ORTHER_MENU, "Xin ch√†o, s·ª± ki·ªán h√® 2024 ƒëang ƒë∆∞·ª£c di·ªÖn ra", "ƒê·ªïi\n V·ªè ·ªêc", "ƒê·ªïi S√≤", "ƒê·ªïi Cua", "ƒê·ªïi \nSao Bi·ªÉn", "ƒê·ªïi Qu√†\n ƒê·∫∑c Bi·ªát", "T·ª´ Ch·ªëi");
                                break;
                            case 1:
                                this.createOtherMenu(player, ConstNpc.ORTHER_MENU1, "Xin ch√†o, s·ª± ki·ªán h√® 2024 ƒëang ƒë∆∞·ª£c di·ªÖn ra", "Ch·∫ø T·∫°o B·ªìn\n T·∫Øm G·ªó", "Ch·∫ø T·∫°o B·ªìn\n T·∫Øm V√†ng", "T·ª´ ch·ªëi");
                                break;
                            case 2:
                                this.createOtherMenu(player, ConstNpc.ORTHER_MENU2, "Xin ch√†o, s·ª± ki·ªán h√® 2024 ƒëang ƒë∆∞·ª£c di·ªÖn ra", "T·∫∑ng B·ªç\nC√°nh C·ª©ng", "T·∫∑ng\nNg√†i ƒê√™m", "T·ª´ ch·ªëi");
                                break;
                            case 3:
                                ShopService.gI().openShopSpecial(player, this, ConstNpc.SHOP_SU_KIEN_HE, 0, -1);
                                break;
                                        }
                     } else if (player.iDMark.getIndexMenu() == ConstNpc.ORTHER_MENU) {
                        int itemExchange = -1;
                        if (select < 3) {
                            switch (select) {
                                case 0:
                                    itemExchange = ConstItem.VO_OC;
                                    break;
                                case 1:
                                    itemExchange = ConstItem.VO_SO;
                                    break;
                                case 2:
                                    itemExchange = ConstItem.CON_CUA;
                                    break;
                                case 3:
                                    itemExchange = ConstItem.SAO_BIEN;
                                    break;
                            }
                            Item item = InventoryService.gI().findItem(player, itemExchange, 99);
                            if (item == null) {
                                Service.getInstance().sendThongBao(player, "Kh√¥ng ƒë·ªß v·∫≠t ph·∫©m");
                                return;
                            }
                            InventoryService.gI().subQuantityItemsBag(player, item, 99);
                        } else {
                            Item voOc = InventoryService.gI().findItem(player, ConstItem.VO_OC, 99);
                            Item voSo = InventoryService.gI().findItem(player, ConstItem.VO_SO, 99);
                            Item conCua = InventoryService.gI().findItem(player, ConstItem.CON_CUA, 99);
                            Item saoBien = InventoryService.gI().findItem(player, ConstItem.SAO_BIEN, 99);
                            if (voOc == null || voSo == null || conCua == null || saoBien == null) {
                                Service.getInstance().sendThongBao(player, "Kh√¥ng ƒë·ªß v·∫≠t ph·∫©m");
                                return;
                            }
                            InventoryService.gI().subQuantityItemsBag(player, voOc, 99);
                            InventoryService.gI().subQuantityItemsBag(player, voSo, 99);
                            InventoryService.gI().subQuantityItemsBag(player, conCua, 99);
                            InventoryService.gI().subQuantityItemsBag(player, saoBien, 99);
                        }
                        RandomCollection<Integer> rd = new RandomCollection<>();
                        if (select == 0) {// ƒë·ªïi v·ªè ·ªëc
                            rd.add(1, ConstItem.BO_HOA_HONG);
                            rd.add(1, ConstItem.BO_HOA_VANG);
                        } else if (select == 1) {// ƒë·ªïi v·ªè s√≤
                            rd.add(1, ConstItem.PET_BO_CANH_CUNG);
                            rd.add(1, ConstItem.PET_NGAI_DEM);
                        } else if (select == 2) { // ƒë·ªïi con cua
                            rd.add(1, 1144); // Ph∆∞·ª£ng ho√†ng l·ª≠a
                            rd.add(1, 897); // r√πa bay
                        } else if (select == 3) { // ƒë·ªïi sao bi·ªÉn
                            rd.add(1, ConstItem.MANH_AO);
                            rd.add(1, ConstItem.MANH_QUAN);
                            rd.add(1, ConstItem.MANH_GIAY);
                        } else {// ƒë·ªïi c·∫£ 4
                            rd.add(1, ConstItem.CAI_TRANG_AO_VIT_CAM);
                            rd.add(1, ConstItem.CAI_TRANG_AO_TRANG_HOA);
                            rd.add(1, ConstItem.CAI_TRANG_NON_ROM_MUA_HE);
                        }

                        int rwID = rd.next();
                        Item rw = ItemService.gI().createNewItem((short) rwID);
                        if (rw.template.type == 11) {// ƒë·ªì ƒëeo l∆∞ng
                            //option
                            rw.itemOptions.add(new ItemOption(50, Util.nextInt(5, 15)));
                            rw.itemOptions.add(new ItemOption(77, Util.nextInt(5, 15)));
                            rw.itemOptions.add(new ItemOption(103, Util.nextInt(5, 15)));

                            if (rw.template.id != ConstItem.MANH_AO || rw.template.id != ConstItem.MANH_QUAN || rw.template.id != ConstItem.MANH_GIAY) {
                                rw.itemOptions.add(new ItemOption(93, Util.nextInt(1, 30)));
                            }

                            if (Util.isTrue(1, 30)) {
                                rw.itemOptions.add(new ItemOption(174, 2023));
                            } else {
                                rw.itemOptions.add(new ItemOption(174, 2023));
                                rw.itemOptions.add(new ItemOption(93, Util.nextInt(1, 30)));
                            }

                        } else if (rw.template.type == 5) {// c·∫£i trang
                            rw.itemOptions.add(new ItemOption(50, Util.nextInt(20, 40)));
                            rw.itemOptions.add(new ItemOption(77, Util.nextInt(20, 40)));
                            rw.itemOptions.add(new ItemOption(103, Util.nextInt(20, 40)));

                            if (Util.isTrue(1, 30)) {
                                rw.itemOptions.add(new ItemOption(174, 2023));
                            } else {
                                rw.itemOptions.add(new ItemOption(174, 2023));
                                rw.itemOptions.add(new ItemOption(93, Util.nextInt(1, 30)));
                            }

                        }

                        InventoryService.gI().addItemBag(player, rw, 1);
                        InventoryService.gI().sendItemBags(player);
                    } else if (player.iDMark.getIndexMenu() == ConstNpc.ORTHER_MENU1) {
                        StringBuilder sb = new StringBuilder();
                        sb.append("|2|Ch·∫ø t·∫°o B·ªìn T·∫Øm ").append(select == 1 ? "g·ªó" : "v√†ng\n").append("|1|C√†nh kh√¥: ").append(InventoryService.gI().getQuantity(player, ConstItem.CANH_KHO)).append("/50\n").append("N∆∞·ªõc su·ªëi tinh khi·∫øt: ").append(InventoryService.gI().getQuantity(player, ConstItem.NUOC_SUOI_TINH_KHIET)).append("/20\n").append("G·ªó l·ªõn: ").append(InventoryService.gI().getQuantity(player, ConstItem.GO_LON)).append("/20\n").append("Que ƒë·ªët: ").append(InventoryService.gI().getQuantity(player, ConstItem.QUE_DOT)).append("/2\n");

                        Item canhKho = InventoryService.gI().findItem(player, ConstItem.CANH_KHO, 50);
                        Item nuocSuoi = InventoryService.gI().findItem(player, ConstItem.NUOC_SUOI_TINH_KHIET, 20);
                        Item goLon = InventoryService.gI().findItem(player, ConstItem.GO_LON, 20);
                        Item queDot = InventoryService.gI().findItem(player, ConstItem.QUE_DOT, 2);
                        Inventory inv = player.inventory;
                        if (select == 0) {
                            sb.append("Gi√° v√†ng: 150.000.000\n");
                        }
                        sb.append("Gi√° v√†ng: 300.000.000\n").append("Gi√° h·ªìng ng·ªçc: 15");
                        ConfirmDialog confDialog = new ConfirmDialog(sb.toString(), () -> {
                            if (canhKho != null && nuocSuoi != null && goLon != null && queDot != null) {
                                int cost = 150000000;
                                if (select == 1) {
                                    if (inv.ruby < 15) {
                                        Service.getInstance().sendThongBao(player, "B·∫°n kh√¥ng ƒë·ªß ti·ªÅn");
                                        return;
                                    }
                                    inv.subRuby(15);
                                    cost = 300000000;
                                }
                                if (inv.gold < cost) {
                                    Service.getInstance().sendThongBao(player, "B·∫°n kh√¥ng ƒë·ªß ti·ªÅn");
                                    return;
                                }
                                inv.subGold(cost);
                                InventoryService.gI().subQuantityItemsBag(player, canhKho, 50);
                                InventoryService.gI().subQuantityItemsBag(player, nuocSuoi, 20);
                                InventoryService.gI().subQuantityItemsBag(player, goLon, 20);
                                InventoryService.gI().subQuantityItemsBag(player, queDot, 2);

                                int rwID = (select == 0 ? ConstItem.BON_TAM_GO : ConstItem.BON_TAM_VANG);
                                Item rw = ItemService.gI().createNewItem((short) rwID);
                                InventoryService.gI().addItemBag(player, rw, 99);
                                InventoryService.gI().sendItemBags(player);
                                Service.getInstance().sendThongBao(player, "B·∫°n Nh·∫≠n ƒë∆∞·ª£c " + rw.template.name);
                            } else {
                                Service.getInstance().sendThongBao(player, "Kh√¥ng ƒë·ªß v·∫≠t ph·∫©m");
                            }
                        });
                        confDialog.show(player);
                   } else if (player.iDMark.getIndexMenu() == ConstNpc.ORTHER_MENU2) {
                        switch (select) {
                            case 0: {
                                Item beetle = InventoryService.gI().findItem(player, ConstItem.BO_CANH_CUNG, 1);
                                if (beetle == null) {
                                    Service.getInstance().sendThongBao(player, "Kh√¥ng ƒë·ªß v·∫≠t ph·∫©m");
                                    return;
                                }
                                InventoryService.gI().subQuantityItemsBag(player, beetle, 1);
                                RandomCollection<Integer> rd = new RandomCollection();

                                rd.add(1, 1252); // Ve S·∫ßu X√™n
                                rd.add(1, 1253); // Ve S·∫ßu X√™n Ti·∫øn H√≥a
                                rd.add(1, ConstItem.CAY_KEM);
                                rd.add(1, ConstItem.CA_HEO);
                                rd.add(1, ConstItem.DIEU_RONG);
                                rd.add(1, ConstItem.CON_DIEU);

                                int rwID = rd.next();
                                Item rw = ItemService.gI().createNewItem((short) rwID);

                                if (rw.template.type == 11) {// ƒë·ªì ƒëeo l∆∞ng
                                    //option
                                    rw.itemOptions.add(new ItemOption(50, Util.nextInt(5, 15)));
                                    rw.itemOptions.add(new ItemOption(77, Util.nextInt(5, 15)));
                                    rw.itemOptions.add(new ItemOption(103, Util.nextInt(5, 15)));
                                } else if (rw.template.type == 23) {// th√∫ bay

                                    rw.itemOptions.add(new ItemOption(50, Util.nextInt(5, 10)));
                                    rw.itemOptions.add(new ItemOption(77, Util.nextInt(5, 10)));
                                    rw.itemOptions.add(new ItemOption(103, Util.nextInt(5, 10)));

                                } else {// c·∫£i trang
                                    //option
                                    rw.itemOptions.add(new ItemOption(50, Util.nextInt(20, 40)));
                                    rw.itemOptions.add(new ItemOption(77, Util.nextInt(20, 40)));
                                    rw.itemOptions.add(new ItemOption(103, Util.nextInt(20, 40)));
                                    rw.itemOptions.add(new ItemOption(199, 0));
                                }
                                // hsd - vƒ©nh vi·ªÖn
                                if (Util.isTrue(1, 30)) {
                                    rw.itemOptions.add(new ItemOption(174, 2023));
                                } else {
                                    rw.itemOptions.add(new ItemOption(174, 2023));
                                    rw.itemOptions.add(new ItemOption(93, Util.nextInt(1, 30)));
                                }

                                InventoryService.gI().addItemBag(player, rw, 1);
                                InventoryService.gI().sendItemBags(player);
                                Service.getInstance().sendThongBao(player, "B·∫°n nh·∫≠n ƒë∆∞·ª£c " + rw.template.name);
                            }
                            break;
                            case 1:
                                Item nightLord = InventoryService.gI().findItem(player, ConstItem.NGAI_DEM, 1);
                                if (nightLord == null) {
                                    Service.getInstance().sendThongBao(player, "Kh√¥ng ƒë·ªß v·∫≠t ph·∫©m");
                                    return;
                                }
                                InventoryService.gI().subQuantityItemsBag(player, nightLord, 1);
                                RandomCollection<Integer> rd = new RandomCollection();

                                rd.add(1, 1252); // Ve S·∫ßu X√™n
                                rd.add(1, 1253); // Ve S·∫ßu X√™n Ti·∫øn H√≥a
                                rd.add(1, ConstItem.CAY_KEM);
                                rd.add(1, ConstItem.CA_HEO);
                                rd.add(1, ConstItem.DIEU_RONG);
                                rd.add(1, ConstItem.CON_DIEU);
                                // qu√†

                                int rwID = rd.next();
                                Item rw = ItemService.gI().createNewItem((short) rwID);

                                if (rw.template.type == 11) {// ƒë·ªì ƒëeo l∆∞ng
                                    //option
                                    rw.itemOptions.add(new ItemOption(50, Util.nextInt(5, 15)));
                                    rw.itemOptions.add(new ItemOption(77, Util.nextInt(5, 15)));
                                    rw.itemOptions.add(new ItemOption(103, Util.nextInt(5, 15)));
                                } else if (rw.template.type == 23) {// th√∫ bay
                                    rw.itemOptions.add(new ItemOption(50, Util.nextInt(5, 10)));
                                    rw.itemOptions.add(new ItemOption(77, Util.nextInt(5, 10)));
                                    rw.itemOptions.add(new ItemOption(103, Util.nextInt(5, 10)));
                                } else {// kh√°c
                                    //option+
                                    rw.itemOptions.add(new ItemOption(188, 0));
                                }
                                // hsd - vƒ©nh vi·ªÖn
                                if (Util.isTrue(1, 30)) {
                                    rw.itemOptions.add(new ItemOption(174, 2023));
                                } else {
                                    rw.itemOptions.add(new ItemOption(174, 2023));
                                    rw.itemOptions.add(new ItemOption(93, Util.nextInt(1, 30)));
                                }

                                InventoryService.gI().addItemBag(player, rw, 1);
                                InventoryService.gI().sendItemBags(player);
                                Service.getInstance().sendThongBao(player, "B·∫°n nh·∫≠n ƒë∆∞·ª£c " + rw.template.name);
                                break;
                                        }
                                    }
                                }
                            }
                        }
                    };

                    break;
                case ConstNpc.LY_TIEU_NUONG_1:
                    npc = new Npc(mapId, status, cx, cy, tempId, avartar) {
                        @Override
                        public void openBaseMenu(Player player) {
                            if (canOpenNpc(player)) {
                            createOtherMenu(player, ConstNpc.BASE_MENU, "Mini game.", "K√©o\nB√∫a\nBao", "Con s·ªë\nmay m·∫Øn\nth·ªèi v√†ng", "Con s·ªë\nmay m·∫Øn\nng·ªçc xanh", "Ch·ªçn ai ƒë√¢y", "ƒê√≥ng");
                            return;
                            }
                        }

                        @Override
                        public void confirmMenu(Player player, int select) {
                            String time = ((ChonAiDay_Gold.gI().lastTimeEnd - System.currentTimeMillis()) / 1000) + " gi√¢y";
                            if (((ChonAiDay_Gold.gI().lastTimeEnd - System.currentTimeMillis()) / 1000) < 0) {
                                ChonAiDay_Gold.gI().lastTimeEnd = System.currentTimeMillis() + 300000;
                            }
                            String time2 = ((ChonAiDay_Ruby.gI().lastTimeEnd - System.currentTimeMillis()) / 1000) + " gi√¢y";
                            if (((ChonAiDay_Ruby.gI().lastTimeEnd - System.currentTimeMillis()) / 1000) < 0) {
                                ChonAiDay_Ruby.gI().lastTimeEnd = System.currentTimeMillis() + 300000;
                            }
                            String time3 = ((ChonAiDay_Gem.gI().lastTimeEnd - System.currentTimeMillis()) / 1000) + " gi√¢y";
                            if (((ChonAiDay_Gem.gI().lastTimeEnd - System.currentTimeMillis()) / 1000) < 0) {
                                ChonAiDay_Gem.gI().lastTimeEnd = System.currentTimeMillis() + 300000;
                            }
                            if (canOpenNpc(player)) {
                                if (this.mapId == 5) {
                            if (player.iDMark.isBaseMenu()) {
                                switch (select) {
                                    case 0: // k√©o, b√∫a, bao
                                        // Th√™m logic cho tr∆∞·ªùng h·ª£p 0
                                        break;
                                    case 1: // Con s·ªë may m·∫Øn v√†ng
                                        x·ª≠L√ΩL·ª±aCh·ªçnMiniGame_Gold(player);
                                        break;
                                    case 2:
                                        x·ª≠L√ΩL·ª±aCh·ªçnMiniGame(player);
                                        break;
                                    case 3: // ch·ªçn ai ƒë√¢y
                                        createOtherMenu(player, ConstNpc.CHON_AI_DAY, "Tr√≤ ch∆°i Ch·ªçn Ai ƒê√¢y ƒëang ƒë∆∞·ª£c di·ªÖn ra, n·∫øu b·∫°n tin t∆∞·ªüng m√¨nh ƒëang tr√†n ƒë·∫ßy "
                                                + "may m·∫Øn th√¨ c√≥ th·ªÉ tham gia th·ª≠", "Th·ªÉ l·ªá", "Ch·ªçn\nV√†ng", "Ch·ªçn\nh·ªìng ng·ªçc", "Ch·ªçn\nng·ªçc xanh");
                                        break;
                                }
                            } else if (player.iDMark.getIndexMenu() == ConstNpc.CON_SO_MAY_MAN_NGOC_XANH) {
                                x·ª≠L√ΩConSoMayManNgocXanh(player, select);
                            } else if (player.iDMark.getIndexMenu() == ConstNpc.CON_SO_MAY_MAN_VANG) {
                                x·ª≠L√ΩConSoMayManVang(player, select);
                            } else if (player.iDMark.getIndexMenu() == ConstNpc.CHON_AI_DAY) {
                                x·ª≠L√ΩChonAiDay(player, select, time);
                            } else if (player.iDMark.getIndexMenu() == ConstNpc.CHON_AI_DAY_VANG) {
                                x·ª≠L√ΩChonAiDayVang(player, select, time);
                            } else if (player.iDMark.getIndexMenu() == ConstNpc.CHON_AI_DAY_HONG_NGOC) {
                                x·ª≠L√ΩChonAiDayRuby(player, select, time2);
                            } else if (player.iDMark.getIndexMenu() == ConstNpc.CHON_AI_DAY_NGOC) {
                                x·ª≠L√ΩChonAiDayGem(player, select, time3);
                            } else if (player.iDMark.getIndexMenu() == ConstNpc.UPDATE_CHON_AI_DAY_NGOC) {
                                switch (select) {
                                    case 0:
                                        createOtherMenu(player, ConstNpc.UPDATE_CHON_AI_DAY_NGOC, "Th·ªùi gian t·ª´ 8h ƒë·∫øn h·∫øt 21h59 h·∫±ng ng√†y\n"
                                                + "M·ªói l∆∞·ª£t ƒë∆∞·ª£c ch·ªçn 10 con s·ªë t·ª´ 0 ƒë·∫øn 99\n"
                                                + "Th·ªùi gian m·ªói l∆∞·ª£t l√† 5 ph√∫t", "C·∫≠p nh·∫≠t", "ƒê√≥ng");
                                        break;
                                }
                            }
                        }
                            }
                        }

                        // Th√™m c√°c ph∆∞∆°ng th·ª©c m·ªõi ƒë·ªÉ x·ª≠ l√Ω logic cho m·ªói tr∆∞·ªùng h·ª£p
                        private void x·ª≠L√ΩL·ª±aCh·ªçnMiniGame(Player player) {
                            LocalTime thoi_gian_hien_tai = LocalTime.now();
                            int gio = thoi_gian_hien_tai.getHour();
                            int phut = thoi_gian_hien_tai.getMinute();
                            String plWin = MiniGame.gI().MiniGame_S1.result_name;
                            String KQ = MiniGame.gI().MiniGame_S1.result + "";
                            String Money = MiniGame.gI().MiniGame_S1.money + "";
                            String count = MiniGame.gI().MiniGame_S1.players.size() + "";
                            String second = MiniGame.gI().MiniGame_S1.second + "";
                            String number = MiniGame.gI().MiniGame_S1.strNumber((int) player.id);
                            StringBuilder previousResults = new StringBuilder("");
                            if (MiniGame.gI().MiniGame_S1.dataKQ_CSMM != null && !MiniGame.gI().MiniGame_S1.dataKQ_CSMM.isEmpty()) {
                                int maxResultsToShow = Math.min(10, MiniGame.gI().MiniGame_S1.dataKQ_CSMM.size());
                                for (int i = MiniGame.gI().MiniGame_S1.dataKQ_CSMM.size() - maxResultsToShow; i < MiniGame.gI().MiniGame_S1.dataKQ_CSMM.size(); i++) {
                                    previousResults.append(MiniGame.gI().MiniGame_S1.dataKQ_CSMM.get(i));
                                    if (i < MiniGame.gI().MiniGame_S1.dataKQ_CSMM.size() - 1) {
                                        previousResults.append(",");
                                    }
                                }
                            }

                            String npcSay = ""
                                    + "K·∫øt qu·∫£ gi·∫£i tr∆∞·ªõc: " + KQ + "\n"
                                    + (previousResults.toString() != "" ? previousResults.toString() + "\n" : "")
                                    + "T·ªïng gi·∫£i th∆∞·ªüng: " + Money + " ng·ªçc\n"
                                    + "<" + second + ">gi√¢y\n"
                                    + (number != "" ? "C√°c s·ªë b·∫°n ch·ªçn: " + number : "");
                            String[] Menus = {
                                "C·∫≠p nh·∫≠t",
                                "1 S·ªë\n5 ng·ªçc xanh",
                                "Ng·∫´u nhi√™n\n1 s·ªë l·∫ª\n5 ng·ªçc xanh",
                                "Ng·∫´u nhi√™n\n1 s·ªë ch·∫µn\n5 ng·ªçc xanh",
                                "H∆∞·ªõng\nd·∫´n\nth√™m",
                                "ƒê√≥ng"
                            };
                            createOtherMenu(player, ConstNpc.CON_SO_MAY_MAN_NGOC_XANH, npcSay, Menus);
                            return;
                        }

                        // Th√™m c√°c ph∆∞∆°ng th·ª©c m·ªõi ƒë·ªÉ x·ª≠ l√Ω logic cho m·ªói tr∆∞·ªùng h·ª£p
                        private void x·ª≠L√ΩL·ª±aCh·ªçnMiniGame_Gold(Player player) {
                            LocalTime thoi_gian_hien_tai = LocalTime.now();
                            int gio = thoi_gian_hien_tai.getHour();
                            int phut = thoi_gian_hien_tai.getMinute();
                            String plWin = MiniGame.gI().MiniGame_S1.result_name;
                            String KQ = MiniGame.gI().MiniGame_S1.result + "";
                            String Money = Util.mumberToLouis(MiniGame.gI().MiniGame_S1.gold) + "";
                            String count = MiniGame.gI().MiniGame_S1.players.size() + "";
                            String second = MiniGame.gI().MiniGame_S1.second + "";
                            String number = MiniGame.gI().MiniGame_S1.strNumber((int) player.id);
                            StringBuilder previousResults = new StringBuilder("");
                            if (MiniGame.gI().MiniGame_S1.dataKQ_CSMM != null && !MiniGame.gI().MiniGame_S1.dataKQ_CSMM.isEmpty()) {
                                int maxResultsToShow = Math.min(10, MiniGame.gI().MiniGame_S1.dataKQ_CSMM.size());
                                for (int i = MiniGame.gI().MiniGame_S1.dataKQ_CSMM.size() - maxResultsToShow; i < MiniGame.gI().MiniGame_S1.dataKQ_CSMM.size(); i++) {
                                    previousResults.append(MiniGame.gI().MiniGame_S1.dataKQ_CSMM.get(i));
                                    if (i < MiniGame.gI().MiniGame_S1.dataKQ_CSMM.size() - 1) {
                                        previousResults.append(",");
                                    }
                                }
                            }

                            String npcSay = ""
                                    + "K·∫øt qu·∫£ gi·∫£i tr∆∞·ªõc: " + KQ + "\n"
                                    + (previousResults.toString() != "" ? previousResults.toString() + "\n" : "")
                                    + "T·ªïng gi·∫£i th∆∞·ªüng: " + Money + " th·ªèi v√†ng\n"
                                    + "<" + second + ">gi√¢y\n"
                                    + (number != "" ? "C√°c s·ªë b·∫°n ch·ªçn: " + number : "");
                            String[] Menus = {
                                "C·∫≠p nh·∫≠t",
                                "1 S·ªë\n 1 th·ªèi v√†ng",
                                "Ng·∫´u nhi√™n\n1 s·ªë l·∫ª\n 1 th·ªèi v√†ng",
                                "Ng·∫´u nhi√™n\n1 s·ªë ch·∫µn\n 1 th·ªèi v√†ng",
                                "H∆∞·ªõng\nd·∫´n\nth√™m",
                                "ƒê√≥ng"
                            };
                            createOtherMenu(player, ConstNpc.CON_SO_MAY_MAN_VANG, npcSay, Menus);
                            return;
                        }

                        private void x·ª≠L√ΩConSoMayManNgocXanh(Player player, int select) {
                            switch (select) {
                                case 0: // c·∫≠p nh·∫≠t
                                    x·ª≠L√ΩL·ª±aCh·ªçnMiniGame(player);
                                    break;
                                case 1: // ch·ªçn 1 s·ªë
                                    Input.gI().createFormConSoMayMan_Gem(player);
                                    break;
                                case 2: // ch·ªçn 1 s·ªë l·∫ª
                                    MiniGame.gI().MiniGame_S1.ramdom1SoLe(player, 1);
                                    break;
                                case 3: // ch·ªçn 1 s·ªë ch·∫µn
                                    MiniGame.gI().MiniGame_S1.ramdom1SoChan(player, 1);
                                    break;
                                case 4:
                                    createOtherMenu(player, 1, "Th·ªùi gian t·ª´ 8h ƒë·∫øn h·∫øt 21h59 h·∫±ng ng√†y\n"
                                            + "M·ªói l∆∞·ª£t ƒë∆∞·ª£c ch·ªçn 10 con s·ªë t·ª´ 0 ƒë·∫øn 99\n"
                                            + "Th·ªùi gian m·ªói l∆∞·ª£t l√† 5 ph√∫t.", "ƒê·ªìng √Ω");
                                    break;
                            }
                        }

                        private void x·ª≠L√ΩConSoMayManVang(Player player, int select) {
                            switch (select) {
                                case 0: // c·∫≠p nh·∫≠t
                                    x·ª≠L√ΩL·ª±aCh·ªçnMiniGame_Gold(player);
                                    break;
                                case 1: // ch·ªçn 1 s·ªë
                                    Input.gI().createFormConSoMayMan_Gold(player);
                                    break;
                                case 2: // ch·ªçn 1 s·ªë l·∫ª
                                    MiniGame.gI().MiniGame_S1.ramdom1SoLe(player, 0);
                                    break;
                                case 3: // ch·ªçn 1 s·ªë ch·∫µn
                                    MiniGame.gI().MiniGame_S1.ramdom1SoChan(player, 0);
                                    break;
                                case 4:
                                    createOtherMenu(player, 1, "Th·ªùi gian t·ª´ 8h ƒë·∫øn h·∫øt 21h59 h·∫±ng ng√†y\n"
                                            + "M·ªói l∆∞·ª£t ƒë∆∞·ª£c ch·ªçn 10 con s·ªë t·ª´ 0 ƒë·∫øn 99\n"
                                            + "Th·ªùi gian m·ªói l∆∞·ª£t l√† 5 ph√∫t.", "ƒê·ªìng √Ω");
                                    break;
                            }
                        }

                        private void x·ª≠L√ΩChonAiDay(Player player, int select, String time) {
                            switch (select) {
                                case 0:
                                    createOtherMenu(player, ConstNpc.IGNORE_MENU, "M·ªói l∆∞·ª£t ch∆°i c√≥ 6 gi·∫£i th∆∞·ªüng\n"
                                            + "ƒê∆∞·ª£c ch·ªçn t·ªëi ƒëa 10 l·∫ßn m·ªói gi·∫£i\n"
                                            + "Th·ªùi gian 1 l∆∞·ª£t ch·ªçn l√† 5 ph√∫t\n"
                                            + "Khi h·∫øt gi·ªù, h·ªá th·ªëng s·∫Ω ng·∫´u nhi√™n ch·ªçn ra 1 ng∆∞·ªùi may m·∫Øn\n"
                                            + "c·ªßa t·ª´ng gi·∫£i v√† trao th∆∞·ªüng.\n"
                                            + "L∆∞u √Ω: N·∫øu tham gia b·∫±ng Ng·ªçc Xanh ho·∫∑c H·ªìng ng·ªçc th√¨ ng∆∞·ªùi th·∫Øng s·∫Ω nh·∫≠n th∆∞·ªüng l√† h·ªìng ng·ªçc.", "OK");
                                    break;
                                case 1:
                                    createOtherMenu(player, ConstNpc.CHON_AI_DAY_VANG, "T·ªïng gi·∫£i th∆∞·ªùng: " + Util.numberToMoney(ChonAiDay_Gold.gI().goldNormar) + " v√†ng, c∆° h·ªôi tr√∫ng c·ªßa b·∫°n l√†: " + player.percentGold(0) + "%\n"
                                            + "T·ªïng gi·∫£i VIP: " + Util.numberToMoney(ChonAiDay_Gold.gI().goldVip) + " v√†ng, c∆° h·ªôi tr√∫ng c·ªßa b·∫°n l√†: " + player.percentGold(1) + "%\n"
                                            + "Th·ªùi gian c√≤n l·∫°i: " + time, "C·∫≠p nh·∫≠p", "Th∆∞·ªùng\n1 tri·ªáu\nv√†ng", "VIP\n10 tri·ªáu\nv√†ng", "ƒê√≥ng");
                                    break;
                                case 2:
                                    createOtherMenu(player, ConstNpc.CHON_AI_DAY_HONG_NGOC, "T·ªïng gi·∫£i th∆∞·ªùng: " + Util.numberToMoney(ChonAiDay_Ruby.gI().rubyNormar) + " h·ªìng ng·ªçc, c∆° h·ªôi tr√∫ng c·ªßa b·∫°n l√†: " + player.percentRuby(0) + "%\nT·ªïng gi·∫£i VIP: " + Util.numberToMoney(ChonAiDay_Ruby.gI().rubyVip) + " h·ªìng ng·ªçc, c∆° h·ªôi tr√∫ng c·ªßa b·∫°n l√†: " + player.percentRuby(1) + "%\n Th·ªùi gian c√≤n l·∫°i: " + time, "C·∫≠p nh·∫≠p", "Th∆∞·ªùng\n10 h·ªìng\nng·ªçc", "VIP\n100 h·ªìng\nng·ªçc", "ƒê√≥ng");
                                    break;
                                case 3:
                                    createOtherMenu(player, ConstNpc.CHON_AI_DAY_NGOC, "T·ªïng gi·∫£i th∆∞·ªùng: " + Util.numberToMoney(ChonAiDay_Gem.gI().gemNormar) + " h·ªìng ng·ªçc, c∆° h·ªôi tr√∫ng c·ªßa b·∫°n l√†: " + player.percentGem(0) + "%\nT·ªïng gi·∫£i VIP: " + Util.numberToMoney(ChonAiDay_Gem.gI().gemVip) + " h·ªìng ng·ªçc, c∆° h·ªôi tr√∫ng c·ªßa b·∫°n l√†: " + player.percentGem(1) + "%\n Th·ªùi gian c√≤n l·∫°i: " + time, "C·∫≠p nh·∫≠p", "Th∆∞·ªùng\n10 ng·ªçc\nxanh", "VIP\n100 ng·ªçc\nxanh", "ƒê√≥ng");
                                    break;
                            }
                        }

                        private void x·ª≠L√ΩChonAiDayVang(Player player, int select, String time) {
                            switch (select) {
                                case 0:
                                    createOtherMenu(player, ConstNpc.CHON_AI_DAY_VANG, "T·ªïng gi·∫£i th∆∞·ªùng: " + Util.numberToMoney(ChonAiDay_Gold.gI().goldNormar) + " v√†ng, c∆° h·ªôi tr√∫ng c·ªßa b·∫°n l√†: " + player.percentGold(0) + "%\nT·ªïng gi·∫£i VIP: " + Util.numberToMoney(ChonAiDay_Gold.gI().goldVip) + " v√†ng, c∆° h·ªôi tr√∫ng c·ªßa b·∫°n l√†: " + player.percentGold(1) + "%\n Th·ªùi gian c√≤n l·∫°i: " + time, "C·∫≠p nh·∫≠p", "Th∆∞·ªùng\n1 tri·ªáu\nv√†ng", "VIP\n10 tri·ªáu\nv√†ng", "ƒê√≥ng");
                                    break;
                                case 1:
                                    x·ª≠L√ΩThuong1TrieuVang(player);
                                    break;
                                case 2:
                                    x·ª≠L√ΩVIP10TrieuVang(player);
                                    break;
                            }
                        }

                        private void x·ª≠L√ΩChonAiDayRuby(Player player, int select, String time) {
                            switch (select) {
                                case 0:
                                    createOtherMenu(player, ConstNpc.CHON_AI_DAY_HONG_NGOC, "T·ªïng gi·∫£i th∆∞·ªùng: " + Util.numberToMoney(ChonAiDay_Ruby.gI().rubyNormar) + " h·ªìng ng·ªçc, c∆° h·ªôi tr√∫ng c·ªßa b·∫°n l√†: " + player.percentRuby(0) + "%\nT·ªïng gi·∫£i VIP: " + Util.numberToMoney(ChonAiDay_Ruby.gI().rubyVip) + " h·ªìng ng·ªçc, c∆° h·ªôi tr√∫ng c·ªßa b·∫°n l√†: " + player.percentRuby(1) + "%\n Th·ªùi gian c√≤n l·∫°i: " + time, "C·∫≠p nh·∫≠p", "Th∆∞·ªùng\n10 h·ªìng\nng·ªçc", "VIP\n100 h·ªìng\nng·ªçc", "ƒê√≥ng");
                                    break;
                                case 1:
                                    x·ª≠L√ΩThuong10HongNgoc(player);
                                    break;
                                case 2:
                                    x·ª≠L√ΩVIP100HongNgoc(player);
                                    break;
                            }
                        }

                        private void x·ª≠L√ΩChonAiDayGem(Player player, int select, String time) {
                            switch (select) {
                                case 0:
                                    createOtherMenu(player, ConstNpc.CHON_AI_DAY_NGOC, "T·ªïng gi·∫£i th∆∞·ªùng: " + Util.numberToMoney(ChonAiDay_Gem.gI().gemNormar) + " h·ªìng ng·ªçc, c∆° h·ªôi tr√∫ng c·ªßa b·∫°n l√†: " + player.percentGem(0) + "%\nT·ªïng gi·∫£i VIP: " + Util.numberToMoney(ChonAiDay_Gem.gI().gemVip) + " h·ªìng ng·ªçc, c∆° h·ªôi tr√∫ng c·ªßa b·∫°n l√†: " + player.percentGem(1) + "%\n Th·ªùi gian c√≤n l·∫°i: " + time, "C·∫≠p nh·∫≠p", "Th∆∞·ªùng\n10 ng·ªçc\nxanh", "VIP\n100 ng·ªçc\nxanh", "ƒê√≥ng");
                                    break;
                                case 1:
                                    x·ª≠L√ΩThuong10NgocXanh(player);
                                    break;
                                case 2:
                                    x·ª≠L√ΩVIP100NgocXanh(player);
                                    break;
                            }
                        }

                        // Th√™m c√°c ph∆∞∆°ng th·ª©c m·ªõi ƒë·ªÉ x·ª≠ l√Ω logic cho m·ªói tr∆∞·ªùng h·ª£p
                        private void x·ª≠L√ΩThuong1TrieuVang(Player player) {
                            try {
                                String time = ((ChonAiDay_Gold.gI().lastTimeEnd - System.currentTimeMillis()) / 1000) + " gi√¢y";
                                if (((ChonAiDay_Gold.gI().lastTimeEnd - System.currentTimeMillis()) / 1000) < 0) {
                                    ChonAiDay_Gold.gI().lastTimeEnd = System.currentTimeMillis() + 300000;
                                }
                                if (player.inventory.gold >= 1_000_000) {
                                    player.inventory.gold -= 1_000_000;
                                    Service.gI().sendMoney(player);
                                    player.goldNormar += 1_000_000;
                                    ChonAiDay_Gold.gI().goldNormar += 1_000_000;
                                    ChonAiDay_Gold.gI().addPlayerNormar(player);
                                    createOtherMenu(player, ConstNpc.CHON_AI_DAY_VANG, "T·ªïng gi·∫£i th∆∞·ªùng: " + Util.numberToMoney(ChonAiDay_Gold.gI().goldNormar) + " v√†ng, c∆° h·ªôi tr√∫ng c·ªßa b·∫°n l√†: " + player.percentGold(0) + "%\nT·ªïng gi·∫£i VIP: " + Util.numberToMoney(ChonAiDay_Gold.gI().goldVip) + " v√†ng, c∆° h·ªôi tr√∫ng c·ªßa b·∫°n l√†: " + player.percentGold(1) + "%\n Th·ªùi gian c√≤n l·∫°i: " + time, "C·∫≠p nh·∫≠p", "Th∆∞·ªùng\n1 tri·ªáu\nv√†ng", "VIP\n10 tri·ªáu\nv√†ng", "ƒê√≥ng");
                                } else {
                                    Service.gI().sendThongBao(player, "B·∫°n kh√¥ng ƒë·ªß v√†ng");
                                }
                            } catch (Exception ex) {
                                System.out.println("L·ªói CHON_AI_DAY_VANG");
                            }
                        }

                        private void x·ª≠L√ΩVIP10TrieuVang(Player player) {
                            try {
                                String time = ((ChonAiDay_Gold.gI().lastTimeEnd - System.currentTimeMillis()) / 1000) + " gi√¢y";
                                if (((ChonAiDay_Gold.gI().lastTimeEnd - System.currentTimeMillis()) / 1000) < 0) {
                                    ChonAiDay_Gold.gI().lastTimeEnd = System.currentTimeMillis() + 300000;
                                }
                                if (player.inventory.gold >= 10_000_000) {
                                    player.inventory.gold -= 10_000_000;
                                    Service.gI().sendMoney(player);
                                    player.goldVIP += 10_000_000;
                                    ChonAiDay_Gold.gI().goldVip += 10_000_000;
                                    ChonAiDay_Gold.gI().addPlayerVIP(player);
                                    createOtherMenu(player, ConstNpc.CHON_AI_DAY_VANG, "T·ªïng gi·∫£i th∆∞·ªùng: " + Util.numberToMoney(ChonAiDay_Gold.gI().goldNormar) + " v√†ng, c∆° h·ªôi tr√∫ng c·ªßa b·∫°n l√†: " + player.percentGold(0) + "%\nT·ªïng gi·∫£i VIP: " + Util.numberToMoney(ChonAiDay_Gold.gI().goldVip) + " v√†ng, c∆° h·ªôi tr√∫ng c·ªßa b·∫°n l√†: " + player.percentGold(1) + "%\n Th·ªùi gian c√≤n l·∫°i: " + time, "C·∫≠p nh·∫≠p", "Th∆∞·ªùng\n1 tri·ªáu\nv√†ng", "VIP\n10 tri·ªáu\nv√†ng", "ƒê√≥ng");
                                } else {
                                    Service.gI().sendThongBao(player, "B·∫°n kh√¥ng ƒë·ªß v√†ng");
                                }
                            } catch (Exception ex) {
                                System.out.println("L·ªói CHON_AI_DAY_VANG VIP");
                            }
                        }

                        // Th√™m c√°c ph∆∞∆°ng th·ª©c m·ªõi ƒë·ªÉ x·ª≠ l√Ω logic cho m·ªói tr∆∞·ªùng h·ª£p
                        private void x·ª≠L√ΩThuong10HongNgoc(Player player) {
                            try {
                                String time = ((ChonAiDay_Ruby.gI().lastTimeEnd - System.currentTimeMillis()) / 1000) + " gi√¢y";
                                if (((ChonAiDay_Ruby.gI().lastTimeEnd - System.currentTimeMillis()) / 1000) < 0) {
                                    ChonAiDay_Ruby.gI().lastTimeEnd = System.currentTimeMillis() + 300000;
                                }
                                if (player.inventory.ruby >= 10) {
                                    player.inventory.ruby -= 10;
                                    Service.gI().sendMoney(player);
                                    player.rubyNormar += 10;
                                    ChonAiDay_Ruby.gI().rubyNormar += 10;
                                    ChonAiDay_Ruby.gI().addPlayerNormar(player);
                                    createOtherMenu(player, ConstNpc.CHON_AI_DAY_HONG_NGOC, "T·ªïng gi·∫£i th∆∞·ªùng: " + Util.numberToMoney(ChonAiDay_Ruby.gI().rubyNormar) + " h·ªìng ng·ªçc, c∆° h·ªôi tr√∫ng c·ªßa b·∫°n l√†: " + player.percentRuby(0) + "%\nT·ªïng gi·∫£i VIP: " + Util.numberToMoney(ChonAiDay_Ruby.gI().rubyVip) + " h·ªìng ng·ªçc, c∆° h·ªôi tr√∫ng c·ªßa b·∫°n l√†: " + player.percentRuby(1) + "%\n Th·ªùi gian c√≤n l·∫°i: " + time, "C·∫≠p nh·∫≠p", "Th∆∞·ªùng\n10 h·ªìng\nng·ªçc", "VIP\n100 h·ªìng\nng·ªçc", "ƒê√≥ng");
                                } else {
                                    Service.gI().sendThongBao(player, "B·∫°n kh√¥ng ƒë·ªß h·ªìng ng·ªçc");
                                }
                            } catch (Exception ex) {
                                System.out.println("L·ªói CHON_AI_DAY_HONG_NGOC");
                            }
                        }

                        private void x·ª≠L√ΩVIP100HongNgoc(Player player) {
                            try {
                                String time = ((ChonAiDay_Ruby.gI().lastTimeEnd - System.currentTimeMillis()) / 1000) + " gi√¢y";
                                if (((ChonAiDay_Ruby.gI().lastTimeEnd - System.currentTimeMillis()) / 1000) < 0) {
                                    ChonAiDay_Ruby.gI().lastTimeEnd = System.currentTimeMillis() + 300000;
                                }
                                if (player.inventory.ruby >= 100) {
                                    player.inventory.ruby -= 100;
                                    Service.gI().sendMoney(player);
                                    player.rubyVIP += 100;
                                    ChonAiDay_Ruby.gI().rubyVip += 100;
                                    ChonAiDay_Ruby.gI().addPlayerVIP(player);
                                    createOtherMenu(player, ConstNpc.CHON_AI_DAY_HONG_NGOC, "T·ªïng gi·∫£i th∆∞·ªùng: " + Util.numberToMoney(ChonAiDay_Ruby.gI().rubyNormar) + " h·ªìng ng·ªçc, c∆° h·ªôi tr√∫ng c·ªßa b·∫°n l√†: " + player.percentRuby(0) + "%\nT·ªïng gi·∫£i VIP: " + Util.numberToMoney(ChonAiDay_Ruby.gI().rubyVip) + " h·ªìng ng·ªçc, c∆° h·ªôi tr√∫ng c·ªßa b·∫°n l√†: " + player.percentRuby(1) + "%\n Th·ªùi gian c√≤n l·∫°i: " + time, "C·∫≠p nh·∫≠p", "Th∆∞·ªùng\n10 h·ªìng\nng·ªçc", "VIP\n100 h·ªìng\nng·ªçc", "ƒê√≥ng");
                                } else {
                                    Service.gI().sendThongBao(player, "B·∫°n kh√¥ng ƒë·ªß h·ªìng ng·ªçc");
                                }
                            } catch (Exception ex) {
                                System.out.println("L·ªói CHON_AI_DAY_HONG_NGOC VIP");
                            }
                        }

                        // Th√™m c√°c ph∆∞∆°ng th·ª©c m·ªõi ƒë·ªÉ x·ª≠ l√Ω logic cho m·ªói tr∆∞·ªùng h·ª£p
                        private void x·ª≠L√ΩThuong10NgocXanh(Player player) {
                            try {
                                String time = ((ChonAiDay_Gem.gI().lastTimeEnd - System.currentTimeMillis()) / 1000) + " gi√¢y";
                                if (((ChonAiDay_Gem.gI().lastTimeEnd - System.currentTimeMillis()) / 1000) < 0) {
                                    ChonAiDay_Gem.gI().lastTimeEnd = System.currentTimeMillis() + 300000;
                                }
                                if (player.inventory.gem >= 10) {
                                    player.inventory.gem -= 10;
                                    Service.gI().sendMoney(player);
                                    player.gemNormar += 10;
                                    ChonAiDay_Gem.gI().gemNormar += 10;
                                    ChonAiDay_Gem.gI().addPlayerNormar(player);
                                    createOtherMenu(player, ConstNpc.CHON_AI_DAY_NGOC, "T·ªïng gi·∫£i th∆∞·ªùng: " + Util.numberToMoney(ChonAiDay_Gem.gI().gemNormar) + " h·ªìng ng·ªçc, c∆° h·ªôi tr√∫ng c·ªßa b·∫°n l√†: " + player.percentGem(0) + "%\nT·ªïng gi·∫£i VIP: " + Util.numberToMoney(ChonAiDay_Gem.gI().gemVip) + " h·ªìng ng·ªçc, c∆° h·ªôi tr√∫ng c·ªßa b·∫°n l√†: " + player.percentGem(1) + "%\n Th·ªùi gian c√≤n l·∫°i: " + time, "C·∫≠p nh·∫≠p", "Th∆∞·ªùng\n10 ng·ªçc\nxanh", "VIP\n100 ng·ªçc\nxanh", "ƒê√≥ng");
                                } else {
                                    Service.gI().sendThongBao(player, "B·∫°n kh√¥ng ƒë·ªß ng·ªçc xanh");
                                }
                            } catch (Exception ex) {
                                System.out.println("L·ªói CHON_AI_DAY_NGOC_XANH");
                            }
                        }

                        private void x·ª≠L√ΩVIP100NgocXanh(Player player) {
                            try {
                                String time = ((ChonAiDay_Gem.gI().lastTimeEnd - System.currentTimeMillis()) / 1000) + " gi√¢y";
                                if (((ChonAiDay_Gem.gI().lastTimeEnd - System.currentTimeMillis()) / 1000) < 0) {
                                    ChonAiDay_Gem.gI().lastTimeEnd = System.currentTimeMillis() + 300000;
                                }
                                if (player.inventory.gem >= 100) {
                                    player.inventory.gem -= 100;
                                    Service.gI().sendMoney(player);
                                    player.gemVIP += 100;
                                    ChonAiDay_Gem.gI().gemVip += 100;
                                    ChonAiDay_Gem.gI().addPlayerVIP(player);
                                    createOtherMenu(player, ConstNpc.CHON_AI_DAY_NGOC, "T·ªïng gi·∫£i th∆∞·ªùng: " + Util.numberToMoney(ChonAiDay_Gem.gI().gemNormar) + " h·ªìng ng·ªçc, c∆° h·ªôi tr√∫ng c·ªßa b·∫°n l√†: " + player.percentGem(0) + "%\nT·ªïng gi·∫£i VIP: " + Util.numberToMoney(ChonAiDay_Gem.gI().gemVip) + " h·ªìng ng·ªçc, c∆° h·ªôi tr√∫ng c·ªßa b·∫°n l√†: " + player.percentGem(1) + "%\n Th·ªùi gian c√≤n l·∫°i: " + time, "C·∫≠p nh·∫≠p", "Th∆∞·ªùng\n10 ng·ªçc\nxanh", "VIP\n100 ng·ªçc\nxanh", "ƒê√≥ng");
                                } else {
                                    Service.gI().sendThongBao(player, "B·∫°n kh√¥ng ƒë·ªß ng·ªçc xanh");
                                }
                            } catch (Exception ex) {
                                System.out.println("L·ªói CHON_AI_DAY_NGOC_XANH VIP");
                            }
                        }
                    };
                    break;

                case ConstNpc.QUY_LAO_KAME:
                    npc = new Npc(mapId, status, cx, cy, tempId, avartar) {
                        @Override
                        public void openBaseMenu(Player player) {
                            if (canOpenNpc(player)) {
                                if (!TaskService.gI().checkDoneTaskTalkNpc(player, this)) {
                                    this.createOtherMenu(player, ConstNpc.BASE_MENU,
                                            "Con mu·ªën h·ªèi g√¨ n√†o?", "N√≥i\nchuy·ªán", "H·ªìi Skill\n100 Tr v√†ng","T·ª´ Ch·ªëi");
                                }
                            }
                            return;
                        }

                        @Override
                        public void confirmMenu(Player player, int select) {
                            if (canOpenNpc(player)) {
                                if (player.iDMark.isBaseMenu()) {
                                    switch (select) {
                                        case 0: // N√≥i chuy·ªán
                                            if (player.clan != null) {
                                                if (player.clan.isLeader(player)) {
                                                    this.createOtherMenu(player, ConstNpc.MENU_NOI_CHUYEN,
                                                            "Ch√†o con, ta r·∫•t vui khi g·∫∑p con\n"
                                                            + "Con mu·ªën l√†m g√¨ n√†o ?\n",
                                                            "Nhi·ªám v·ª•\n", "H·ªçc\nK·ªπ nƒÉng\n", "V·ªÅ khu\nv·ª±c bang\n", "Gi·∫£i t√°n\nBang h·ªôi",
                                                            "Kho b√°u\nd∆∞·ªõi bi·ªÉn");
                                                } else {
                                                    this.createOtherMenu(player, ConstNpc.MENU_NOI_CHUYEN,
                                                            "Ch√†o con, ta r·∫•t vui khi g·∫∑p con\n"
                                                            + "Con mu·ªën l√†m g√¨ n√†o ?\n",
                                                            "Nhi·ªám v·ª•\n", "H·ªçc\nK·ªπ nƒÉng\n", "V·ªÅ khu\nv·ª±c bang\n",
                                                            "Kho b√°u\nd∆∞·ªõi bi·ªÉn");
                                                }
                                            } else {
                                                this.createOtherMenu(player, ConstNpc.MENU_NOI_CHUYEN,
                                                        "Ch√†o con, ta r·∫•t vui khi g·∫∑p con\n"
                                                        + "Con mu·ªën l√†m g√¨ n√†o ?\n",
                                                        "Nhi·ªám v·ª•\n", "H·ªçc\nK·ªπ nƒÉng\n", "Kho b√°u\nd∆∞·ªõi bi·ªÉn");
                                            }
                                            break;
                                        case 1:
                                            if (player.inventory.gold >= 100_000_000_0) {
                                                Skill skill;
                                                for (int i = 0; i < player.playerSkill.skills.size(); i++) {
                                                    skill = player.playerSkill.skills.get(i);
                                                    skill.lastTimeUseThisSkill = System.currentTimeMillis() - (long) skill.coolDown; 
                                                    player.nPoint.setFullHpMp();
                                                    PlayerService.gI().sendInfoHpMp(player);
                                                    
                                                }
                                                Service.getInstance().sendTimeSkill(player);
                                                player.inventory.gold -= 100_000_000_0;
                                                Service.getInstance().sendMoney(player);
                                                Service.getInstance().sendThongBao(player, "H·ªìi skill Th√†nh C√¥ng");
                                            } else {
                                                Service.getInstance().sendThongBao(player, "B·∫°n kh√¥ng ƒë·ªß v√†ng");
                                                return;
                                            }
                                            break;
                                        
                                    }
                                } else if (player.iDMark.getIndexMenu() == ConstNpc.MENU_NOI_CHUYEN) {
                                    if (player.clan != null) {
                                        if (player.clan.isLeader(player)) {
                                            switch (select) {
                                                case 0:// nhi·ªám v·ª•
                                                    NpcService.gI().createTutorial(player, avartar, "Nhi·ªám v·ª• hi·ªán t·∫°i c·ªßa con: " + player.playerTask.taskMain.subTasks.get(player.playerTask.taskMain.index).name);
                                                    break;
                                                case 1:
                                                        this.openShopLearnSkill(player, ConstNpc.SHOP_LEARN_SKILL, 0);
                                                    break;
                                                case 2:
                                                    if (player.clan == null) {
                                                        Service.getInstance().sendThongBao(player, "Ch∆∞a c√≥ bang h·ªôi");
                                                        return;
                                                    }
                                                    ChangeMapService.gI().changeMap(player, player.clan.getClanArea(), 910, 190);
                                                    break;
                                                case 3: // Gi·∫£i t√°n bang h·ªôi
                                                    if (player.clan.isLeader(player)) {
                                                        this.createOtherMenu(player, ConstNpc.ACP_GIAI_TAN_BANG,
                                                                "Con c√≥ ch·∫Øc ch·∫Øn gi·∫£i t√°n bang h·ªôi kh√¥ng?",
                                                                "ƒê·ªìng √Ω", "T·ª´ ch·ªëi");
                                                    }
                                                    break;
                                                case 4:
                                                    if (player.clan != null) {
                                                        if (player.clan.banDoKhoBau != null) {
                                                            this.createOtherMenu(player, ConstNpc.MENU_OPENED_DBKB,
                                                                    "Bang h·ªôi c·ªßa con ƒëang ƒëi t√¨m kho b√°u d∆∞·ªõi bi·ªÉn c·∫•p ƒë·ªô "
                                                                    + player.clan.banDoKhoBau.level
                                                                    + "\nCon c√≥ mu·ªën ƒëi theo kh√¥ng?",
                                                                    "ƒê·ªìng √Ω", "T·ª´ ch·ªëi");
                                                        } else {
                                                            this.createOtherMenu(player, ConstNpc.MENU_OPEN_DBKB,
                                                                    "ƒê√¢y l√† b·∫£n ƒë·ªì kho b√°u h·∫£i t·∫∑c t√≠ hon\nC√°c con c·ª© y√™n t√¢m l√™n ƒë∆∞·ªùng\n"
                                                                    + "·ªû ƒë√¢y c√≥ ta lo\nNh·ªõ ch·ªçn c·∫•p ƒë·ªô v·ª´a s·ª©c m√¨nh nh√©",
                                                                    "Top\nBang h·ªôi", "Th√†nh t√≠ch\nBang", "Ch·ªçn\nc·∫•p ƒë·ªô", "T·ª´ ch·ªëi");
                                                        }
                                                    } else {
                                                        this.npcChat(player, "Con ph·∫£i c√≥ bang h·ªôi ta m·ªõi c√≥ th·ªÉ cho con ƒëi");
                                                    }
                                                    break;
                                            }
                                        } else {
                                            switch (select) {
                                                case 0:// nhi·ªám v·ª•
                                                    NpcService.gI().createTutorial(player, avartar, "Nhi·ªám v·ª• hi·ªán t·∫°i c·ªßa con: " + player.playerTask.taskMain.subTasks.get(player.playerTask.taskMain.index).name);
                                                    break;
                                                 case 1:
                                                        this.openShopLearnSkill(player, ConstNpc.SHOP_LEARN_SKILL, 0);
                                                    break;
                                                case 2:
                                                    if (player.clan == null) {
                                                        Service.getInstance().sendThongBao(player, "Ch∆∞a c√≥ bang h·ªôi");
                                                        return;
                                                    }
                                                    ChangeMapService.gI().changeMap(player, player.clan.getClanArea(), 910, 190);
                                                    break;
                                                case 3:
                                                    if (player.clan != null) {
                                                        if (player.clan.banDoKhoBau != null) {
                                                            this.createOtherMenu(player, ConstNpc.MENU_OPENED_DBKB,
                                                                    "Bang h·ªôi c·ªßa con ƒëang ƒëi t√¨m kho b√°u d∆∞·ªõi bi·ªÉn c·∫•p ƒë·ªô "
                                                                    + player.clan.banDoKhoBau.level
                                                                    + "\nCon c√≥ mu·ªën ƒëi theo kh√¥ng?",
                                                                    "ƒê·ªìng √Ω", "T·ª´ ch·ªëi");
                                                        } else {
                                                            this.createOtherMenu(player, ConstNpc.MENU_OPEN_DBKB,
                                                                    "ƒê√¢y l√† b·∫£n ƒë·ªì kho b√°u h·∫£i t·∫∑c t√≠ hon\nC√°c con c·ª© y√™n t√¢m l√™n ƒë∆∞·ªùng\n"
                                                                    + "·ªû ƒë√¢y c√≥ ta lo\nNh·ªõ ch·ªçn c·∫•p ƒë·ªô v·ª´a s·ª©c m√¨nh nh√©",
                                                                    "Top\nBang h·ªôi", "Th√†nh t√≠ch\nBang", "Ch·ªçn\nc·∫•p ƒë·ªô", "T·ª´ ch·ªëi");
                                                        }
                                                    } else {
                                                        this.npcChat(player, "Con ph·∫£i c√≥ bang h·ªôi ta m·ªõi c√≥ th·ªÉ cho con ƒëi");
                                                    }
                                                    break;
                                            }
                                        }
                                    } else {
                                        switch (select) {
                                            case 0:// nhi·ªám v·ª•
                                                NpcService.gI().createTutorial(player, avartar, player.playerTask.taskMain.name);
                                                break;
                                             case 1:
                                                        this.openShopLearnSkill(player, ConstNpc.SHOP_LEARN_SKILL, 0);
                                                    break;
                                            case 2:
                                                if (player.clan != null) {
                                                    if (player.clan.banDoKhoBau != null) {
                                                        this.createOtherMenu(player, ConstNpc.MENU_OPENED_DBKB,
                                                                "Bang h·ªôi c·ªßa con ƒëang ƒëi t√¨m kho b√°u d∆∞·ªõi bi·ªÉn c·∫•p ƒë·ªô "
                                                                + player.clan.banDoKhoBau.level
                                                                + "\nCon c√≥ mu·ªën ƒëi theo kh√¥ng?",
                                                                "ƒê·ªìng √Ω", "T·ª´ ch·ªëi");
                                                    } else {
                                                        this.createOtherMenu(player, ConstNpc.MENU_OPEN_DBKB,
                                                                "ƒê√¢y l√† b·∫£n ƒë·ªì kho b√°u h·∫£i t·∫∑c t√≠ hon\nC√°c con c·ª© y√™n t√¢m l√™n ƒë∆∞·ªùng\n"
                                                                + "·ªû ƒë√¢y c√≥ ta lo\nNh·ªõ ch·ªçn c·∫•p ƒë·ªô v·ª´a s·ª©c m√¨nh nh√©",
                                                                "Top\nBang h·ªôi", "Th√†nh t√≠ch\nBang", "Ch·ªçn\nc·∫•p ƒë·ªô", "T·ª´ ch·ªëi");
                                                    }
                                                } else {
                                                    this.npcChat(player, "Con ph·∫£i c√≥ bang h·ªôi ta m·ªõi c√≥ th·ªÉ cho con ƒëi");
                                                }
                                                break;
                                        }
                                    }
                                } else if (player.iDMark.getIndexMenu() == ConstNpc.ACP_GIAI_TAN_BANG) {
                                    switch (select) {
                                        case 0:
                                            Input.gI().createFormGiaiTanBang(player);
                                            break;
                                    }
                                } else if (player.iDMark.getIndexMenu() == ConstNpc.MENU_OPEN_SUKIEN) {
                                    openMenuSuKien(player, this, tempId, select);
                                } else if (player.iDMark.getIndexMenu() == ConstNpc.MENU_OPENED_DBKB) {
                                    switch (select) {
                                        case 0:
                                            ChangeMapService.gI().goToDBKB(player);
                                            break;
                                    }
                                } else if (player.iDMark.getIndexMenu() == ConstNpc.MENU_OPEN_DBKB) {
                                    switch (select) {
                                        case 0:// Top bang h·ªôi
                                            Service.gI().showTopClanBDKB(player);
                                            break;
                                        case 1:// Th√°ch t√≠ch bang
                                            Service.getInstance().showMyTopClanBDKB(player);
                                            break;
                                        case 2:
                                            if (player.isAdmin()
                                                    || player.nPoint.power >= BanDoKhoBau.POWER_CAN_GO_TO_DBKB) {
                                                Input.gI().createFormChooseLevelBDKB(player);
                                            } else {
                                                this.npcChat(player, "S·ª©c m·∫°nh c·ªßa con ph·∫£i √≠t nh·∫•t ph·∫£i ƒë·∫°t "
                                                        + Util.numberToMoney(BanDoKhoBau.POWER_CAN_GO_TO_DBKB));
                                            }
                                            break;
                                    }

                                } else if (player.iDMark.getIndexMenu() == ConstNpc.MENU_ACCEPT_GO_TO_BDKB) {
                                    switch (select) {
                                        case 0:
                                            BanDoKhoBauService.gI().openBanDoKhoBau(player, Byte.parseByte(String.valueOf(PLAYERID_OBJECT.get(player.id))));
                                            break;
                                    }

                                } else if (player.iDMark.getIndexMenu() == ConstNpc.ESCORT_QILIN_MENU) {
                                    switch (select) {
                                        case 0: {
                                            if (InventoryService.gI().getCountEmptyBag(player) == 0) {
                                                this.npcChat(player,
                                                        "Con ph·∫£i c√≥ √≠t nh·∫•t 1 √¥ tr·ªëng trong h√†nh trang ta m·ªõi ƒë∆∞a cho con ƒë∆∞·ª£c");
                                                return;
                                            }
                                            EscortedBoss escortedBoss = player.getEscortedBoss();
                                            if (escortedBoss != null) {
                                                escortedBoss.stopEscorting();
                                                Item item = ItemService.gI()
                                                        .createNewItem((short) ConstItem.CAPSULE_TET_2022);
                                                item.quantity = 1;
                                                InventoryService.gI().addItemBag(player, item, 0);
                                                InventoryService.gI().sendItemBags(player);
                                                Service.getInstance().sendThongBao(player,
                                                        "B·∫°n nh·∫≠n ƒë∆∞·ª£c " + item.template.name);
                                            }
                                        }
                                        break;
                                    }
                                }
                            }
                        }
                    };
                    break;
                case ConstNpc.TRUONG_LAO_GURU:
                case ConstNpc.VUA_VEGETA:
                    npc = new Npc(mapId, status, cx, cy, tempId, avartar) {
                        @Override
                        public void openBaseMenu(Player player) {
                            if (canOpenNpc(player)) {
                                EscortedBoss escortedBoss = player.getEscortedBoss();
                                if (escortedBoss != null && escortedBoss instanceof Qilin) {
                                    this.createOtherMenu(player, ConstNpc.ESCORT_QILIN_MENU,
                                            "Ah con ƒë√£ t√¨m th·∫•y l√¢n con th·∫•t l·∫°c c·ªßa ta\nTa s·∫Ω th∆∞·ªüng cho con 1 vi√™n Capsule T·∫øt 2023.",
                                            "ƒê·ªìng √Ω", "T·ª´ ch·ªëi");
                                } else {
                                    if (!TaskService.gI().checkDoneTaskTalkNpc(player, this)) {
                                        super.openBaseMenu(player);
                                    }
                                }
                            }
                        }

                        @Override
                        public void confirmMenu(Player player, int select) {
                            if (canOpenNpc(player)) {
                                if (player.iDMark.getIndexMenu() == ConstNpc.ESCORT_QILIN_MENU) {
                                    switch (select) {
                                        case 0: {
                                            if (InventoryService.gI().getCountEmptyBag(player) == 0) {
                                                this.npcChat(player,
                                                        "Con ph·∫£i c√≥ √≠t nh·∫•t 1 √¥ tr·ªëng trong h√†nh trang ta m·ªõi ƒë∆∞a cho con ƒë∆∞·ª£c");
                                                return;
                                            }
                                            EscortedBoss escortedBoss = player.getEscortedBoss();
                                            if (escortedBoss != null) {
                                                escortedBoss.stopEscorting();
                                                Item item = ItemService.gI()
                                                        .createNewItem((short) ConstItem.CAPSULE_TET_2022);
                                                item.quantity = 1;
                                                InventoryService.gI().addItemBag(player, item, 0);
                                                InventoryService.gI().sendItemBags(player);
                                                Service.getInstance().sendThongBao(player,
                                                        "B·∫°n nh·∫≠n ƒë∆∞·ª£c " + item.template.name);
                                            }
                                        }
                                        break;
                                    }
                                }
                            }
                        }
                    };
                    break;
                case ConstNpc.ONG_GOHAN:
                case ConstNpc.ONG_MOORI:
                case ConstNpc.ONG_PARAGUS:
                    npc = new Npc(mapId, status, cx, cy, tempId, avartar) {
                        @Override
                        public void openBaseMenu(Player player) {
                            if (canOpenNpc(player)) {
                                if (!TaskService.gI().checkDoneTaskTalkNpc(player, this)) {
                                    if (player.thanhVien) {
                                        this.createOtherMenu(player, ConstNpc.BASE_MENU,
                                                "Con c·∫ßn ta gi√∫p g√¨ n√†o?", "M√£ Qu√† T·∫∑ng", "N·∫°p ti·ªÅn", "H·ªó tr·ª£\nnhi·ªám v·ª•", "ƒêi·ªÉm Danh","ƒê·ªïi M·∫≠t\nKh·∫©u","Nh·∫≠n ƒê·ªá T·ª≠");
                                    } else {
                                        this.createOtherMenu(player, ConstNpc.BASE_MENU,
                                                "Con c·∫ßn ta gi√∫p g√¨ n√†o?", "M√£ Qu√† T·∫∑ng", "N·∫°p ti·ªÅn", "M·ªü\nTh√†nh vi√™n", "H·ªó tr·ª£\nnhi·ªám v·ª•", "ƒê·ªïi M·∫≠t\nKh·∫©u","ƒê√≥ng");
                                    }
                                }
                            }
                        }

                        @Override
                        public void confirmMenu(Player player, int select) {
                            if (canOpenNpc(player)) {
                                if (player.iDMark.isBaseMenu()) {
                                    switch (select) {
                                        case 0:
                                            Input.gI().createFormGiftCode(player);
                                            break;
                                        case 1:
                                            this.createOtherMenu(player, ConstNpc.MENU_NAP_TIEN,
                                                    "S·ªë d∆∞ c·ªßa con l√†: " + Util.mumberToLouis(player.soDuVND) + " VND d√πng ƒë·ªÉ n·∫°p qua ƒë∆°n v·ªã kh√°c\n"
                                                    + "Ta ƒëang gi·ªØ gi√∫p con " + Util.mumberToLouis(player.soThoiVang) + " th·ªèi v√†ng",
                                                    "N·∫°p v√†ng", "Nh·∫≠n\nTh·ªèi v√†ng", "Nh·∫≠n\nNg·ªçc Xanh\n(Mi·ªÖn ph√≠)", "ƒê√≥ng");
                                            return;
                                        case 2:
                                            if (!player.thanhVien) {
                                                this.createOtherMenu(player, ConstNpc.MENU_MO_THANH_VIEN,
                                                        "M·ªü th√†nh vi√™n con s·∫Ω ƒë∆∞·ª£c s·ª≠ d·ª•ng c√°c ch·ª©c nƒÉng\n"
                                                        + "Giao d·ªãch, con s·ªë may m·∫Øn, k√™nh th·∫ø gi·ªõi, c·ª≠a h√†ng k√≠ g·ª≠i",
                                                        "M·ªü\nTh√†nh vi√™n\n10.000 VND", "T·ª´ ch·ªëi");
                                                return;
                                            } else {
                                                if (TaskService.gI().getIdTask(player) == ConstTask.TASK_9_0 || TaskService.gI().getIdTask(player) == ConstTask.TASK_9_1 || TaskService.gI().getIdTask(player) == ConstTask.TASK_9_2) {
                                                    player.playerTask.taskMain.id = 10;
                                                    player.playerTask.taskMain.index = 3;
                                                    TaskService.gI().sendTaskMain(player);
                                                } else {
                                                    Service.getInstance().sendThongBao(player, "Ch·ªâ h·ªó tr·ª£ nhi·ªám v·ª• T√†u 77.");
                                                }
                                                if (TaskService.gI().getIdTask(player) == ConstTask.TASK_18_0 || TaskService.gI().getIdTask(player) == ConstTask.TASK_18_1) {
                                                    player.playerTask.taskMain.id = 18;
                                                    player.playerTask.taskMain.index = 2;
                                                    TaskService.gI().sendTaskMain(player);
                                                } else {
                                                    Service.getInstance().sendThongBao(player, "Ch·ªâ h·ªó tr·ª£ nhi·ªám v·ª• DHVT.");
                                                }
                                                if (TaskService.gI().getIdTask(player) == ConstTask.TASK_22_3 || TaskService.gI().getIdTask(player) == ConstTask.TASK_23_0) {
                                                    player.playerTask.taskMain.id = 22;
                                                    player.playerTask.taskMain.index = 4;
                                                    TaskService.gI().sendTaskMain(player);
                                                } else {
                                                    Service.getInstance().sendThongBao(player, "Ch·ªâ h·ªó tr·ª£ nhi·ªám v·ª• DHVT.");
                                                }
                                                if (TaskService.gI().getIdTask(player) == ConstTask.TASK_19_0 || TaskService.gI().getIdTask(player) == ConstTask.TASK_19_1) {
                                                    player.playerTask.taskMain.id = 19;
                                                    player.playerTask.taskMain.index = 2;
                                                    TaskService.gI().sendTaskMain(player);
                                                } else {
                                                    Service.getInstance().sendThongBao(player, "Ch·ªâ h·ªó tr·ª£ nhi·ªám v·ª• Trung √öy Tr·∫Øng.");
                                                }
                                            }
                                            break;
                                        case 3:
                                            if (!player.thanhVien) {
                                                if (TaskService.gI().getIdTask(player) == ConstTask.TASK_9_0 || TaskService.gI().getIdTask(player) == ConstTask.TASK_9_1 || TaskService.gI().getIdTask(player) == ConstTask.TASK_9_2) {
                                                    player.playerTask.taskMain.id = 10;
                                                    player.playerTask.taskMain.index = 3;
                                                    TaskService.gI().sendTaskMain(player);
                                                } else {
                                                    Service.getInstance().sendThongBao(player, "Ch·ªâ h·ªó tr·ª£ nhi·ªám v·ª• T√†u 77.");
                                                }
                                                if (TaskService.gI().getIdTask(player) == ConstTask.TASK_18_0 || TaskService.gI().getIdTask(player) == ConstTask.TASK_18_1) {
                                                    player.playerTask.taskMain.id = 18;
                                                    player.playerTask.taskMain.index = 2;
                                                    TaskService.gI().sendTaskMain(player);
                                                } else {
                                                    Service.getInstance().sendThongBao(player, "Ch·ªâ h·ªó tr·ª£ nhi·ªám v·ª• DHVT.");
                                                }
                                                if (TaskService.gI().getIdTask(player) == ConstTask.TASK_19_0 || TaskService.gI().getIdTask(player) == ConstTask.TASK_19_1) {
                                                    player.playerTask.taskMain.id = 19;
                                                    player.playerTask.taskMain.index = 2;
                                                    TaskService.gI().sendTaskMain(player);
                                                } else {
                                                    Service.getInstance().sendThongBao(player, "Ch·ªâ h·ªó tr·ª£ nhi·ªám v·ª• Trung √öy Tr·∫Øng.");
                                                }
                                            }
                                            break;
                                            case 4:
                                             Input.gI().createFormChangePassword(player);
                                            break;
                                            case 5:
                                                  Service.gI().sendThongBaoFromAdmin(player,
                                                  "|7|Ch√∫c M·ª´ng B·∫°n ƒê√£ Nh·∫≠n ƒê∆∞·ª£c ƒê·ªá T·ª≠!");
                                                  if (player.pet == null) {
                                                  PetService.gI().createNormalPet(player);
                                                  Service.getInstance().sendThongBao(player,
                                                  "Con v·ª´a nh·∫≠n ƒë∆∞·ª£c ƒë·ªá t·ª≠! H√£y chƒÉm s√≥c n√≥ nh√©");
                                                  } else {
                                                  this.npcChat(player, "ƒê√£ c√≥ ƒë·ªá t·ª≠ r·ªìi m√†!");

                                                  }
                                             break;
                                    }
                                }
                                if (player.iDMark.getIndexMenu() == ConstNpc.MENU_NAP_TIEN) {
                                    switch (select) {
                                        case 0: // N·∫°p v√†ng
                                            this.createOtherMenu(player, ConstNpc.MENU_DOI_VANG,
                                                    "Ta s·∫Ω t·∫°m gi·ªØ gi√∫p con\n"
                                                    + "N·∫øu con c·∫ßn d√πng t·ªõi h√£y quay l·∫°i ƒë√¢y g·∫∑p ta!",
                                                    "10.000\n20 Th·ªèi\nv√†ng", "20.000\n40 Th·ªèi\nv√†ng",
                                                    "30.000\n72 Th·ªèi\nv√†ng", "50.000\n120 Th·ªèi\nv√†ng",
                                                    "100.000\n280 Th·ªèi\nv√†ng", "200.000\n720 Th·ªèi\nv√†ng",
                                                    "500.000\n2.000 Th·ªèi\nv√†ng", "1.000.000\n4.400 Th·ªèi\nv√†ng");
                                            return;
                                        case 1: // Nh·∫≠n th·ªèi v√†ng
                                            Input.gI().createFormNhanThoiVang(player);
                                            break;
                                        case 2:
                                            if (player.inventory.gem >= 1000000) {
                                                Service.getInstance().sendThongBao(player, "Ti√™u b·ªõt ng·ªçc xanh ƒëi b·∫°n ∆°i");
                                                return;
                                            } else {
                                                player.inventory.gem += 100000;
                                                Service.getInstance().sendMoney(player);
                                            }
                                            break;
                                    }
                                }
                                if (player.iDMark.getIndexMenu() == ConstNpc.MENU_MO_THANH_VIEN) {
                                    if (select == 0) {
                                        if (player.soDuVND >= 10000) {
                                            Item thoivang = ItemService.gI().createNewItem((short) 457, 20);
                                            thoivang.itemOptions.add(new ItemOption(83, 0));
                                            thoivang.itemOptions.add(new ItemOption(100, 0));
                                            player.thanhVien = true;
                                            player.soDuVND -= 10000;
                                            PlayerDAO.subVndBar(player, 10000);
                                            PlayerDAO.moThanhVien(player);
                                            InventoryService.gI().addItemBag(player, thoivang, 99999);
                                            InventoryService.gI().sendItemBags(player);
                                            Service.getInstance().sendThongBao(player, "B·∫°n nh·∫≠n ƒë∆∞·ª£c " + thoivang.getName());
                                        } else {
                                            Service.gI().sendThongBao(player, "B·∫°n kh√¥ng ƒë·ªß s·ªë d∆∞ ƒë·ªÉ m·ªü th√†nh vi√™n");
                                        }
                                    }
                                }

                                if (player.iDMark.getIndexMenu() == ConstNpc.MENU_DOI_VANG) {
                                    switch (select) {
                                        case 0:
                                            processThoiVangPurchase(player, 10_000, 20);
                                            break;
                                        case 1:
                                            processThoiVangPurchase(player, 20_000, 40);
                                            break;
                                        case 2:
                                            processThoiVangPurchase(player, 30_000, 72);
                                            break;
                                        case 3:
                                            processThoiVangPurchase(player, 50_000, 120);
                                            break;
                                        case 4:
                                            processThoiVangPurchase(player, 100_000, 280);
                                            break;
                                        case 5:
                                            processThoiVangPurchase(player, 200_000, 720);
                                            break;
                                        case 6:
                                            processThoiVangPurchase(player, 500_000, 2_000);
                                            break;
                                        case 7:
                                            processThoiVangPurchase(player, 1_000_000, 4_400);
                                            break;
                                    }
                                }
                            }
                        }
                    };
                    break;

                case ConstNpc.BUNMA:
                    npc = new Npc(mapId, status, cx, cy, tempId, avartar) {
                        @Override
                        public void openBaseMenu(Player player) {
                            if (canOpenNpc(player)) {
                                if (!TaskService.gI().checkDoneTaskTalkNpc(player, this)) {
                                    if (player.gender == ConstPlayer.TRAI_DAT) {
                                        this.createOtherMenu(player, ConstNpc.BASE_MENU,
                                                "C·∫≠u c·∫ßn trang b·ªã g√¨ c·ª© ƒë·∫øn ch·ªó t√¥i nh√©", "C·ª≠a\nh√†ng");
                                    } else {
                                        NpcService.gI().createTutorial(player, this.avartar, "Xin l·ªói c∆∞ng, ch·ªã ch·ªâ b√°n ƒë·ªì cho ng∆∞·ªùi Tr√°i ƒê·∫•t");
                                    }
                                }
                            }
                        }

                        @Override
                        public void confirmMenu(Player player, int select) {
                            if (canOpenNpc(player)) {
                                if (player.iDMark.isBaseMenu()) {
                                    switch (select) {
                                        case 0:// Shop
                                            this.openShopWithGender(player, ConstNpc.SHOP_BUNMA_QK_0, 0);
                                            break;
                                    }
                                }
                            }
                        }
                    };
                    break;
                case ConstNpc.DENDE:
                    npc = new Npc(mapId, status, cx, cy, tempId, avartar) {
                        @Override
                        public void openBaseMenu(Player player) {
                            if (canOpenNpc(player)) {
                                if (!TaskService.gI().checkDoneTaskTalkNpc(player, this)) {
                                    if (player.isHoldNamecBall) {
                                        this.createOtherMenu(player, ConstNpc.ORTHER_MENU,
                                                "√î,ng·ªçc r·ªìng Namek,anh th·∫≠t may m·∫Øn,n·∫øu t√¨m ƒë·ªß 7 vi√™n ng·ªçc c√≥ th·ªÉ tri·ªáu h·ªìi R·ªìng Th·∫ßn Namek,",
                                                "G·ªçi r·ªìng", "T·ª´ ch·ªëi");
                                    } else {
                                        if (player.gender == ConstPlayer.NAMEC) {
                                            this.createOtherMenu(player, ConstNpc.BASE_MENU,
                                                    "Anh c·∫ßn trang b·ªã g√¨ c·ª© ƒë·∫øn ch·ªó em nh√©", "C·ª≠a\nh√†ng");
                                        } else {
                                            NpcService.gI().createTutorial(player, this.avartar, "Xin l·ªói anh, em ch·ªâ b√°n ƒë·ªì cho d√¢n t·ªôc Nam·∫øc");
                                        }
                                    }
                                }
                            }
                        }

                        @Override
                        public void confirmMenu(Player player, int select) {
                            if (canOpenNpc(player)) {
                                if (player.iDMark.isBaseMenu()) {
                                    switch (select) {
                                        case 0:// Shop
                                            this.openShopWithGender(player, ConstNpc.SHOP_DENDE_0, 0);
                                            break;
                                    }
                                } else if (player.iDMark.getIndexMenu() == ConstNpc.ORTHER_MENU) {
                                    NamekBallWar.gI().summonDragon(player, this);
                                }
                            }
                        }
                    };
                    break;
                case ConstNpc.APPULE:
                    npc = new Npc(mapId, status, cx, cy, tempId, avartar) {
                        @Override
                        public void openBaseMenu(Player player) {
                            if (canOpenNpc(player)) {
                                if (!TaskService.gI().checkDoneTaskTalkNpc(player, this)) {
                                    if (player.gender == ConstPlayer.XAYDA) {
                                        this.createOtherMenu(player, ConstNpc.BASE_MENU,
                                                "Ng∆∞∆°i c·∫ßn trang b·ªã g√¨ c·ª© ƒë·∫øn ch·ªó ta nh√©", "C·ª≠a\nh√†ng");
                                    } else {
                                        NpcService.gI().createTutorial(player, this.avartar, "V·ªÅ h√†nh tinh h·∫° ƒë·∫≥ng c·ªßa ng∆∞∆°i m√† mua ƒë·ªì c√πi nh√©. T·∫°i ƒë√¢y ta ch·ªâ b√°n ƒë·ªì cho ng∆∞·ªùi Xayda th√¥i");
                                    }
                                }
                            }
                        }

                        @Override
                        public void confirmMenu(Player player, int select) {
                            if (canOpenNpc(player)) {
                                if (player.iDMark.isBaseMenu()) {
                                    switch (select) {
                                        case 0:// Shop

                                            this.openShopWithGender(player, ConstNpc.SHOP_APPULE_0, 0);

                                            break;
                                    }
                                }
                            }
                        }
                    };
                    break;
                case ConstNpc.DR_DRIEF:
                    npc = new Npc(mapId, status, cx, cy, tempId, avartar) {
                        @Override
                        public void openBaseMenu(Player pl) {
                            if (canOpenNpc(pl)) {
                                if (this.mapId == 84) {
                                    this.createOtherMenu(pl, ConstNpc.BASE_MENU,
                                            "T√†u V≈© Tr·ª• c·ªßa ta c√≥ th·ªÉ ƒë∆∞a c·∫≠u ƒë·∫øn h√†nh tinh kh√°c ch·ªâ trong 3 gi√¢y. C·∫≠u mu·ªën ƒëi ƒë√¢u?",
                                            pl.gender == ConstPlayer.TRAI_DAT ? "ƒê·∫øn\nTr√°i ƒê·∫•t"
                                                    : pl.gender == ConstPlayer.NAMEC ? "ƒê·∫øn\nNam·∫øc" : "ƒê·∫øn\nXayda");
                                } else if (this.mapId == 153) {
                                    Clan clan = pl.clan;
                                    ClanMember cm = pl.clanMember;
                                    if (cm.role == Clan.LEADER) {
                                        this.createOtherMenu(pl, ConstNpc.BASE_MENU,
                                                "C·∫ßn 1000 capsule bang [ƒëang c√≥ " + clan.clanPoint
                                                + " capsule bang] ƒë·ªÉ n√¢ng c·∫•p bang h·ªôi l√™n c·∫•p "
                                                + (clan.level++) + "\n"
                                                + "+1 t·ªëi ƒëa s·ªë l∆∞·ª£ng th√†nh vi√™n",
                                                "V·ªÅ\nƒê·∫£oKame", "G√≥p " + cm.memberPoint + " capsule", "N√¢ng c·∫•p",
                                                "T·ª´ ch·ªëi");
                                    } else {
                                        this.createOtherMenu(pl, ConstNpc.BASE_MENU, "B·∫°n ƒëang c√≥ " + cm.memberPoint
                                                + " capsule bang,b·∫°n c√≥ mu·ªën ƒë√≥ng g√≥p to√†n b·ªô cho bang h·ªôi c·ªßa m√¨nh kh√¥ng ?",
                                                "V·ªÅ\nƒê·∫£oKame", "ƒê·ªìng √Ω", "T·ª´ ch·ªëi");
                                    }
                                } else if (!TaskService.gI().checkDoneTaskTalkNpc(pl, this)) {
                                    if (pl.playerTask.taskMain.id == 7) {
                                        NpcService.gI().createTutorial(pl, this.avartar,
                                                "H√£y l√™n ƒë∆∞·ªùng c·ª©u ƒë·ª©a b√© nh√† t√¥i\n"
                                                + "Ch·∫Øc b√¢y gi·ªù n√≥ ƒëang s·ª£ h√£i l·∫Øm r·ªìi");
                                    } else {
                                        this.createOtherMenu(pl, ConstNpc.BASE_MENU,
                                                "T√†u V≈© Tr·ª• c·ªßa ta c√≥ th·ªÉ ƒë∆∞a c·∫≠u ƒë·∫øn h√†nh tinh kh√°c ch·ªâ trong 3 gi√¢y. C·∫≠u mu·ªën ƒëi ƒë√¢u?",
                                                "ƒê·∫øn\nNam·∫øc", "ƒê·∫øn\nXayda", "Si√™u th·ªã");
                                    }
                                }
                            }
                        }

                        @Override
                        public void confirmMenu(Player player, int select) {
                            if (canOpenNpc(player)) {
                                if (this.mapId == 84) {
                                    ChangeMapService.gI().changeMapBySpaceShip(player, player.gender + 24, -1, -1);
                                } else if (mapId == 153) {
                                    if (select == 0) {
                                        ChangeMapService.gI().changeMap(player, ConstMap.DAO_KAME, -1, 1059, 408);
                                        return;
                                    }
                                    Clan clan = player.clan;
                                    ClanMember cm = player.clanMember;
                                    if (select == 1) {
                                        player.clan.clanPoint += cm.memberPoint;
                                        cm.clanPoint += cm.memberPoint;
                                        cm.memberPoint = 0;
                                        Service.getInstance().sendThongBao(player, "ƒê√≥ng g√≥p th√†nh c√¥ng");
                                    } else if (select == 2 && cm.role == Clan.LEADER) {
                                        if (clan.level >= 5) {
                                            Service.getInstance().sendThongBao(player,
                                                    "Bang h·ªôi c·ªßa b·∫°n ƒë√£ ƒë·∫°t c·∫•p t·ªëi ƒëa");
                                            return;
                                        }
                                        if (clan.clanPoint < 1000) {
                                            Service.getInstance().sendThongBao(player, "Kh√¥ng ƒë·ªß capsule");
                                            return;
                                        }
                                        clan.level++;
                                        clan.maxMember++;
                                        clan.clanPoint -= 1000;
                                        Service.getInstance().sendThongBao(player,
                                                "Bang h·ªôi c·ªßa b·∫°n ƒë√£ ƒë∆∞·ª£c n√¢ng c·∫•p l√™n c·∫•p " + clan.level);
                                    }
                                } else if (player.iDMark.isBaseMenu()) {
                                    switch (select) {
                                        case 0:
                                            ChangeMapService.gI().changeMapBySpaceShip(player, 25, -1, -1);
                                            break;
                                        case 1:
                                            ChangeMapService.gI().changeMapBySpaceShip(player, 26, -1, -1);
                                            break;
                                        case 2:
                                            ChangeMapService.gI().changeMapBySpaceShip(player, 84, -1, -1);
                                            break;
                                    }
                                }
                            }
                        }
                    };
                    break;
                case ConstNpc.CARGO:
                    npc = new Npc(mapId, status, cx, cy, tempId, avartar) {
                        @Override
                        public void openBaseMenu(Player pl) {
                            if (canOpenNpc(pl)) {
                                if (!TaskService.gI().checkDoneTaskTalkNpc(pl, this)) {
                                    if (pl.playerTask.taskMain.id == 7) {
                                        NpcService.gI().createTutorial(pl, this.avartar,
                                                "H√£y l√™n ƒë∆∞·ªùng c·ª©u ƒë·ª©a b√© nh√† t√¥i\n"
                                                + "Ch·∫Øc b√¢y gi·ªù n√≥ ƒëang s·ª£ h√£i l·∫Øm r·ªìi");
                                    } else {
                                        this.createOtherMenu(pl, ConstNpc.BASE_MENU,
                                                "T√†u v≈© tr·ª• Nam·∫øc tuy c≈© nh∆∞ng t·ªëc ƒë·ªô kh√¥ng h·ªÅ k√©m b·∫•t k·ª≥ lo·∫°i t√†u n√†o kh√°c. C·∫≠u mu·ªën ƒëi ƒë√¢u?",
                                                "ƒê·∫øn\nTr√°i ƒê·∫•t", "ƒê·∫øn\nXayda", "Si√™u th·ªã");
                                    }
                                }
                            }
                        }

                        @Override
                        public void confirmMenu(Player player, int select) {
                            if (canOpenNpc(player)) {
                                if (player.iDMark.isBaseMenu()) {
                                    switch (select) {
                                        case 0:
                                            ChangeMapService.gI().changeMapBySpaceShip(player, 24, -1, -1);
                                            break;
                                        case 1:
                                            ChangeMapService.gI().changeMapBySpaceShip(player, 26, -1, -1);
                                            break;
                                        case 2:
                                            ChangeMapService.gI().changeMapBySpaceShip(player, 84, -1, -1);
                                            break;
                                    }
                                }
                            }
                        }
                    };
                    break;
                case ConstNpc.CUI:
                    npc = new Npc(mapId, status, cx, cy, tempId, avartar) {

                        private final int COST_FIND_BOSS = 20000000;

                        @Override
                        public void openBaseMenu(Player pl) {
                            if (canOpenNpc(pl)) {
                                if (!TaskService.gI().checkDoneTaskTalkNpc(pl, this)) {
                                    if (pl.playerTask.taskMain.id == 7) {
                                        NpcService.gI().createTutorial(pl, this.avartar,
                                                "H√£y l√™n ƒë∆∞·ªùng c·ª©u ƒë·ª©a b√© nh√† t√¥i\n"
                                                + "Ch·∫Øc b√¢y gi·ªù n√≥ ƒëang s·ª£ h√£i l·∫Øm r·ªìi");
                                    } else {
                                        if (this.mapId == 19) {

                                            int taskId = TaskService.gI().getIdTask(pl);
                                            switch (taskId) {
                                                case ConstTask.TASK_21_0:
                                                    this.createOtherMenu(pl, ConstNpc.MENU_FIND_KUKU,
                                                            "ƒê·ªôi qu√¢n c·ªßa Fide ƒëang ·ªü Thung l≈©ng Nappa, ta s·∫Ω ƒë∆∞a ng∆∞∆°i ƒë·∫øn ƒë√≥",
                                                            "ƒê·∫øn ch·ªó\nKuku\n(" + Util.numberToMoney(COST_FIND_BOSS)
                                                            + " v√†ng)",
                                                            "ƒê·∫øn Cold", "ƒê·∫øn\nNappa", "T·ª´ ch·ªëi");
                                                    break;
                                                case ConstTask.TASK_21_1:
                                                    this.createOtherMenu(pl, ConstNpc.MENU_FIND_MAP_DAU_DINH,
                                                            "ƒê·ªôi qu√¢n c·ªßa Fide ƒëang ·ªü Thung l≈©ng Nappa, ta s·∫Ω ƒë∆∞a ng∆∞∆°i ƒë·∫øn ƒë√≥",
                                                            "ƒê·∫øn ch·ªó\nM·∫≠p ƒë·∫ßu ƒëinh\n("
                                                            + Util.numberToMoney(COST_FIND_BOSS) + " v√†ng)",
                                                            "ƒê·∫øn Cold", "ƒê·∫øn\nNappa", "T·ª´ ch·ªëi");
                                                    break;
                                                case ConstTask.TASK_21_2:
                                                    this.createOtherMenu(pl, ConstNpc.MENU_FIND_RAMBO,
                                                            "ƒê·ªôi qu√¢n c·ªßa Fide ƒëang ·ªü Thung l≈©ng Nappa, ta s·∫Ω ƒë∆∞a ng∆∞∆°i ƒë·∫øn ƒë√≥",
                                                            "ƒê·∫øn ch·ªó\nRambo\n(" + Util.numberToMoney(COST_FIND_BOSS)
                                                            + " v√†ng)",
                                                            "ƒê·∫øn Cold", "ƒê·∫øn\nNappa", "T·ª´ ch·ªëi");
                                                    break;
                                                default:
                                                    this.createOtherMenu(pl, ConstNpc.BASE_MENU,
                                                            "ƒê·ªôi qu√¢n c·ªßa Fide ƒëang ·ªü Thung l≈©ng Nappa, ta s·∫Ω ƒë∆∞a ng∆∞∆°i ƒë·∫øn ƒë√≥",
                                                            "ƒê·∫øn Cold", "ƒê·∫øn\nNappa", "T·ª´ ch·ªëi");

                                                    break;
                                            }
                                        } else if (this.mapId == 68) {
                                            this.createOtherMenu(pl, ConstNpc.BASE_MENU,
                                                    "Ng∆∞∆°i mu·ªën v·ªÅ Th√†nh Ph·ªë Vegeta", "ƒê·ªìng √Ω", "T·ª´ ch·ªëi");
                                        } else {
                                            this.createOtherMenu(pl, ConstNpc.BASE_MENU,
                                                    "T√†u v≈© tr·ª• Xayda s·ª≠ d·ª•ng c√¥ng ngh·ªá m·ªõi nh·∫•t, c√≥ th·ªÉ ƒë∆∞a ng∆∞∆°i ƒëi b·∫•t k·ª≥ ƒë√¢u, ch·ªâ c·∫ßn tr·∫£ ti·ªÅn l√† ƒë∆∞·ª£c.",
                                                    "ƒê·∫øn\nTr√°i ƒê·∫•t", "ƒê·∫øn\nNam·∫øc", "Si√™u th·ªã");
                                        }
                                    }
                                }
                            }
                        }

                        @Override
                        public void confirmMenu(Player player, int select) {
                            if (canOpenNpc(player)) {
                                if (this.mapId == 26) {
                                    if (player.iDMark.isBaseMenu()) {
                                        switch (select) {
                                            case 0:
                                                ChangeMapService.gI().changeMapBySpaceShip(player, 24, -1, -1);
                                                break;
                                            case 1:
                                                ChangeMapService.gI().changeMapBySpaceShip(player, 25, -1, -1);
                                                break;
                                            case 2:
                                                ChangeMapService.gI().changeMapBySpaceShip(player, 84, -1, -1);
                                                break;
                                        }
                                    }
                                }
                                if (this.mapId == 19) {
                                    if (player.iDMark.isBaseMenu()) {
                                        switch (select) {
                                            case 0:
                                                ChangeMapService.gI().changeMapBySpaceShip(player, 109, -1, 295);
                                                break;
                                            case 1:
                                                ChangeMapService.gI().changeMapBySpaceShip(player, 68, -1, 90);
                                                break;
                                        }
                                    } else if (player.iDMark.getIndexMenu() == ConstNpc.MENU_FIND_KUKU) {
                                        switch (select) {
                                            case 0:
                                                Boss boss = BossManager.gI().getBossById(BossFactory.KUKU);
                                                if (boss != null && !boss.isDie()) {
                                                    if (player.inventory.gold >= COST_FIND_BOSS) {
                                                        player.inventory.gold -= COST_FIND_BOSS;
                                                        ChangeMapService.gI().changeMap(player, boss.zone,
                                                                boss.location.x, boss.location.y);
                                                        Service.getInstance().sendMoney(player);
                                                    } else {
                                                        Service.getInstance().sendThongBao(player,
                                                                "Kh√¥ng ƒë·ªß v√†ng, c√≤n thi·∫øu "
                                                                + Util.numberToMoney(
                                                                        COST_FIND_BOSS - player.inventory.gold)
                                                                + " v√†ng");
                                                    }
                                                }
                                                break;
                                            case 1:
                                                ChangeMapService.gI().changeMapBySpaceShip(player, 109, -1, 295);
                                                break;
                                            case 2:
                                                ChangeMapService.gI().changeMapBySpaceShip(player, 68, -1, 90);
                                                break;
                                        }
                                    } else if (player.iDMark.getIndexMenu() == ConstNpc.MENU_FIND_MAP_DAU_DINH) {
                                        switch (select) {
                                            case 0:
                                                Boss boss = BossManager.gI().getBossById(BossFactory.MAP_DAU_DINH);
                                                if (boss != null && !boss.isDie()) {
                                                    if (player.inventory.gold >= COST_FIND_BOSS) {
                                                        player.inventory.gold -= COST_FIND_BOSS;
                                                        ChangeMapService.gI().changeMap(player, boss.zone,
                                                                boss.location.x, boss.location.y);
                                                        Service.getInstance().sendMoney(player);
                                                    } else {
                                                        Service.getInstance().sendThongBao(player,
                                                                "Kh√¥ng ƒë·ªß v√†ng, c√≤n thi·∫øu "
                                                                + Util.numberToMoney(
                                                                        COST_FIND_BOSS - player.inventory.gold)
                                                                + " v√†ng");
                                                    }
                                                }
                                                break;
                                            case 1:
                                                ChangeMapService.gI().changeMapBySpaceShip(player, 109, -1, 295);
                                                break;
                                            case 2:
                                                ChangeMapService.gI().changeMapBySpaceShip(player, 68, -1, 90);
                                                break;
                                        }
                                    } else if (player.iDMark.getIndexMenu() == ConstNpc.MENU_FIND_RAMBO) {
                                        switch (select) {
                                            case 0:
                                                Boss boss = BossManager.gI().getBossById(BossFactory.RAMBO);
                                                if (boss != null && !boss.isDie()) {
                                                    if (player.inventory.gold >= COST_FIND_BOSS) {
                                                        player.inventory.gold -= COST_FIND_BOSS;
                                                        ChangeMapService.gI().changeMap(player, boss.zone,
                                                                boss.location.x, boss.location.y);
                                                        Service.getInstance().sendMoney(player);
                                                    } else {
                                                        Service.getInstance().sendThongBao(player,
                                                                "Kh√¥ng ƒë·ªß v√†ng, c√≤n thi·∫øu "
                                                                + Util.numberToMoney(
                                                                        COST_FIND_BOSS - player.inventory.gold)
                                                                + " v√†ng");
                                                    }
                                                }
                                                break;
                                            case 1:
                                                ChangeMapService.gI().changeMapBySpaceShip(player, 109, -1, 295);
                                                break;
                                            case 2:
                                                ChangeMapService.gI().changeMapBySpaceShip(player, 68, -1, 90);
                                                break;
                                        }
                                    }
                                }
                                if (this.mapId == 68) {
                                    if (player.iDMark.isBaseMenu()) {
                                        switch (select) {
                                            case 0:
                                                ChangeMapService.gI().changeMapBySpaceShip(player, 19, -1, 1100);
                                                break;
                                        }
                                    }
                                }
                            }
                        }
                    };
                    break;
                case ConstNpc.SANTA:
                    npc = new Npc(mapId, status, cx, cy, tempId, avartar) {
                        @Override
                        public void openBaseMenu(Player player) {
                            if (canOpenNpc(player)) {
                                createOtherMenu(player, ConstNpc.BASE_MENU,
                                        "Xin ch√†o, ta c√≥ m·ªôt s·ªë v·∫≠t ph·∫©m ƒë·∫∑t bi·ªát c·∫≠u c√≥ mu·ªën xem kh√¥ng?",
                                        "C·ª≠a h√†ng",
                                        "M·ªü r·ªông\nH√†nh trang\nR∆∞∆°ng ƒë·ªì",
                                        "Nh·∫≠p m√£\n qu√† t·∫∑ng",
                                        "C·ª≠a h√†ng\nH·∫°n s·ª≠ d·ª•ng",
                                        "Ti·ªám\nH·ªõt t√≥c",
                                        "Danh\nhi·ªáu");
                            }
                        }

                        @Override
                        public void confirmMenu(Player player, int select) {
                            if (canOpenNpc(player)) {
                                if (this.mapId == 5 || this.mapId == 13 || this.mapId == 20) {
                                    if (player.iDMark.isBaseMenu()) {
                                        switch (select) {
                                            case 0: // shop
                                                this.openShopWithGender(player, ConstNpc.SHOP_SANTA_0, 0);
                                                break;
                                            case 1:
                                                this.openShopWithGender(player, ConstNpc.SHOP_SANTA_2, 2);
                                                break;
                                            case 2: // giftcode
                                                Input.gI().createFormGiftCode(player);
                                                break;
                                            case 3: // c·ª≠a h√†ng h·∫°n s·ª≠ d·ª•ng
                                                this.openShopWithGender(player, ConstNpc.SHOP_SANTA_4, 4);
                                                break;
                                            case 4: // ti·ªám h·ªõt t√≥c
                                                this.openShopWithGender(player, ConstNpc.SHOP_SANTA_1, 1);
                                                break;
                                            case 5: // danh hi·ªáu
                                                this.openShopWithGender(player, ConstNpc.SHOP_SANTA_3, 3);
                                                break;
                                        }
                                    }
                                }
                            }
                        }
                    };
                    break;
                case ConstNpc.URON:
                    npc = new Npc(mapId, status, cx, cy, tempId, avartar) {
                        @Override
                        public void openBaseMenu(Player pl) {
                            if (canOpenNpc(pl)) {
                                this.openShopWithGender(pl, ConstNpc.SHOP_URON_0, 0);
                            }
                        }

                        @Override
                        public void confirmMenu(Player player, int select) {
                            if (canOpenNpc(player)) {

                            }
                        }
                    };
                    break;
                case ConstNpc.BA_HAT_MIT:
                    npc = new Npc(mapId, status, cx, cy, tempId, avartar) {

                        @Override
                        public void openBaseMenu(Player player) {
                            Item bongTai = InventoryService.gI().findItemBagByTemp(player, (short) 454);
                            Item bongTaiCap2 = InventoryService.gI().findItemBagByTemp(player, (short) 921);
                            if (canOpenNpc(player)) {
                                if (this.mapId == 5) {
                                    this.createOtherMenu(player, ConstNpc.BASE_MENU, "Ng∆∞∆°i t√¨m ta c√≥ vi·ªác g√¨?",
                                            "Ch·ª©c nƒÉng\nPha l√™", "V√µ ƒë√†i\nSinh t·ª≠", "N√¢ng S√©t\n k√≠ch ho·∫°t", "Trang B·ªã\n Thi√™n S·ª©");
                                } else if (this.mapId == 112) {
                                    if (player.DoneVoDaiBaHatMit == 1) {
                                        this.createOtherMenu(player, ConstNpc.NHAN_QUA_VO_DAI, "ƒê√¢y l√† ph·∫©n th∆∞·ªüng c·ªßa con.", "1 v·ªá tinh\n b·∫•t k√¨", "1 b√πa 1h\n b·∫•t k·ª≥");
                                    } else {
                                        this.createOtherMenu(player, ConstNpc.BASE_MENU, "Ng∆∞∆°i mu·ªën ƒëƒÉng k√Ω thi ƒë·∫•u v√µ ƒë√†i?\n"
                                                + "nhi·ªÅu ph·∫ßn th∆∞·ªüng gi√° tr·ªã ƒëang ƒë·ª£i ng∆∞∆°i ƒë√≥", "Top 100", "ƒê·ªìng √Ω\n0 ng·ªçc", "T·ª´ ch·ªëi", "V·ªÅ\nƒë·∫£o r√πa");
                                    }
                                } else {
                                    if (player.event.luotNhanBuaMienPhi == 1) {
                                        if (bongTaiCap2 != null) {
                                            this.createOtherMenu(player, ConstNpc.BASE_MENU, "Ng∆∞∆°i t√¨m ta c√≥ vi·ªác g√¨?",
                                                    "Th∆∞·ªüng\nB√πa 1h\nng·∫´u nhi√™n", "S√°ch\nTuy·ªát K·ªπ", "C·ª≠a h√†ng\n B√πa", "N√¢ng c·∫•p\n V·∫≠t ph·∫©m", "M·ªü ch·ªâ s·ªë\nB√¥ng tai\nPorata c·∫•p 2", "L√†m ph√©p\nNh·∫≠p ƒë√°", "Nh·∫≠p\nNg·ªçc R·ªìng");
                                        } else if (bongTai != null) {
                                            this.createOtherMenu(player, ConstNpc.BASE_MENU, "Ng∆∞∆°i t√¨m ta c√≥ vi·ªác g√¨?",
                                                    "Th∆∞·ªüng\nB√πa 1h\nng·∫´u nhi√™n", "S√°ch\nTuy·ªát K·ªπ", "C·ª≠a h√†ng\n B√πa", "N√¢ng c·∫•p\n V·∫≠t ph·∫©m", "N√¢ng c·∫•p\nB√¥ng tai\nPorata", "L√†m ph√©p\nNh·∫≠p ƒë√°", "Nh·∫≠p\nNg·ªçc R·ªìng");
                                        } else {
                                            this.createOtherMenu(player, ConstNpc.BASE_MENU, "Ng∆∞∆°i t√¨m ta c√≥ vi·ªác g√¨?",
                                                    "Th∆∞·ªüng\nB√πa 1h\nng·∫´u nhi√™n", "S√°ch\nTuy·ªát K·ªπ", "C·ª≠a h√†ng\n B√πa", "N√¢ng c·∫•p\n V·∫≠t ph·∫©m", "L√†m ph√©p\nNh·∫≠p ƒë√°", "Nh·∫≠p\nNg·ªçc R·ªìng");
                                        }
                                    } else {
                                        if (bongTaiCap2 != null) {
                                            this.createOtherMenu(player, ConstNpc.BASE_MENU, "Ng∆∞∆°i t√¨m ta c√≥ vi·ªác g√¨?",
                                                    "S√°ch\nTuy·ªát K·ªπ", "C·ª≠a h√†ng\n B√πa", "N√¢ng c·∫•p\n V·∫≠t ph·∫©m", "M·ªü ch·ªâ s·ªë\nB√¥ng tai\nPorata c·∫•p 2", "L√†m ph√©p\nNh·∫≠p ƒë√°", "Nh·∫≠p\nNg·ªçc R·ªìng");
                                        } else if (bongTai != null) {
                                            this.createOtherMenu(player, ConstNpc.BASE_MENU, "Ng∆∞∆°i t√¨m ta c√≥ vi·ªác g√¨?",
                                                    "S√°ch\nTuy·ªát K·ªπ", "C·ª≠a h√†ng\n B√πa", "N√¢ng c·∫•p\n V·∫≠t ph·∫©m", "N√¢ng c·∫•p\nB√¥ng tai\nPorata", "L√†m ph√©p\nNh·∫≠p ƒë√°", "Nh·∫≠p\nNg·ªçc R·ªìng");
                                        } else {
                                            this.createOtherMenu(player, ConstNpc.BASE_MENU, "Ng∆∞∆°i t√¨m ta c√≥ vi·ªác g√¨?",
                                                    "S√°ch\nTuy·ªát K·ªπ", "C·ª≠a h√†ng\n B√πa", "N√¢ng c·∫•p\n V·∫≠t ph·∫©m", "L√†m ph√©p\nNh·∫≠p ƒë√°", "Nh·∫≠p\nNg·ªçc R·ªìng");
                                        }
                                    }
                                }
                            }
                        }

                        @Override
                        public void confirmMenu(Player player, int select) {
                            Item bongTai = InventoryService.gI().findItemBagByTemp(player, (short) 454);
                            Item bongTaiCap2 = InventoryService.gI().findItemBagByTemp(player, (short) 921);
                            if (canOpenNpc(player)) {
                                if (this.mapId == 5) {
                                    if (player.iDMark.isBaseMenu()) {
                                        switch (select) {
                                            case 0:
                                                createOtherMenu(player, ConstNpc.CHUC_NANG_SAO_PHA_LE, "Ta c√≥ th·ªÉ gi√∫p g√¨ cho ng∆∞∆°i?", "√âp sao\ntrang b·ªã", "Pha l√™\nh√≥a\ntrang b·ªã", "N√¢ng c·∫•p\nSao pha l√™", "ƒê√°nh b√≥ng\nSao pha l√™", "C∆∞·ªùng h√≥a\nl·ªó sao\npha l√™", "T·∫°o ƒë√°\nHematite");
                                                return;
                                            case 2:
                                                createOtherMenu(player, ConstNpc.MENU_CHUYEN_HOA_SKH, "Ta s·∫Ω n√¢ng trang b·ªã h·ªßy di·ªát c·ªßa ng∆∞·ªùi\nl√™n m·ªôt t·∫ßm cao m·ªõi ho√†n to√†n kh√°c", "N√¢ng c·∫•p\nSKH","N√¢ng C·∫•p\nSKH VIP");
                                                return;
                                            case 1:
                                                ChangeMapService.gI().changeMap(player, 112, -1, 55, 408);
                                                return;
                                            case 3:
                                                CombineServiceNew.gI().openTabCombine(player, CombineServiceNew.CHE_TAO_DO_THIEN_SU);
                                                break;
                                        }
                                    } else if (player.iDMark.getIndexMenu() == ConstNpc.CHUC_NANG_SAO_PHA_LE) {
                                        switch (select) {
                                            case 0:
                                                CombineServiceNew.gI().openTabCombine(player, CombineServiceNew.EP_SAO_TRANG_BI);
                                                break;
                                            case 1:
                                                createOtherMenu(player, ConstNpc.MENU_PHA_LE_HOA_TRANG_BI, "Ng∆∞∆°i mu·ªën pha l√™ h√≥a trang b·ªã b·∫±ng c√°ch n√†o?", "B·∫±ng ng·ªçc", "T·ª´ ch·ªëi");
                                                return;
                                            case 2: // NANG CAP SAO PHA LE
                                                CombineServiceNew.gI().openTabCombine(player, CombineServiceNew.NANG_CAP_SAO_PHA_LE);
                                                break;
                                            case 3:
                                                CombineServiceNew.gI().openTabCombine(player, CombineServiceNew.DANH_BONG_SAO_PHA_LE);
                                                break;
                                            case 4:
                                                CombineServiceNew.gI().openTabCombine(player, CombineServiceNew.CUONG_HOA_LO_SAO_PHA_LE);
                                                break;
                                            case 5:
                                                CombineServiceNew.gI().openTabCombine(player, CombineServiceNew.TAO_DA_HEMATILE);
                                                break;
                                        }
                                    } else if (player.iDMark.getIndexMenu() == ConstNpc.MENU_CHUYEN_HOA_SKH) {
                                        switch (select) {
                                            

                                            case 0: // NANG CAP SAO PHA LE
                                                CombineServiceNew.gI().openTabCombine(player, CombineServiceNew.DAP_SET_KICH_HOAT);
                                                break;
                                            case 1: // NANG CAP SAO PHA LE
                                                CombineServiceNew.gI().openTabCombine(player, CombineServiceNew.DAP_SET_KICH_HOAT_CAO_CAP);
                                                break;
                                            
                                        }
                                    } else if (player.iDMark.getIndexMenu() == ConstNpc.MENU_PHA_LE_HOA_TRANG_BI) {
                                        switch (select) {
                                            case 0:
                                                CombineServiceNew.gI().openTabCombine(player, CombineServiceNew.PHA_LE_HOA_TRANG_BI);
                                                break;
                                        }
                                    } else if (player.iDMark.getIndexMenu() == ConstNpc.MENU_CHUYEN_HOA_TRANG_BI) {
                                        switch (select) {
                                            case 0:
                                                CombineServiceNew.gI().openTabCombine(player, CombineServiceNew.CHUYEN_HOA_BANG_VANG);
                                                break;
                                            case 1:
                                                CombineServiceNew.gI().openTabCombine(player, CombineServiceNew.CHUYEN_HOA_BANG_NGOC);
                                                break;
                                        }
                                    } else if (player.iDMark.getIndexMenu() == ConstNpc.MENU_CHUYEN_HOA_TRANG_BI) {
                                        switch (select) {
                                            case 0:
                                                CombineServiceNew.gI().openTabCombine(player, CombineServiceNew.CHUYEN_HOA_BANG_VANG);
                                                break;
                                            case 1:
                                                CombineServiceNew.gI().openTabCombine(player, CombineServiceNew.CHUYEN_HOA_BANG_NGOC);
                                                break;
                                        }
                                    } else if (player.iDMark.getIndexMenu() == ConstNpc.MENU_START_COMBINE) {
                                        switch (player.combineNew.typeCombine) {
                                            case CombineServiceNew.EP_SAO_TRANG_BI:
                                            case CombineServiceNew.PHA_LE_HOA_TRANG_BI:
                                            case CombineServiceNew.DOI_VE_HUY_DIET:
                                            case CombineServiceNew.DAP_SET_KICH_HOAT:
                                            case CombineServiceNew.DAP_SET_KICH_HOAT_CAO_CAP:
                                            case CombineServiceNew.CHUYEN_HOA_BANG_VANG:
                                            case CombineServiceNew.CHUYEN_HOA_BANG_NGOC:
                                            case CombineServiceNew.GIA_HAN_CAI_TRANG:
                                            case CombineServiceNew.NANG_CAP_SKH:
                                            case CombineServiceNew.CHE_TAO_DO_THIEN_SU:
                                                CombineServiceNew.gI().startCombine(player, select);
                                                break;
                                        }
                                    } else if (player.iDMark.getIndexMenu() == ConstNpc.MENU_NANG_CAP_DO_TS) {
                                        if (select == 0) {
                                            CombineServiceNew.gI().startCombine(player, select);
                                        }
                                    } else if (player.iDMark.getIndexMenu() == ConstNpc.ORTHER_MENU) {
                                        switch (select) {
                                            case 0:
                                                CombineServiceNew.gI().openTabCombine(player,
                                                        CombineServiceNew.DAP_SET_KICH_HOAT);
                                                break;
                                            case 1:
                                                CombineServiceNew.gI().openTabCombine(player,
                                                        CombineServiceNew.DAP_SET_KICH_HOAT_CAO_CAP);
                                                break;

                                        }
                                    }
                                } else if (this.mapId == 112) {
                                    if (player.iDMark.isBaseMenu()) {
                                        switch (select) {
                                            case 0:// Top 100 g√¨ ƒë√≥ ƒë√©o bi·∫øt

                                                break;
                                            case 1:// x√°c nh·∫≠n l√™n v√µ ƒë√†i
                                                VoDaiSinhTuService.gI().startChallenge(player);
                                                break;
                                            case 2:// t·ª´ ch·ªëi

                                                break;
                                            case 3:
                                                ChangeMapService.gI().changeMapBySpaceShip(player, 5, -1, 1156);
                                                break;
                                        }
                                    } else if (player.iDMark.getIndexMenu() == ConstNpc.NHAN_QUA_VO_DAI) {
                                        switch (select) {
                                            case 0:
                                                if (player.DoneVoDaiBaHatMit == 1) {
                                                    player.DoneVoDaiBaHatMit = 0;
                                                    Service.getInstance().sendThongBao(player, "B·∫°n ƒë√£ nh·∫≠n ƒë∆∞·ª£c 1 v·ªá tinh ng·∫´u nhi√™n");
                                                    break;
                                                } else {
                                                    Service.getInstance().sendThongBao(player, "B·∫°n ƒë√£ nh·∫≠n ph·∫ßn th∆∞·ªüng n√†y r·ªìi");
                                                }
                                                break;
                                            case 1:
                                                if (player.DoneVoDaiBaHatMit == 1) {
                                                    player.DoneVoDaiBaHatMit = 0;
                                                } else {
                                                    Service.getInstance().sendThongBao(player, "B·∫°n ƒë√£ nh·∫≠n ƒë∆∞·ª£c 1 b√πa 1h ng·∫´u nhi√™n");
                                                }
                                                break;
                                        }
                                    }
                                } else if (this.mapId == 42 || this.mapId == 43 || this.mapId == 44 || this.mapId == 84) { // BA_HAT_MIT_BUA
                                    if (player.iDMark.isBaseMenu()) {
                                        if (player.event.luotNhanBuaMienPhi == 1) {
                                            if (bongTaiCap2 != null) {
                                                switch (select) {
                                                    case 0: // Ng·∫´u nhi√™n b√πa 1h
                                                        if (player.event.luotNhanBuaMienPhi == 1) {
                                                            int idItem = Util.nextInt(213, 219);
                                                            player.charms.addTimeCharms(idItem, 60);
                                                            Item bua = ItemService.gI().createNewItem((short) idItem);
                                                            Service.getInstance().sendThongBao(player, "B·∫°n v·ª´a nh·∫≠n th∆∞·ªüng " + bua.getName());
                                                            player.event.luotNhanBuaMienPhi = 0;
                                                        } else {
                                                            Service.getInstance().sendThongBao(player, "H√¥m nay b·∫°n ƒë√£ nh·∫≠n b√πa mi·ªÖn ph√≠ r·ªìi!!!");
                                                        }
                                                        break;
                                                    case 1: // S√°ch tuy·ªát k·ªπ
                                                        createOtherMenu(player, ConstNpc.SACH_TUYET_KY, "Ta c√≥ th·ªÉ gi√∫p g√¨ cho ng∆∞∆°i ?",
                                                                "ƒê√≥ng th√†nh\nS√°ch c≈©",
                                                                "ƒê·ªïi S√°ch\nTuy·ªát k·ªπ",
                                                                "Gi√°m ƒë·ªãnh\nS√°ch",
                                                                "T·∫©y\nS√°ch",
                                                                "N√¢ng c·∫•p\nS√°ch\nTuy·ªát k·ªπ",
                                                                "H·ªìi ph·ª•c\nS√°ch",
                                                                "Ph√¢n r√£\nS√°ch");
                                                        break;
                                                    case 2: // shop b√πa
                                                        createOtherMenu(player, ConstNpc.MENU_OPTION_SHOP_BUA,
                                                                "B√πa c·ªßa ta r·∫•t l·ª£i h·∫°i, nh√¨n ng∆∞∆°i y·∫øu ƒëu·ªëi th·∫ø n√†y, ch·∫Øc mu·ªën mua b√πa ƒë·ªÉ "
                                                                + "m·∫°nh m·∫Ω √†, mua kh√¥ng ta b√°n cho, x√†i r·ªìi l·∫°i th√≠ch cho m√† xem.",
                                                                "B√πa\n1 gi·ªù", "B√πa\n8 gi·ªù", "B√πa\n1 th√°ng",
                                                                "ƒê√≥ng");
                                                        break;
                                                    case 3: // n√¢ng c·∫•p v·∫≠t ph·∫©m
                                                        CombineServiceNew.gI().openTabCombine(player,
                                                                CombineServiceNew.NANG_CAP_VAT_PHAM);
                                                        break;
                                                    case 4: // m·ªü ch·ªâ s·ªë b√¥ng tai c·∫•p 2
                                                        CombineServiceNew.gI().openTabCombine(player,
                                                                CombineServiceNew.MO_CHI_SO_BONG_TAI);
                                                        break;
                                                    case 5: //L√†m ph√©p nh·∫≠p ƒë√°
                                                        CombineServiceNew.gI().openTabCombine(player,
                                                                CombineServiceNew.LAM_PHEP_NHAP_DA);
                                                        break;
                                                    case 6:// 
                                                        CombineServiceNew.gI().openTabCombine(player,
                                                                CombineServiceNew.NHAP_NGOC_RONG);
                                                        break;
                                                }
                                            } else if (bongTai != null) {
                                                switch (select) {
                                                    case 0: // Ng·∫´u nhi√™n b√πa 1h
                                                        if (player.event.luotNhanBuaMienPhi == 1) {
                                                            int idItem = Util.nextInt(213, 219);
                                                            player.charms.addTimeCharms(idItem, 60);
                                                            Item bua = ItemService.gI().createNewItem((short) idItem);
                                                            Service.getInstance().sendThongBao(player, "B·∫°n v·ª´a nh·∫≠n th∆∞·ªüng " + bua.getName());
                                                            player.event.luotNhanBuaMienPhi = 0;
                                                        } else {
                                                            Service.getInstance().sendThongBao(player, "H√¥m nay b·∫°n ƒë√£ nh·∫≠n b√πa mi·ªÖn ph√≠ r·ªìi!!!");
                                                        }
                                                        break;
                                                    case 1: // S√°ch tuy·ªát k·ªπ
                                                        createOtherMenu(player, ConstNpc.SACH_TUYET_KY, "Ta c√≥ th·ªÉ gi√∫p g√¨ cho ng∆∞∆°i ?",
                                                                "ƒê√≥ng th√†nh\nS√°ch c≈©",
                                                                "ƒê·ªïi S√°ch\nTuy·ªát k·ªπ",
                                                                "Gi√°m ƒë·ªãnh\nS√°ch",
                                                                "T·∫©y\nS√°ch",
                                                                "N√¢ng c·∫•p\nS√°ch\nTuy·ªát k·ªπ",
                                                                "H·ªìi ph·ª•c\nS√°ch",
                                                                "Ph√¢n r√£\nS√°ch");
                                                        break;
                                                    case 2: // shop b√πa
                                                        createOtherMenu(player, ConstNpc.MENU_OPTION_SHOP_BUA,
                                                                "B√πa c·ªßa ta r·∫•t l·ª£i h·∫°i, nh√¨n ng∆∞∆°i y·∫øu ƒëu·ªëi th·∫ø n√†y, ch·∫Øc mu·ªën mua b√πa ƒë·ªÉ "
                                                                + "m·∫°nh m·∫Ω √†, mua kh√¥ng ta b√°n cho, x√†i r·ªìi l·∫°i th√≠ch cho m√† xem.",
                                                                "B√πa\n1 gi·ªù", "B√πa\n8 gi·ªù", "B√πa\n1 th√°ng",
                                                                "ƒê√≥ng");
                                                        break;
                                                    case 3: // n√¢ng c·∫•p v·∫≠t ph·∫©m
                                                        CombineServiceNew.gI().openTabCombine(player,
                                                                CombineServiceNew.NANG_CAP_VAT_PHAM);
                                                        break;
                                                    case 4: // n√¢ng c·∫•p b√¥ng tai c·∫•p 2
                                                        CombineServiceNew.gI().openTabCombine(player,
                                                                CombineServiceNew.NANG_CAP_BONG_TAI);
                                                        break;
                                                    case 5: //L√†m ph√©p nh·∫≠p ƒë√°
                                                        CombineServiceNew.gI().openTabCombine(player,
                                                                CombineServiceNew.LAM_PHEP_NHAP_DA);
                                                        break;
                                                    case 6:// 
                                                        CombineServiceNew.gI().openTabCombine(player,
                                                                CombineServiceNew.NHAP_NGOC_RONG);
                                                        break;
                                                }
                                            } else {
                                                switch (select) {
                                                    case 0: // Ng·∫´u nhi√™n b√πa 1h
                                                        if (player.event.luotNhanBuaMienPhi == 1) {
                                                            int idItem = Util.nextInt(213, 219);
                                                            player.charms.addTimeCharms(idItem, 60);
                                                            Item bua = ItemService.gI().createNewItem((short) idItem);
                                                            Service.getInstance().sendThongBao(player, "B·∫°n v·ª´a nh·∫≠n th∆∞·ªüng " + bua.getName());
                                                            player.event.luotNhanBuaMienPhi = 0;
                                                        } else {
                                                            Service.getInstance().sendThongBao(player, "H√¥m nay b·∫°n ƒë√£ nh·∫≠n b√πa mi·ªÖn ph√≠ r·ªìi!!!");
                                                        }
                                                        break;
                                                    case 1: // S√°ch tuy·ªát k·ªπ
                                                        createOtherMenu(player, ConstNpc.SACH_TUYET_KY, "Ta c√≥ th·ªÉ gi√∫p g√¨ cho ng∆∞∆°i ?",
                                                                "ƒê√≥ng th√†nh\nS√°ch c≈©",
                                                                "ƒê·ªïi S√°ch\nTuy·ªát k·ªπ",
                                                                "Gi√°m ƒë·ªãnh\nS√°ch",
                                                                "T·∫©y\nS√°ch",
                                                                "N√¢ng c·∫•p\nS√°ch\nTuy·ªát k·ªπ",
                                                                "H·ªìi ph·ª•c\nS√°ch",
                                                                "Ph√¢n r√£\nS√°ch");
                                                        break;
                                                    case 2: // shop b√πa
                                                        createOtherMenu(player, ConstNpc.MENU_OPTION_SHOP_BUA,
                                                                "B√πa c·ªßa ta r·∫•t l·ª£i h·∫°i, nh√¨n ng∆∞∆°i y·∫øu ƒëu·ªëi th·∫ø n√†y, ch·∫Øc mu·ªën mua b√πa ƒë·ªÉ "
                                                                + "m·∫°nh m·∫Ω √†, mua kh√¥ng ta b√°n cho, x√†i r·ªìi l·∫°i th√≠ch cho m√† xem.",
                                                                "B√πa\n1 gi·ªù", "B√πa\n8 gi·ªù", "B√πa\n1 th√°ng",
                                                                "ƒê√≥ng");
                                                        break;
                                                    case 3: // n√¢ng c·∫•p v·∫≠t ph·∫©m
                                                        CombineServiceNew.gI().openTabCombine(player,
                                                                CombineServiceNew.NANG_CAP_VAT_PHAM);
                                                        break;
                                                    case 4: //L√†m ph√©p nh·∫≠p ƒë√°
                                                        CombineServiceNew.gI().openTabCombine(player,
                                                                CombineServiceNew.LAM_PHEP_NHAP_DA);
                                                        break;
                                                    case 5:// 
                                                        CombineServiceNew.gI().openTabCombine(player,
                                                                CombineServiceNew.NHAP_NGOC_RONG);
                                                        break;
                                                }
                                            }
                                        } else {
                                            if (bongTaiCap2 != null) {
                                                switch (select) {
                                                    case 0: // S√°ch tuy·ªát k·ªπ
                                                        createOtherMenu(player, ConstNpc.SACH_TUYET_KY, "Ta c√≥ th·ªÉ gi√∫p g√¨ cho ng∆∞∆°i ?",
                                                                "ƒê√≥ng th√†nh\nS√°ch c≈©",
                                                                "ƒê·ªïi S√°ch\nTuy·ªát k·ªπ",
                                                                "Gi√°m ƒë·ªãnh\nS√°ch",
                                                                "T·∫©y\nS√°ch",
                                                                "N√¢ng c·∫•p\nS√°ch\nTuy·ªát k·ªπ",
                                                                "H·ªìi ph·ª•c\nS√°ch",
                                                                "Ph√¢n r√£\nS√°ch");
                                                        break;
                                                    case 1: // shop b√πa
                                                        createOtherMenu(player, ConstNpc.MENU_OPTION_SHOP_BUA,
                                                                "B√πa c·ªßa ta r·∫•t l·ª£i h·∫°i, nh√¨n ng∆∞∆°i y·∫øu ƒëu·ªëi th·∫ø n√†y, ch·∫Øc mu·ªën mua b√πa ƒë·ªÉ "
                                                                + "m·∫°nh m·∫Ω √†, mua kh√¥ng ta b√°n cho, x√†i r·ªìi l·∫°i th√≠ch cho m√† xem.",
                                                                "B√πa\n1 gi·ªù", "B√πa\n8 gi·ªù", "B√πa\n1 th√°ng",
                                                                "ƒê√≥ng");
                                                        break;
                                                    case 2: // n√¢ng c·∫•p v·∫≠t ph·∫©m
                                                        CombineServiceNew.gI().openTabCombine(player,
                                                                CombineServiceNew.NANG_CAP_VAT_PHAM);
                                                        break;
                                                    case 3:
                                                        CombineServiceNew.gI().openTabCombine(player,
                                                                CombineServiceNew.MO_CHI_SO_BONG_TAI);
                                                        break;
                                                    case 4: //L√†m ph√©p nh·∫≠p ƒë√°
                                                        CombineServiceNew.gI().openTabCombine(player,
                                                                CombineServiceNew.LAM_PHEP_NHAP_DA);
                                                        break;
                                                    case 5:// 
                                                        CombineServiceNew.gI().openTabCombine(player,
                                                                CombineServiceNew.NHAP_NGOC_RONG);
                                                        break;
                                                }
                                            } else if (bongTai != null) {
                                                switch (select) {
                                                    case 0: // S√°ch tuy·ªát k·ªπ
                                                        createOtherMenu(player, ConstNpc.SACH_TUYET_KY, "Ta c√≥ th·ªÉ gi√∫p g√¨ cho ng∆∞∆°i ?",
                                                                "ƒê√≥ng th√†nh\nS√°ch c≈©",
                                                                "ƒê·ªïi S√°ch\nTuy·ªát k·ªπ",
                                                                "Gi√°m ƒë·ªãnh\nS√°ch",
                                                                "T·∫©y\nS√°ch",
                                                                "N√¢ng c·∫•p\nS√°ch\nTuy·ªát k·ªπ",
                                                                "H·ªìi ph·ª•c\nS√°ch",
                                                                "Ph√¢n r√£\nS√°ch");
                                                        break;
                                                    case 1: // shop b√πa
                                                        createOtherMenu(player, ConstNpc.MENU_OPTION_SHOP_BUA,
                                                                "B√πa c·ªßa ta r·∫•t l·ª£i h·∫°i, nh√¨n ng∆∞∆°i y·∫øu ƒëu·ªëi th·∫ø n√†y, ch·∫Øc mu·ªën mua b√πa ƒë·ªÉ "
                                                                + "m·∫°nh m·∫Ω √†, mua kh√¥ng ta b√°n cho, x√†i r·ªìi l·∫°i th√≠ch cho m√† xem.",
                                                                "B√πa\n1 gi·ªù", "B√πa\n8 gi·ªù", "B√πa\n1 th√°ng",
                                                                "ƒê√≥ng");
                                                        break;
                                                    case 2: // n√¢ng c·∫•p v·∫≠t ph·∫©m
                                                        CombineServiceNew.gI().openTabCombine(player,
                                                                CombineServiceNew.NANG_CAP_VAT_PHAM);
                                                        break;
                                                    case 3:
                                                        CombineServiceNew.gI().openTabCombine(player,
                                                                CombineServiceNew.NANG_CAP_BONG_TAI);
                                                        break;
                                                    case 4: //L√†m ph√©p nh·∫≠p ƒë√°
                                                        CombineServiceNew.gI().openTabCombine(player,
                                                                CombineServiceNew.LAM_PHEP_NHAP_DA);
                                                        break;
                                                    case 5:// 
                                                        CombineServiceNew.gI().openTabCombine(player,
                                                                CombineServiceNew.NHAP_NGOC_RONG);
                                                        break;
                                                }
                                            } else {
                                                switch (select) {
                                                    case 0: // S√°ch tuy·ªát k·ªπ
                                                        createOtherMenu(player, ConstNpc.SACH_TUYET_KY, "Ta c√≥ th·ªÉ gi√∫p g√¨ cho ng∆∞∆°i ?",
                                                                "ƒê√≥ng th√†nh\nS√°ch c≈©",
                                                                "ƒê·ªïi S√°ch\nTuy·ªát k·ªπ",
                                                                "Gi√°m ƒë·ªãnh\nS√°ch",
                                                                "T·∫©y\nS√°ch",
                                                                "N√¢ng c·∫•p\nS√°ch\nTuy·ªát k·ªπ",
                                                                "H·ªìi ph·ª•c\nS√°ch",
                                                                "Ph√¢n r√£\nS√°ch");
                                                        break;
                                                    case 1: // shop b√πa
                                                        createOtherMenu(player, ConstNpc.MENU_OPTION_SHOP_BUA,
                                                                "B√πa c·ªßa ta r·∫•t l·ª£i h·∫°i, nh√¨n ng∆∞∆°i y·∫øu ƒëu·ªëi th·∫ø n√†y, ch·∫Øc mu·ªën mua b√πa ƒë·ªÉ "
                                                                + "m·∫°nh m·∫Ω √†, mua kh√¥ng ta b√°n cho, x√†i r·ªìi l·∫°i th√≠ch cho m√† xem.",
                                                                "B√πa\n1 gi·ªù", "B√πa\n8 gi·ªù", "B√πa\n1 th√°ng",
                                                                "ƒê√≥ng");
                                                        break;
                                                    case 2: // n√¢ng c·∫•p v·∫≠t ph·∫©m
                                                        CombineServiceNew.gI().openTabCombine(player,
                                                                CombineServiceNew.NANG_CAP_VAT_PHAM);
                                                        break;
                                                    case 3: //L√†m ph√©p nh·∫≠p ƒë√°
                                                        CombineServiceNew.gI().openTabCombine(player,
                                                                CombineServiceNew.LAM_PHEP_NHAP_DA);
                                                        break;
                                                    case 4:// 
                                                        CombineServiceNew.gI().openTabCombine(player,
                                                                CombineServiceNew.NHAP_NGOC_RONG);
                                                        break;
                                                }
                                            }
                                        }
                                    } else if (player.iDMark.getIndexMenu() == ConstNpc.SACH_TUYET_KY) {
                                        switch (select) {
                                            case 0:
                                                Item trangSachCu = InventoryService.gI().findItemBagByTemp(player, 1291);

                                                Item biaSach = InventoryService.gI().findItemBagByTemp(player, 1281);
                                                if ((trangSachCu != null && trangSachCu.quantity >= 9999) && (biaSach != null && biaSach.quantity >= 1)) {
                                                    createOtherMenu(player, ConstNpc.DONG_THANH_SACH_CU,
                                                            "|2|Ch·∫ø t·∫°o Cu·ªën s√°ch c≈©\n"
                                                            + "|1|Trang s√°ch c≈© " + trangSachCu.quantity + "/9999\n"
                                                            + "B√¨a s√°ch " + biaSach.quantity + "/1\n"
                                                            + "T·ªâ l·ªá th√†nh c√¥ng: 20%\n"
                                                            + "Th·∫•t b·∫°i m·∫•t 99 trang s√°ch v√† 1 b√¨a s√°ch", "ƒê·ªìng √Ω", "T·ª´ ch·ªëi");
                                                    break;
                                                } else {
                                                    String NpcSay = "|2|Ch·∫ø t·∫°o Cu·ªën s√°ch c≈©\n";
                                                    if (trangSachCu == null) {
                                                        NpcSay += "|7|Trang s√°ch c≈© " + "0/9999\n";
                                                    } else {
                                                        NpcSay += "|1|Trang s√°ch c≈© " + trangSachCu.quantity + "/9999\n";
                                                    }
                                                    if (biaSach == null) {
                                                        NpcSay += "|7|B√¨a s√°ch " + "0/1\n";
                                                    } else {
                                                        NpcSay += "|1|B√¨a s√°ch " + biaSach.quantity + "/1\n";
                                                    }

                                                    NpcSay += "|7|T·ªâ l·ªá th√†nh c√¥ng: 20%\n";
                                                    NpcSay += "|7|Th·∫•t b·∫°i m·∫•t 99 trang s√°ch v√† 1 b√¨a s√°ch";
                                                    createOtherMenu(player, ConstNpc.DONG_THANH_SACH_CU_2,
                                                            NpcSay, "T·ª´ ch·ªëi");
                                                    break;
                                                }
                                            case 1:
                                                Item cuonSachCu = InventoryService.gI().findItemBagByTemp(player, 1284);
                                                Item kimBam = InventoryService.gI().findItemBagByTemp(player, 1282);

                                                if ((cuonSachCu != null && cuonSachCu.quantity >= 10) && (kimBam != null && kimBam.quantity >= 1)) {
                                                    createOtherMenu(player, ConstNpc.DOI_SACH_TUYET_KY,
                                                            "|2|ƒê·ªïi s√°ch tuy·ªát k·ªπ 1\n"
                                                            + "|1|Cu·ªën s√°ch c≈© " + cuonSachCu.quantity + "/10\n"
                                                            + "K√¨m b·∫•m gi·∫•y " + kimBam.quantity + "/1\n"
                                                            + "T·ªâ l·ªá th√†nh c√¥ng: 20%\n", "ƒê·ªìng √Ω", "T·ª´ ch·ªëi");
                                                    break;
                                                } else {
                                                    String NpcSay = "|2|ƒê·ªïi s√°ch Tuy·ªát k·ªπ 1\n";
                                                    if (cuonSachCu == null) {
                                                        NpcSay += "|7|Cu·ªën s√°ch c≈© " + "0/10\n";
                                                    } else {
                                                        NpcSay += "|1|Cu·ªën s√°ch c≈© " + cuonSachCu.quantity + "/10\n";
                                                    }
                                                    if (kimBam == null) {
                                                        NpcSay += "|7|K√¨m b·∫•m gi·∫•y " + "0/1\n";
                                                    } else {
                                                        NpcSay += "|1|K√¨m b·∫•m gi·∫•y " + kimBam.quantity + "/1\n";
                                                    }
                                                    NpcSay += "|7|T·ªâ l·ªá th√†nh c√¥ng: 20%\n";
                                                    createOtherMenu(player, ConstNpc.DOI_SACH_TUYET_KY_2,
                                                            NpcSay, "T·ª´ ch·ªëi");
                                                }
                                                break;
                                            case 2:// gi√°m ƒë·ªãnh s√°ch
                                                CombineServiceNew.gI().openTabCombine(player,
                                                        CombineServiceNew.GIAM_DINH_SACH);
                                                break;
                                            case 3:// t·∫©y s√°ch
                                                CombineServiceNew.gI().openTabCombine(player,
                                                        CombineServiceNew.TAY_SACH);
                                                break;
                                            case 4:// n√¢ng c·∫•p s√°ch
                                                CombineServiceNew.gI().openTabCombine(player,
                                                        CombineServiceNew.NANG_CAP_SACH_TUYET_KY);
                                                break;
                                            case 5:// ph·ª•c h·ªìi s√°ch
                                                CombineServiceNew.gI().openTabCombine(player,
                                                        CombineServiceNew.PHUC_HOI_SACH);
                                                break;
                                            case 6:// ph√¢n r√£ s√°ch
                                                CombineServiceNew.gI().openTabCombine(player,
                                                        CombineServiceNew.PHAN_RA_SACH);
                                                break;
                                        }
                                    } else if (player.iDMark.getIndexMenu() == ConstNpc.DOI_SACH_TUYET_KY) {
                                        switch (select) {
                                            case 0:
                                                Item cuonSachCu = InventoryService.gI().findItemBagByTemp(player, 1284);
                                                Item kimBam = InventoryService.gI().findItemBagByTemp(player, 1282);

                                                short baseValue = 1287;
                                                short genderModifier = (player.gender == 0) ? -2 : ((player.gender == 2) ? 2 : (short) 0);

                                                Item sachTuyetKy = ItemService.gI().createNewItem((short) (baseValue + genderModifier));

                                                if (Util.isTrue(20, 100)) {

                                                    sachTuyetKy.itemOptions.add(new ItemOption(229, 0));
                                                    sachTuyetKy.itemOptions.add(new ItemOption(21, 40));
                                                    sachTuyetKy.itemOptions.add(new ItemOption(30, 0));
                                                    sachTuyetKy.itemOptions.add(new ItemOption(87, 1));
                                                    sachTuyetKy.itemOptions.add(new ItemOption(230, 5));
                                                    sachTuyetKy.itemOptions.add(new ItemOption(231, 1000));
                                                    try { // send effect susscess
                                                        Message msg = new Message(-81);
                                                        msg.writer().writeByte(0);
                                                        msg.writer().writeUTF("test");
                                                        msg.writer().writeUTF("test");
                                                        msg.writer().writeShort(tempId);
                                                        player.sendMessage(msg);
                                                        msg.cleanup();
                                                        msg = new Message(-81);
                                                        msg.writer().writeByte(1);
                                                        msg.writer().writeByte(2);
                                                        msg.writer().writeByte(InventoryService.gI().getIndexBag(player, kimBam));
                                                        msg.writer().writeByte(InventoryService.gI().getIndexBag(player, cuonSachCu));
                                                        player.sendMessage(msg);
                                                        msg.cleanup();
                                                        msg = new Message(-81);
                                                        msg.writer().writeByte(7);
                                                        msg.writer().writeShort(sachTuyetKy.template.iconID);
                                                        msg.writer().writeShort(-1);
                                                        msg.writer().writeShort(-1);
                                                        msg.writer().writeShort(-1);
                                                        player.sendMessage(msg);
                                                        msg.cleanup();
                                                    } catch (Exception e) {
                                                    }
                                                    InventoryService.gI().addItemList(player.inventory.itemsBag, sachTuyetKy, 1);
                                                    InventoryService.gI().subQuantityItemsBag(player, cuonSachCu, 10);
                                                    InventoryService.gI().subQuantityItemsBag(player, kimBam, 1);
                                                    InventoryService.gI().sendItemBags(player);
                                                    return;
                                                } else {
                                                    try { // send effect faile
                                                        Message msg = new Message(-81);
                                                        msg.writer().writeByte(0);
                                                        msg.writer().writeUTF("test");
                                                        msg.writer().writeUTF("test");
                                                        msg.writer().writeShort(tempId);
                                                        player.sendMessage(msg);
                                                        msg.cleanup();
                                                        msg = new Message(-81);
                                                        msg.writer().writeByte(1);
                                                        msg.writer().writeByte(2);
                                                        msg.writer().writeByte(InventoryService.gI().getIndexBag(player, kimBam));
                                                        msg.writer().writeByte(InventoryService.gI().getIndexBag(player, cuonSachCu));
                                                        player.sendMessage(msg);
                                                        msg.cleanup();
                                                        msg = new Message(-81);
                                                        msg.writer().writeByte(8);
                                                        msg.writer().writeShort(-1);
                                                        msg.writer().writeShort(-1);
                                                        msg.writer().writeShort(-1);
                                                        player.sendMessage(msg);
                                                        msg.cleanup();
                                                    } catch (Exception e) {
                                                    }
                                                    InventoryService.gI().subQuantityItemsBag(player, cuonSachCu, 5);
                                                    InventoryService.gI().subQuantityItemsBag(player, kimBam, 1);
                                                    InventoryService.gI().sendItemBags(player);
                                                }
                                                return;
                                        }
                                    } else if (player.iDMark.getIndexMenu() == ConstNpc.DONG_THANH_SACH_CU) {
                                        switch (select) {
                                            case 0:
                                                Item trangSachCu = InventoryService.gI().findItemBagByTemp(player, 1291);
                                                Item biaSach = InventoryService.gI().findItemBagByTemp(player, 1281);
                                                Item cuonSachCu = ItemService.gI().createNewItem((short) 1284);
                                                if (Util.isTrue(20, 100)) {
                                                    cuonSachCu.itemOptions.add(new ItemOption(30, 0));

                                                    try { // send effect susscess

                                                        Message msg = new Message(-81);
                                                        msg.writer().writeByte(0);
                                                        msg.writer().writeUTF("test");
                                                        msg.writer().writeUTF("test");
                                                        msg.writer().writeShort(tempId);
                                                        player.sendMessage(msg);
                                                        msg.cleanup();

                                                        msg = new Message(-81);
                                                        msg.writer().writeByte(1);
                                                        msg.writer().writeByte(2);
                                                        msg.writer().writeByte(InventoryService.gI().getIndexBag(player, trangSachCu));
                                                        msg.writer().writeByte(InventoryService.gI().getIndexBag(player, biaSach));
                                                        player.sendMessage(msg);
                                                        msg.cleanup();

                                                        msg = new Message(-81);
                                                        msg.writer().writeByte(7);
                                                        msg.writer().writeShort(cuonSachCu.template.iconID);
                                                        player.sendMessage(msg);
                                                        msg.cleanup();
                                                    } catch (Exception e) {
                                                    }

                                                    InventoryService.gI().addItemList(player.inventory.itemsBag, cuonSachCu, 99);
                                                    InventoryService.gI().subQuantityItemsBag(player, trangSachCu, 9999);
                                                    InventoryService.gI().subQuantityItemsBag(player, biaSach, 1);
                                                    InventoryService.gI().sendItemBags(player);
                                                    return;
                                                } else {
                                                    try { // send effect faile
                                                        Message msg = new Message(-81);
                                                        msg.writer().writeByte(0);
                                                        msg.writer().writeUTF("test");
                                                        msg.writer().writeUTF("test");
                                                        msg.writer().writeShort(tempId);
                                                        player.sendMessage(msg);
                                                        msg.cleanup();

                                                        msg = new Message(-81);
                                                        msg.writer().writeByte(1);
                                                        msg.writer().writeByte(2);
                                                        msg.writer().writeByte(InventoryService.gI().getIndexBag(player, biaSach));
                                                        msg.writer().writeByte(InventoryService.gI().getIndexBag(player, trangSachCu));
                                                        player.sendMessage(msg);
                                                        msg.cleanup();

                                                        msg = new Message(-81);
                                                        msg.writer().writeByte(8);
                                                        player.sendMessage(msg);
                                                        msg.cleanup();
                                                    } catch (Exception e) {
                                                    }
                                                    InventoryService.gI().subQuantityItemsBag(player, trangSachCu, 99);
                                                    InventoryService.gI().subQuantityItemsBag(player, biaSach, 1);
                                                    InventoryService.gI().sendItemBags(player);
                                                }
                                                return;
                                        }
                                    } else if (player.iDMark.getIndexMenu() == ConstNpc.MENU_OPTION_SHOP_BUA) {
                                        switch (select) {
                                            case 0:
                                                ShopService.gI().openShopBua(player, ConstNpc.SHOP_BA_HAT_MIT_0, 0);
                                                break;
                                            case 1:
                                                ShopService.gI().openShopBua(player, ConstNpc.SHOP_BA_HAT_MIT_1, 1);
                                                break;
                                            case 2:
                                                ShopService.gI().openShopBua(player, ConstNpc.SHOP_BA_HAT_MIT_2, 2);
                                                break;
                                        }
                                    } else if (player.iDMark.getIndexMenu() == ConstNpc.MENU_START_COMBINE) {
                                        switch (player.combineNew.typeCombine) {
                                            case CombineServiceNew.NANG_CAP_VAT_PHAM:
                                                if (select == 0) {
                                                    player.iDMark.isUseTuiBaoVeNangCap = false;
                                                    CombineServiceNew.gI().startCombine(player, select);
                                                } else if (select == 1) {
                                                    player.iDMark.isUseTuiBaoVeNangCap = true;
                                                    CombineServiceNew.gI().startCombine(player, select);
                                                }
                                                break;
                                            case CombineServiceNew.NANG_CAP_BONG_TAI:
                                            case CombineServiceNew.MO_CHI_SO_BONG_TAI:
                                            case CombineServiceNew.LAM_PHEP_NHAP_DA:
                                            case CombineServiceNew.NHAP_NGOC_RONG:
                                            //START _ S√ÅCH TUY·ªÜT K·ª∏//
                                            case CombineServiceNew.GIAM_DINH_SACH:
                                            case CombineServiceNew.TAY_SACH:
                                            case CombineServiceNew.NANG_CAP_SACH_TUYET_KY:
                                            case CombineServiceNew.PHUC_HOI_SACH:
                                            case CombineServiceNew.PHAN_RA_SACH:
                                                //END _ S√ÅCH TUY·ªÜT K·ª∏//
                                                CombineServiceNew.gI().startCombine(player, select);
                                                break;
                                        }
                                    }
                                }
                            }
                        }
                    };
                    break;
                case ConstNpc.RUONG_DO:
                    npc = new Npc(mapId, status, cx, cy, tempId, avartar) {

                        @Override
                        public void openBaseMenu(Player player) {
                            if (canOpenNpc(player)) {
                                InventoryService.gI().sendItemBox(player);
                                InventoryService.gI().openBox(player);
                            }
                        }

                        @Override
                        public void confirmMenu(Player player, int select) {
                            if (canOpenNpc(player)) {

                            }
                        }
                    };
                    break;
                case ConstNpc.DAU_THAN:
                    npc = new Npc(mapId, status, cx, cy, tempId, avartar) {
                        @Override
                        public void openBaseMenu(Player player) {
                            if (canOpenNpc(player)) {
                                player.magicTree.openMenuTree();
                            }
                        }

                        @Override
                        public void confirmMenu(Player player, int select) {
                            if (canOpenNpc(player)) {
                                TaskService.gI().checkDoneTaskConfirmMenuNpc(player, this, (byte) select);
                                switch (player.iDMark.getIndexMenu()) {
                                    case ConstNpc.MAGIC_TREE_NON_UPGRADE_LEFT_PEA:
                                        if (select == 0) {
                                            player.magicTree.harvestPea();
                                        } else if (select == 1) {
                                            if (player.magicTree.level == 10) {
                                                player.magicTree.fastRespawnPea();
                                            } else {
                                                player.magicTree.showConfirmUpgradeMagicTree();
                                            }
                                        } else if (select == 2) {
                                            player.magicTree.fastRespawnPea();
                                        }
                                        break;
                                    case ConstNpc.MAGIC_TREE_NON_UPGRADE_FULL_PEA:
                                        if (select == 0) {
                                            player.magicTree.harvestPea();
                                        } else if (select == 1) {
                                            player.magicTree.showConfirmUpgradeMagicTree();
                                        }
                                        break;
                                    case ConstNpc.MAGIC_TREE_CONFIRM_UPGRADE:
                                        if (select == 0) {
                                            player.magicTree.upgradeMagicTree();
                                        }
                                        break;
                                    case ConstNpc.MAGIC_TREE_UPGRADE:
                                        if (select == 0) {
                                            player.magicTree.fastUpgradeMagicTree();
                                        } else if (select == 1) {
                                            player.magicTree.showConfirmUnuppgradeMagicTree();
                                        }
                                        break;
                                    case ConstNpc.MAGIC_TREE_CONFIRM_UNUPGRADE:
                                        if (select == 0) {
                                            player.magicTree.unupgradeMagicTree();
                                        }
                                        break;
                                }
                            }
                        }
                    };
                    break;
                case ConstNpc.CALICK:
                    npc = new Npc(mapId, status, cx, cy, tempId, avartar) {

                        private void changeMap_CaLich() {
                            if (this.mapId != 102) {
                                this.map.npcs.remove(this);
                                Map map = MapService.gI().getMapForCalich();
                                this.mapId = map.mapId;
                                this.cx = Util.nextInt(100, map.mapWidth - 100);
                                this.cy = map.yPhysicInTop(this.cx, 0);
                                this.map = map;
                                this.map.npcs.add(this);
                            }
                        }

                        @Override
                        public void openBaseMenu(Player player) {
                            player.iDMark.setIndexMenu(ConstNpc.BASE_MENU);
                            if (!TaskService.gI().checkDoneTaskTalkNpc(player, this)) {
                            }
                            if (TaskService.gI().getIdTask(player) < ConstTask.TASK_20_0) {
                                Service.getInstance().hideWaitDialog(player);
                                Service.getInstance().sendThongBao(player, "Kh√¥ng th·ªÉ th·ª±c hi·ªán");
                                return;
                            }
                            if (this.mapId == 102) {
                                this.createOtherMenu(player, ConstNpc.BASE_MENU, "Ch√†o ch√∫, ch√°u c√≥ th·ªÉ gi√∫p g√¨?",
                                        "K·ªÉ\nChuy·ªán", "Quay v·ªÅ\nQu√° kh·ª©");
                            } else {
                                changeMap_CaLich();
                                this.createOtherMenu(player, ConstNpc.BASE_MENU, "Ch√†o ch√∫, ch√°u c√≥ th·ªÉ gi√∫p g√¨?",
                                        "K·ªÉ\nChuy·ªán", "ƒêi ƒë·∫øn\nT∆∞∆°ng lai", "T·ª´ ch·ªëi");
                            }
                        }

                        @Override
                        public void confirmMenu(Player player, int select) {
                            if (this.mapId == 102) {
                                if (player.iDMark.isBaseMenu()) {
                                    if (select == 0) {
                                        // k·ªÉ chuy·ªán
                                        NpcService.gI().createTutorial(player, this.avartar, ConstNpc.CALICK_KE_CHUYEN);
                                    } else if (select == 1) {
                                        // v·ªÅ qu√° kh·ª©
                                        ChangeMapService.gI().goToQuaKhu(player);
                                    }
                                }
                            } else if (player.iDMark.isBaseMenu()) {
                                if (select == 0) {
                                    // k·ªÉ chuy·ªán
                                    NpcService.gI().createTutorial(player, this.avartar, ConstNpc.CALICK_KE_CHUYEN);
                                } else if (select == 1) {
                                    // ƒë·∫øn t∆∞∆°ng lai
                                    // changeMap();
                                    if (TaskService.gI().getIdTask(player) >= ConstTask.TASK_20_0) {
                                        ChangeMapService.gI().goToTuongLai(player);
                                    }
                                } else {
                                    Service.getInstance().sendThongBao(player, "Kh√¥ng th·ªÉ th·ª±c hi·ªán");
                                }
                            }
                        }
                    };
                    break;

                case ConstNpc.JACO:
                    npc = new Npc(mapId, status, cx, cy, tempId, avartar) {

                        @Override
                        public void openBaseMenu(Player player) {
                            player.iDMark.setIndexMenu(ConstNpc.BASE_MENU);
                            if (this.mapId == 24) {
                                this.createOtherMenu(player, ConstNpc.BASE_MENU, "G√¥ T√™n, Cal√≠ch v√† Monaka ƒëang g·∫∑p chuy·ªán ·ªü h√†nh tinh Potaufeu\nH√£y ƒë·∫øn ƒë√≥ ngay", "ƒê·∫øn\nPotaufeu", "T·ª´ ch·ªëi");
                            } else {
                                this.createOtherMenu(player, ConstNpc.BASE_MENU, "T√†u V≈© Tr·ª• c·ªßa ta c√≥ th·ªÉ ƒë∆∞a c·∫≠u ƒë·∫øn h√†nh tinh kh√°c ch·ªâ trong 3 gi√¢y. C·∫≠u mu·ªën ƒëi ƒë√¢u?", "ƒê·∫øn\nTr√°i ƒê·∫•t", "ƒê·∫øn\nNam·∫øc", "ƒê·∫øn\nXayda", "T·ª´ ch·ªëi");
                            }
                        }

                        @Override
                        public void confirmMenu(Player player, int select) {
                            if (canOpenNpc(player)) {
                                if (this.mapId == 24) {
                                    if (player.iDMark.isBaseMenu()) {
                                        if (select == 0) {
                                            // ƒë·∫øn potaufeu
                                            ChangeMapService.gI().goToPotaufeu(player);
                                        }
                                    }
                                } else if (this.mapId == 139) {
                                    if (player.iDMark.isBaseMenu()) {
                                        switch (select) {
                                            case 0:
                                                ChangeMapService.gI().changeMapBySpaceShip(player, 24, -1, -1);
                                                break;
                                            case 1:
                                                ChangeMapService.gI().changeMapBySpaceShip(player, 25, -1, -1);
                                                break;
                                            case 2:
                                                ChangeMapService.gI().changeMapBySpaceShip(player, 26, -1, -1);
                                                break;
                                        }
                                    }
                                }
                            }
                        }
                    };
                    break;

                case ConstNpc.POTAGE:
                    npc = new Npc(mapId, status, cx, cy, tempId, avartar) {

                        @Override
                        public void openBaseMenu(Player player) {
                            player.iDMark.setIndexMenu(ConstNpc.BASE_MENU);
                            this.createOtherMenu(player, ConstNpc.BASE_MENU, "H√£y gi√∫p ta ƒë√°nh b·∫°i b·∫£n sao\nNg∆∞∆°i ch·ªâ c√≥ 5 ph√∫t ƒë·ªÉ h·∫° h·∫Øn\nPh·∫ßn th∆∞·ªüng cho ng∆∞∆°i l√† 1 b√¨nh Commeson",
                                    "H∆∞·ªõng\nd·∫´n\nth√™m", "OK", "T·ª´ ch·ªëi");
                        }

                        @Override
                        public void confirmMenu(Player player, int select) {
                            if (canOpenNpc(player)) {
                                if (player.iDMark.isBaseMenu()) {
                                    switch (select) {
                                        case 0:
                                            NpcService.gI().createTutorial(player, avartar, "Th·ª© b·ªã phong ·∫•n t·∫°i ƒë√¢y l√† v≈© kh√≠ c√≥ t√™n Commeson\b"
                                                    + "ƒë∆∞·ª£c t·∫°o ra nh·∫±m b·∫£o v·ªá cho h√†nh tinh Potaufeu\b"
                                                    + "Tuy nhi√™n n√≥ ƒë√£ t√†n ph√° m·ªçi th·ª© trong qu√° kh·ª©\n"
                                                    + "Khi·∫øn c∆∞ d√¢n Potaufeu ni√™m phong n√≥ v·ªõi c√°i gi√°\b ph·∫£i tr·∫£ l√† m·∫°ng s·ªëng c·ªßa h·ªç\b Ta, Potage l√† ng∆∞·ªùi duy nh·∫•t s·ªëng s√≥t\b"
                                                    + "v√† ta ƒë√£ b·∫£o v·ªá phong ·∫•n h∆°n m·ªôt trƒÉm nƒÉm.\n"
                                                    + "Tuy nhi√™n b·ªçn x√¢m l∆∞·ª£c Gryll ƒë√£ ƒë·∫øn v√† gi·∫£i tho√°t Commeson\b"
                                                    + "H√£y gi√∫p ta ti√™u di·ªát b·∫£n sao do Commeson t·∫°o ra\b"
                                                    + "v√† ni√™m phong Commeson m·ªôt l·∫ßn v√† m√£i m√£i");
                                            break;
                                        case 1:// g·ªçi nh√¢n b·∫£n
                                            if (player.zone.getBosses().size() != 0) {
                                                this.createOtherMenu(player, 251003, "ƒêang c√≥ 1 nh√¢n b·∫£n c·ªßa " + player.zone.getBosses().get(0).name + " h√£y ch·ªù k·∫øt qu·∫£ tr·∫≠n ƒë·∫•u", "OK");
                                                return;
                                            }
                                            if (!player.itemTime.doneDanhNhanBan) {
                                                player.itemTime.isDanhNhanBan = true;
                                                player.itemTime.lasttimeDanhNhanBan = System.currentTimeMillis();

                                                ItemTimeService.gI().sendAllItemTime(player);
                                                List<Skill> skillList = new ArrayList<>();
                                                for (byte i = 0; i < player.playerSkill.skills.size(); i++) {
                                                    Skill skill = player.playerSkill.skills.get(i);
                                                    if (skill.point > 0) {
                                                        skillList.add(skill);
                                                    }
                                                }
                                                int[][] skillTemp = new int[skillList.size()][5];
                                                for (byte i = 0; i < skillList.size(); i++) {
                                                    Skill skill = skillList.get(i);
                                                    if (skill.point > 0) {
                                                        skillTemp[i][0] = skill.template.id;
                                                        skillTemp[i][1] = skill.point;
                                                        skillTemp[i][2] = skill.coolDown;
                                                    }
                                                }

                                                BossData bossdataa = BossData.builder()
                                                        .name(player.name)
                                                        .gender(player.gender)
                                                        .typeDame(Boss.DAME_NORMAL)
                                                        .typeHp(Boss.HP_NORMAL)
                                                        .dame(player.nPoint.hpMax / 10)
                                                        .hp(new int[][]{{player.nPoint.dame * 10}})
                                                        .outfit(new short[]{player.getHead(), player.getBody(), player.getLeg(), player.getFlagBag(), player.getAura(), player.getEffFront()})
                                                        .skillTemp(skillTemp)
                                                        .secondsRest(BossData._0_GIAY)
                                                        .build();

                                                try {
                                                    Boss_NhanBan dt = new Boss_NhanBan(Util.createIdDuongTank((int) ((byte) player.id)), bossdataa, player.zone, player.location.x, player.location.y, (int) player.id);
                                                } catch (Exception ex) {
                                                    Logger.getLogger(NpcFactory.class.getName()).log(Level.SEVERE, null, ex);
                                                }
                                                break;
                                            } else {
                                                Service.getInstance().sendThongBao(player, "H√£y ch·ªù ƒë·∫øn ng√†y mai");
                                            }
                                    }
                                }
                            }
                        }
                    };
                    break;

                case ConstNpc.THAN_MEO_KARIN:
                    npc = new Npc(mapId, status, cx, cy, tempId, avartar) {
                        @Override
                        public void openBaseMenu(Player player) {
                            if (canOpenNpc(player)) {
                                if (mapId == ConstMap.THAP_KARIN) {
                                    player.thachDauNPC = 0;
                                    if (player.zone instanceof ZSnakeRoad) {
                                        this.createOtherMenu(player, ConstNpc.BASE_MENU,
                                                "H√£y c·∫ßm l·∫•y hai h·∫°t ƒë·∫≠u cu·ªëi c√πng ·ªü ƒë√¢y\nC·ªë gi·ªØ m√¨nh nh√© "
                                                + player.name,
                                                "C·∫£m ∆°n\ns∆∞ ph·ª•");
                                    } else if (!TaskService.gI().checkDoneTaskTalkNpc(player, this)) {
                                        if (player.doneThachDauThanMeo == 0) {
                                            this.createOtherMenu(player, ConstNpc.THACH_DAU_THAN_MEO, "Mu·ªën chi·∫øn th·∫Øng T√†u P·∫£y P·∫£y ph·∫£i ƒë√°nh b·∫°i ƒë∆∞·ª£c ta ƒë√£", "ƒêƒÉng k√Ω\n t·∫≠p\n t·ª± ƒë·ªông", "Nhi·ªám v·ª•", "T·∫≠p luy·ªán\n v·ªõi\n Th·∫ßn M√®o", "Th√°ch ƒë·∫•u\nTh·∫ßn M√®o");
                                        } else {
                                            if (player.doneThachDauYanjiro == 1) {
                                                this.createOtherMenu(player, ConstNpc.BASE_MENU,
                                                        "Con h√£y bay theo c√¢y G·∫≠y Nh∆∞ √ù tr√™n ƒë·ªânh th√°p ƒë·ªÉ ƒë·∫øn Th·∫ßn ƒêi·ªán g·∫∑p Th∆∞·ª£ng ƒë·∫ø\nCon r·∫•t x·ª©ng ƒë√°ng ƒë·ªÉ l√†m ƒë·ªá t·ª≠ √¥ng ·∫•y.", "ƒêƒÉng k√Ω\n t·∫≠p\n t·ª± ƒë·ªông", "T·∫≠p luy·ªán\n v·ªõi\n Th·∫ßn M√®o", "T·∫≠p luy·ªán\n v·ªõi\n Yajiro");
                                            } else {
                                                this.createOtherMenu(player, ConstNpc.THACH_DAU_YAJIRO,
                                                        "T·ª´ gi·ªù Yajir√¥ s·∫Ω luy·ªán t·∫≠p c√πng ng∆∞∆°i. Yajir√¥ ƒë√£ t·ª´ng l√™n ƒë√¢y t·∫≠p luy·ªán v√† b√¢y gi·ªù h·∫Øn m·∫°nh h∆°n ta ƒë·∫•y", "ƒêƒÉng k√Ω\n t·∫≠p\n t·ª± ƒë·ªông", "T·∫≠p luy·ªán\n v·ªõi\n Yajir√¥", "Th√°ch ƒë·∫•u\nYajir√¥");
                                            }
                                        }
                                    }
                                }
                            }
                        }

                        @Override
                        public void confirmMenu(Player player, int select) {
                            if (canOpenNpc(player)) {
                                Boss boss = BossManager.gI().getBossById((int) ((int) -251003 - player.id) - 300000);
                                if (mapId == ConstMap.THAP_KARIN) {
                                    switch (player.iDMark.getIndexMenu()) {
                                        case ConstNpc.BASE_MENU:
                                            if (player.zone instanceof ZSnakeRoad) {
                                                switch (select) {
                                                    case 0:
                                                        player.setInteractWithKarin(true);
                                                        Service.getInstance().sendThongBao(player,
                                                                "H√£y mau bay xu·ªëng ch√¢n th√°p Karin");
                                                        break;
                                                }
                                            } else {
                                                switch (select) {
                                                    case 1: // t·∫≠p luy·ªán v·ªõi Th·∫ßn m√®o
                                                        createOtherMenu(player, ConstNpc.COFIRM_LUYEN_TAP_THAN_MEO, "Con c√≥ ch·∫Øc ch·∫Øn mu·ªën t·∫≠p luy·ªán ?\nT·∫≠p luy·ªán v·ªõi ta s·∫Ω tƒÉng 20 s·ª©c m·∫°nh m·ªói ph√∫t", "ƒê·ªìng √Ω\nluy·ªán t·∫≠p", "Kh√¥ng\nƒë·ªìng √Ω");
                                                        break;
                                                    case 2: // t·∫≠p luy·ªán v·ªõi yajir√¥
                                                        createOtherMenu(player, ConstNpc.COFIRM_LUYEN_TAP_YAJIRO, "Con c√≥ ch·∫Øc ch·∫Øn mu·ªën t·∫≠p luy·ªán ?\nT·∫≠p luy·ªán v·ªõi Yajir√¥ s·∫Ω tƒÉng 40 s·ª©c m·∫°nh m·ªói ph√∫t", "ƒê·ªìng √Ω\nluy·ªán t·∫≠p", "Kh√¥ng\nƒë·ªìng √Ω");
                                                        break;
                                                }
                                            }
                                            break;
                                        case ConstNpc.COFIRM_LUYEN_TAP_THAN_MEO:
                                            switch (select) {
                                                case 0:

                                                    ScheduledExecutorService scheduler = Executors.newSingleThreadScheduledExecutor();
                                                    Runnable task = () -> {
                                                        hide_npc(player, 18, 0);
                                                        scheduler.shutdown();
                                                    };
                                                    scheduler.schedule(task, 1, TimeUnit.SECONDS);

                                                    try {
                                                        Boss_ThanMeo dt = new Boss_ThanMeo(Util.createIdDuongTank((int) ((byte) player.id)), BossData.THAN_MEO, player.zone, this.cx, this.cy, (int) player.id);
                                                    } catch (Exception ex) {
                                                        Logger.getLogger(NpcFactory.class.getName()).log(Level.SEVERE, null, ex);
                                                    }
                                                    PlayerService.gI().changeAndSendTypePK(player, ConstPlayer.PK_PVP);
                                                    player.zone.load_Me_To_Another(player);
                                                    break;
                                                default:
                                                    break;
                                            }
                                            break;
                                        case ConstNpc.COFIRM_LUYEN_TAP_YAJIRO:
                                            switch (select) {
                                                case 0:
                                                    player.activeYajiro = 1;
                                                    PlayerService.gI().changeAndSendTypePK(boss, ConstPlayer.PK_PVP);
                                                    PlayerService.gI().changeAndSendTypePK(player, ConstPlayer.PK_PVP);
                                                    break;
                                                default:
                                                    break;
                                            }
                                            break;
                                        case ConstNpc.THACH_DAU_THAN_MEO:
                                            switch (select) {
                                                case 2: // luy·ªán t·∫≠p v·ªõi th·∫ßn m√®o
                                                    createOtherMenu(player, ConstNpc.COFIRM_LUYEN_TAP_THAN_MEO, "Con c√≥ ch·∫Øc ch·∫Øn mu·ªën t·∫≠p luy·ªán ?\nT·∫≠p luy·ªán v·ªõi ta s·∫Ω tƒÉng 20 s·ª©c m·∫°nh m·ªói ph√∫t", "ƒê·ªìng √Ω\nluy·ªán t·∫≠p", "Kh√¥ng\nƒë·ªìng √Ω");
                                                    break;
                                                case 3:
                                                    createOtherMenu(player, ConstNpc.COFIRM_THACH_DAU_THAN_MEO, "Con c√≥ ch·∫Øc ch·∫Øn mu·ªën th√°ch ƒë·∫•u ?\n"
                                                            + "N·∫øu th·∫Øng ta s·∫Ω ƒë∆∞·ª£c t·∫≠p v·ªõi Yajir√¥, tƒÉng 40 s·ª©c m·∫°nh m·ªói ph√∫t", "ƒê·ªìng √Ω\ngiao ƒë·∫•u", "Kh√¥ng\nƒë·ªìng √Ω");
                                                    break;
                                            }
                                            break;
                                        case ConstNpc.COFIRM_THACH_DAU_THAN_MEO:
                                            switch (select) {
                                                case 0:
                                                    try {
                                                    Boss_ThanMeo dt = new Boss_ThanMeo(Util.createIdDuongTank((int) ((byte) player.id)), BossData.THAN_MEO, player.zone, this.cx, this.cy, (int) player.id);
                                                } catch (Exception ex) {
                                                    Logger.getLogger(NpcFactory.class.getName()).log(Level.SEVERE, null, ex);
                                                }

                                                ScheduledExecutorService scheduler = Executors.newSingleThreadScheduledExecutor();
                                                Runnable task = () -> {
                                                    hide_npc(player, 18, 0);
                                                    scheduler.shutdown();
                                                };
                                                scheduler.schedule(task, 1, TimeUnit.SECONDS);

                                                PlayerService.gI().changeAndSendTypePK(player, ConstPlayer.PK_PVP);
                                                player.thachDauNPC = 1;
                                                player.zone.load_Me_To_Another(player);
                                                break;
                                                default:
                                                    break;
                                            }
                                            break;
                                        case ConstNpc.THACH_DAU_YAJIRO:
                                            switch (select) {
                                                case 1:// luy·ªán t·∫≠p v·ªõi Yajir√¥
                                                    createOtherMenu(player, ConstNpc.COFIRM_LUYEN_TAP_YAJIRO, "Con c√≥ ch·∫Øc ch·∫Øn mu·ªën t·∫≠p luy·ªán ?\nT·∫≠p luy·ªán v·ªõi Yajir√¥ s·∫Ω tƒÉng 40 s·ª©c m·∫°nh m·ªói ph√∫t", "ƒê·ªìng √Ω\nluy·ªán t·∫≠p", "Kh√¥ng\nƒë·ªìng √Ω");
                                                    break;
                                                case 2:// th√°ch ƒë·∫•u v·ªõi Yajir√¥
                                                    createOtherMenu(player, ConstNpc.COFIRM_THACH_DAU_YAJIRO, "Con c√≥ ch·∫Øc ch·∫Øn mu·ªën th√°ch ƒë·∫•u ?\n"
                                                            + "N·∫øu th·∫Øng ƒë∆∞·ª£c Yajir√¥, con s·∫Ω ƒë∆∞·ª£c h·ªçc v√µ v·ªõi ng∆∞·ªùi m·∫°nh h∆°n ƒë·ªÉ tƒÉng ƒë·∫øn 80 s·ª©c m·∫°nh m·ªói ph√∫t", "ƒê·ªìng √Ω\ngiao ƒë·∫•u", "Kh√¥ng\nƒë·ªìng √Ω");
                                                    break;
                                            }
                                        case ConstNpc.COFIRM_THACH_DAU_YAJIRO:
                                            switch (select) {
                                                case 0:
                                                    player.activeYajiro = 1;
                                                    PlayerService.gI().changeAndSendTypePK(boss, ConstPlayer.PK_PVP);
                                                    PlayerService.gI().changeAndSendTypePK(player, ConstPlayer.PK_PVP);
                                                    player.thachDauNPC = 1;
                                                    break;
                                                default:
                                                    break;
                                            }
                                            break;
                                    }
                                }
                            }
                        }
                    };
                    break;

                case ConstNpc.THUONG_DE:
                    npc = new Npc(mapId, status, cx, cy, tempId, avartar) {

                        @Override
                        public void openBaseMenu(Player player) {
                            if (canOpenNpc(player)) {
                                if (this.mapId == 45) {
                                    if (player.doneThachDauPoPo == 0) {
                                        this.createOtherMenu(player, ConstNpc.THACH_DAU_POPO, "P√¥p√¥ l√† ƒë·ªá t·ª≠ c·ªßa ta, luy·ªán t·∫≠p v·ªõi P√¥p√¥ con s·∫Ω c√≥ th√™m nhi·ªÅu kinh nghi·ªám ƒë√°nh b·∫°i ƒë∆∞·ª£c P√¥p√¥ ta s·∫Ω d·∫°y v√µ c√¥ng cho con", "ƒêƒÉng k√Ω\nt·∫≠p\nt·ª± ƒë·ªông", "T·∫≠p luy·ªán\nv·ªõi\nMr.P√¥p√¥", "Th√°ch ƒë·∫•u\nMr.P√¥p√¥", "Quay ng·ªçc\nmay m·∫Øn");
                                    }
                                    if (player.doneThachDauPoPo == 1 && player.doneThachDauThuongDe == 0) {
                                        this.createOtherMenu(player, ConstNpc.THACH_DAU_THUONG_DE, "T·ª´ nay con s·∫Ω l√† ƒë·ªá t·ª≠ c·ªßa ta. Ta s·∫Ω truy·ªÅn cho con t·∫•t c·∫£ tuy·ªát kƒ©", "ƒêƒÉng k√Ω\nt·∫≠p\nT·ª± ƒë·ªông", "T·∫≠p luy·ªán\nv·ªõi\nTh∆∞·ª£ng ƒê·∫ø", "Th√°ch ƒë·∫•u\nTh∆∞·ª£ng ƒê·∫ø", "Quay ng·ªçc\nMay m·∫Øn");
                                    }
                                    if (player.doneThachDauPoPo == 1 && player.doneThachDauThuongDe == 1) {
                                    this.createOtherMenu(player, ConstNpc.BASE_MENU, "Con ƒë√£ m·∫°nh h∆°n ta, ta s·∫Ω ch·ªâ ƒë∆∞·ªùng cho con ƒë·∫øn Kaio ƒë·ªÉ g·∫∑p th·∫ßn V≈©\nTr·ª• Ph∆∞∆°ng B·∫Øc\nNg√†i l√† th·∫ßn cai qu·∫£n v≈© tr·ª• n√†y, h√£y theo ng√†i ·∫•y h·ªçc v√µ c√¥ng",
                                            "ƒêƒÉng k√Ω\nt·∫≠p\nt·ª± ƒë·ªông", "T·∫≠p luy·ªán\nv·ªõi\nMr.P√¥P√¥", "T·∫≠p luy·ªán\nv·ªõi\nTh∆∞·ª£ng ƒê·∫ø", "ƒê·∫øn\nKaio", "Quay ng·ªçc\nMay m·∫Øn");
                                    }
                                } else if (player.zone instanceof ZSnakeRoad) {
                                    if (mapId == ConstMap.CON_DUONG_RAN_DOC) {
                                        this.createOtherMenu(player, ConstNpc.BASE_MENU, "H√£y l·∫Øm l·∫•y tay ta mau",
                                                "V·ªÅ th·∫ßn ƒëi·ªán");
                                    }
                                }
                            }
                        }

                        @Override
                        public void confirmMenu(Player player, int select) {
                            Boss boss = BossManager.gI().getBossById(Util.createIdDuongTank((int) player.id) - 200000);
                            if (canOpenNpc(player)) {
                                if (this.mapId == 45) {
                                    switch (player.iDMark.getIndexMenu()) {
                                        case ConstNpc.BASE_MENU:
                                            switch (select) {
                                                case 0: // ƒêƒÉng k√Ω t·∫≠p t·ª± ƒë·ªông

                                                    break;
                                                case 1: // luy·ªán t·∫≠p v·ªõi popo
                                                    player.activeYajiro = 1;
                                                    PlayerService.gI().changeAndSendTypePK(boss, ConstPlayer.PK_PVP);
                                                    PlayerService.gI().changeAndSendTypePK(player, ConstPlayer.PK_PVP);
                                                    player.thachDauNPC = 1;
                                                    break;
                                                case 2: // t·∫≠p luy·ªán v·ªõi th∆∞·ª£ng ƒë·∫ø
                                                    ChangeMapService.gI().changeMap(player, 49, 0, 384, 440);
                                                    try {
                                                        Boss_ThuongDe dt = new Boss_ThuongDe(Util.createIdDuongTank((int) player.id), BossData.THUONG_DE, player.zone, this.cx, this.cy, (int) player.id);
                                                    } catch (Exception ex) {
                                                        Logger.getLogger(NpcFactory.class.getName()).log(Level.SEVERE, null, ex);
                                                    }
                                                    PlayerService.gI().changeAndSendTypePK(player, ConstPlayer.PK_PVP);
                                                    player.zone.load_Me_To_Another(player);
                                                    break;
                                                case 3: // ƒê·∫øn kaio
                                                    ChangeMapService.gI().changeMapBySpaceShip(player, 48, -1, 354);
                                                    break;
                                                case 4:// V√≤ng quay may m·∫Øn
                                                    this.createOtherMenu(player, ConstNpc.MENU_CHOOSE_LUCKY_ROUND,
                                                            "Con c√≥ th·ªÉ ch·ªçn t·ª´ 1 ƒë·∫øn 7 vi√™n\n"
                                                            + "gi√° m·ªói vi√™n l√† 5 tri·ªáu v√†ng.\n"
                                                            + "∆Øu ti√™n d√πng v√© quay tr∆∞·ªõc.", "R∆∞∆°ng",
                                                            "R∆∞∆°ng ph·ª•\nƒêang c√≥ "
                                                            + (player.inventory.itemsBoxCrackBall.size()
                                                            - InventoryService.gI().getCountEmptyListItem(
                                                                    player.inventory.itemsBoxCrackBall))
                                                            + "\nm√≥n", "ƒê√≥ng");
                                                    break;
                                            }
                                            break;
                                        case ConstNpc.MENU_CHOOSE_LUCKY_ROUND:
                                            switch (select) {
                                                case 0:
                                                    LuckyRoundService.gI().openCrackBallUI(player,
                                                            LuckyRoundService.USING_GOLD);
                                                    break;
                                                case 1:
                                                    ShopService.gI().openBoxItemLuckyRound(player);
                                                    break;
                                            }
                                            break;
                                        case ConstNpc.THACH_DAU_POPO:
                                            switch (select) {
                                                case 0:// ƒëƒÉng k√Ω t·∫≠p luy·ªán t·ª± ƒë·ªông

                                                    break;
                                                case 1:// luy·ªán t·∫≠p p√¥p√¥
                                                    player.activeYajiro = 1;
                                                    PlayerService.gI().changeAndSendTypePK(boss, ConstPlayer.PK_PVP);
                                                    PlayerService.gI().changeAndSendTypePK(player, ConstPlayer.PK_PVP);
                                                    player.thachDauNPC = 1;
                                                    break;
                                                case 2:// th√°ch ƒë·∫ßu p√¥p√¥
                                                    player.thachDauNPC = 1;
                                                    player.activeYajiro = 1;
                                                    PlayerService.gI().changeAndSendTypePK(boss, ConstPlayer.PK_PVP);
                                                    PlayerService.gI().changeAndSendTypePK(player, ConstPlayer.PK_PVP);
                                                    player.thachDauNPC = 1;
                                                    break;
                                                case 3:
                                                    this.createOtherMenu(player, ConstNpc.MENU_CHOOSE_LUCKY_ROUND,
                                                            "Con c√≥ th·ªÉ ch·ªçn t·ª´ 1 ƒë·∫øn 7 vi√™n\n"
                                                            + "gi√° m·ªói vi√™n l√† 4 ng·ªçc ho·∫∑c 5 tri·ªáu v√†ng.\n"
                                                            + "∆Øu ti√™n d√πng v√© quay tr∆∞·ªõc.", "V√≤ng quay\nV√†ng", "R∆∞∆°ng",
                                                            "R∆∞∆°ng ph·ª•\nƒêang c√≥ "
                                                            + (player.inventory.itemsBoxCrackBall.size()
                                                            - InventoryService.gI().getCountEmptyListItem(
                                                                    player.inventory.itemsBoxCrackBall))
                                                            + "\nm√≥n", "ƒê√≥ng");
                                                    break;
                                            }
                                            break;
                                        case ConstNpc.THACH_DAU_THUONG_DE:
                                            switch (select) {
                                                case 0:
                                                    break;
                                                case 1:
                                                    ChangeMapService.gI().changeMap(player, 49, 0, 384, 440);
                                                    try {
                                                        Boss_ThuongDe dt = new Boss_ThuongDe(Util.createIdDuongTank((int) player.id), BossData.THUONG_DE, player.zone, this.cx, this.cy, (int) player.id);
                                                    } catch (Exception ex) {
                                                        Logger.getLogger(NpcFactory.class.getName()).log(Level.SEVERE, null, ex);
                                                    }
                                                    PlayerService.gI().changeAndSendTypePK(player, ConstPlayer.PK_PVP);
                                                    player.zone.load_Me_To_Another(player);
                                                    break;
                                                case 2:
                                                    ChangeMapService.gI().changeMap(player, 49, 0, 384, 440);
                                                    player.thachDauNPC = 1;
                                                    try {
                                                        Boss_ThuongDe dt = new Boss_ThuongDe(Util.createIdDuongTank((int) player.id), BossData.THUONG_DE, player.zone, this.cx, this.cy, (int) player.id);
                                                    } catch (Exception ex) {
                                                        Logger.getLogger(NpcFactory.class.getName()).log(Level.SEVERE, null, ex);
                                                    }
                                                    PlayerService.gI().changeAndSendTypePK(player, ConstPlayer.PK_PVP);
                                                    player.zone.load_Me_To_Another(player);
                                                    break;
                                                case 3:
                                                    this.createOtherMenu(player, ConstNpc.MENU_CHOOSE_LUCKY_ROUND,
                                                            "Con c√≥ th·ªÉ ch·ªçn t·ª´ 1 ƒë·∫øn 7 vi√™n\n"
                                                            + "gi√° m·ªói vi√™n l√† 4 ng·ªçc ho·∫∑c 5 tri·ªáu v√†ng.\n"
                                                            + "∆Øu ti√™n d√πng v√© quay tr∆∞·ªõc.", "V√≤ng quay\nV√†ng", "R∆∞∆°ng",
                                                            "R∆∞∆°ng ph·ª•\nƒêang c√≥ "
                                                            + (player.inventory.itemsBoxCrackBall.size()
                                                            - InventoryService.gI().getCountEmptyListItem(
                                                                    player.inventory.itemsBoxCrackBall))
                                                            + "\nm√≥n", "ƒê√≥ng");
                                                    break;
                                            }
                                            break;
                                    }
                                } else if (player.zone instanceof ZSnakeRoad) {
                                    if (mapId == ConstMap.CON_DUONG_RAN_DOC) {
                                        ZSnakeRoad zroad = (ZSnakeRoad) player.zone;
                                        if (zroad.isKilledAll()) {
                                            SnakeRoad road = (SnakeRoad) zroad.getDungeon();
                                            ZSnakeRoad egr = (ZSnakeRoad) road.find(ConstMap.THAN_DIEN);
                                            egr.enter(player, 360, 408);
                                            Service.getInstance().sendThongBao(player, "H√£y xu·ªëng g·∫∑p th·∫ßn m√®o Karin");
                                        } else {
                                            Service.getInstance().sendThongBao(player,
                                                    "H√£y ti√™u di·ªát h·∫øt qu√°i v·∫≠t ·ªü ƒë√¢y!");
                                        }
                                    }
                                }
                            }
                        }
                    };
                    break;
                case ConstNpc.THAN_VU_TRU:
                    npc = new Npc(mapId, status, cx, cy, tempId, avartar) {
                        @Override
                        public void openBaseMenu(Player player) {
                            if (canOpenNpc(player)) {
                                if (this.mapId == 48) {
                                    if (player.doneThachDauBubbles == 0) {
                                        this.createOtherMenu(player, ConstNpc.THACH_DAU_BUBBLES, "Th∆∞·ª£ng ƒë·∫ø ƒë∆∞a ng∆∞∆°i ƒë·∫øn ƒë√¢y, ch·∫Øc mu·ªën ta d·∫°y v√µ ch·ª© g√¨\n"
                                                + "B·∫Øt ƒë∆∞·ª£c con kh·ªâ Bubbles r·ªìi h√£y t√≠nh", "ƒêƒÉng k√Ω\nt·∫≠p\nt·ª± ƒë·ªông", "T·∫≠p luy·ªán\nv·ªõi\nBubbles", "Th√°ch ƒë·∫•u\nBubbles", "Di chuy·ªÉn");
                                    } else if (player.doneThachDauThuongDe == 0) {
                                        this.createOtherMenu(player, ConstNpc.THACH_DAU_THAN_VU_TRU, "Ta l√† Th·∫ßn V≈© Tr·ª• Ph∆∞∆°ng B·∫Øc cai qu·∫£n khu v·ª±c b·∫Øc v≈© tr·ª•\n"
                                                + "n·∫øu th·∫Øng ƒë∆∞·ª£c ta, ng∆∞∆°i s·∫Ω ƒë∆∞·ª£c ƒë·∫øn\n"
                                                + "L√†nh ƒê·∫°i Kaio, n∆°i ·ªü c·ªßa Th·∫ßn Linh", "ƒêƒÉng k√Ω\nt·∫≠p\nt·ª± ƒë·ªông", "T·∫≠p luy·ªán\nv·ªõi\nTh·∫ßn V≈© Tr·ª•", "Th√°ch ƒë·∫•u\nTh·∫ßn V≈© Tr·ª•", "Di chuy·ªÉn");
                                    } else {
                                        this.createOtherMenu(player, ConstNpc.BASE_MENU, "Con m·∫°nh nh·∫•t ph√≠a b·∫Øc v≈© tr·ª• n√†y r·ªìi ƒë·∫•y\n"
                                                + "nh∆∞ng ngo√†i v≈© tr·ª• bao la kia v·∫´n c√≥ nh·ªØng k·∫ª m·∫°nh h∆°n nh√¨u\n"
                                                + "con c·∫ßn ph·∫£i luy·ªán t·∫≠p ƒë·ªÉ m·∫°nh h∆°n n·ªØa", "ƒêƒÉng k√Ω\nt·∫≠p\nt·ª± ƒë·ªông", "T·∫≠p luy·ªán\nv·ªõi\nBubbles", "T·∫≠p luy·ªán\nv·ªõi\nTh·∫ßn V≈© Tr·ª•", "Di chuy·ªÉn");
                                    }
                                }
                            }
                        }

                        @Override
                        public void confirmMenu(Player player, int select) {
                            if (canOpenNpc(player)) {
                                if (this.mapId == 48) {
                                    switch (player.iDMark.getIndexMenu()) {
                                        case ConstNpc.BASE_MENU:
                                            switch (select) {
                                                case 0:// t·∫≠p t·ª± ƒë·ªông

                                                    break;
                                                case 1:// t·∫≠p luy·ªán v·ªõi bubbles

                                                    break;
                                                case 2:// t·∫≠p luy·ªán v·ªõi th·∫ßn v≈© tr·ª•

                                                    break;
                                                case 3:
                                                    this.createOtherMenu(player, ConstNpc.MENU_DI_CHUYEN,
                                                            "Con mu·ªën ƒëi ƒë√¢u?", "V·ªÅ\nth·∫ßn ƒëi·ªán", "Th√°nh ƒë·ªãa\nKaio",
                                                            "Con\nƒë∆∞·ªùng\nr·∫Øn ƒë·ªôc", "T·ª´ ch·ªëi");
                                                    break;
                                            }
                                            break;
                                        case ConstNpc.THACH_DAU_BUBBLES:
                                            switch (select) {
                                                case 0:// t·∫≠p t·ª± ƒë·ªông

                                                    break;
                                                case 1:// t·∫≠p luy·ªán v·ªõi bubbles

                                                    break;
                                                case 2:// t·∫≠p luy·ªán v·ªõi th·∫ßn v≈© tr·ª•

                                                    break;
                                                case 3:
                                                    this.createOtherMenu(player, ConstNpc.MENU_DI_CHUYEN,
                                                            "Con mu·ªën ƒëi ƒë√¢u?", "V·ªÅ\nth·∫ßn ƒëi·ªán", "Th√°nh ƒë·ªãa\nKaio",
                                                            "Con\nƒë∆∞·ªùng\nr·∫Øn ƒë·ªôc", "T·ª´ ch·ªëi");
                                                    break;
                                            }
                                            break;

                                        case ConstNpc.THACH_DAU_THAN_VU_TRU:
                                            switch (select) {
                                                case 0:// t·∫≠p t·ª± ƒë·ªông

                                                    break;
                                                case 1:// t·∫≠p luy·ªán v·ªõi bubbles

                                                    break;
                                                case 2:// t·∫≠p luy·ªán v·ªõi th·∫ßn v≈© tr·ª•

                                                    break;
                                                case 3:
                                                    this.createOtherMenu(player, ConstNpc.MENU_DI_CHUYEN,
                                                            "Con mu·ªën ƒëi ƒë√¢u?", "V·ªÅ\nth·∫ßn ƒëi·ªán", "Th√°nh ƒë·ªãa\nKaio",
                                                            "Con\nƒë∆∞·ªùng\nr·∫Øn ƒë·ªôc", "T·ª´ ch·ªëi");
                                                    break;
                                            }
                                            break;

                                        case ConstNpc.MENU_DI_CHUYEN:
                                            switch (select) {
                                                case 0:
                                                    ChangeMapService.gI().changeMapBySpaceShip(player, 45, -1, 354);
                                                    break;
                                                case 1:
                                                    ChangeMapService.gI().changeMap(player, 50, -1, 318, 336);
                                                    break;
                                                case 2:
                                                    // con ƒë∆∞·ªùng r·∫Øn ƒë·ªôc
                                                    if (player.clan != null) {
                                                        Calendar calendar = Calendar.getInstance();
                                                        int dayOfWeek = calendar.get(Calendar.DAY_OF_WEEK);
                                                    if (!(dayOfWeek == Calendar.MONDAY
                                                            || dayOfWeek == Calendar.WEDNESDAY
                                                            || dayOfWeek == Calendar.FRIDAY
                                                            || dayOfWeek == Calendar.SUNDAY)) {
                                                        Service.getInstance().sendThongBao(player,
                                                                "Ch·ªâ m·ªü v√†o th·ª© 2, 4, 6, CN h√†ng tu·∫ßn!");
                                                        return;
                                                    }
                                                    if (player.clanMember.getNumDateFromJoinTimeToToday() < 2) {
                                                        Service.getInstance().sendThongBao(player,
                                                                "Ph·∫£i tham gia bang h·ªôi √≠t nh·∫•t 2 ng√†y m·ªõi c√≥ th·ªÉ tham gia!");
                                                        return;
                                                    }
                                                        if (player.clan.snakeRoad == null) {
                                                            this.createOtherMenu(player, ConstNpc.MENU_CHON_CAP_DO,
                                                                    "H√£y mau tr·ªü v·ªÅ b·∫±ng con ƒë∆∞·ªùng r·∫Øn ƒë·ªôc\nb·ªçn Xayda ƒë√£ ƒë·∫øn Tr√°i ƒê·∫•t",
                                                                    "Ch·ªçn\nc·∫•p ƒë·ªô", "T·ª´ ch·ªëi");
                                                        } else {
                                                            if (player.clan.snakeRoad.isClosed()) {
                                                                Service.getInstance().sendThongBao(player,
                                                                        "Bang h·ªôi ƒë√£ h·∫øt l∆∞·ª£t tham gia!");
                                                            } else {
                                                                this.createOtherMenu(player,
                                                                        ConstNpc.MENU_ACCEPT_GO_TO_CDRD,
                                                                        "Con c√≥ ch·∫Øc ch·∫Øn mu·ªën ƒë·∫øn con ƒë∆∞·ªùng r·∫Øn ƒë·ªôc c·∫•p ƒë·ªô "
                                                                        + player.clan.snakeRoad.getLevel() + "?",
                                                                        "ƒê·ªìng √Ω", "T·ª´ ch·ªëi");
                                                            }
                                                        }
                                                    } else {
                                                        Service.getInstance().sendThongBao(player,
                                                                "Ch·ªâ d√†nh cho nh·ªØng ng∆∞·ªùi trong bang h·ªôi!");
                                                    }
                                                    break;

                                            }
                                            break;
                                        case ConstNpc.MENU_ACCEPT_GO_TO_CDRD:
                                            switch (select) {
                                                case 0:
                                                    if (player.clan != null) {
                                                        synchronized (player.clan) {
                                                            if (player.clan.snakeRoad == null) {
                                                                int level = Byte.parseByte(
                                                                        String.valueOf(PLAYERID_OBJECT.get(player.id)));
                                                                SnakeRoad road = new SnakeRoad(level);
                                                                ServerManager.gI().getDungeonManager().addDungeon(road);
                                                                road.join(player);
                                                                player.clan.snakeRoad = road;
                                                            } else {
                                                                player.clan.snakeRoad.join(player);
                                                            }
                                                        }
                                                    }
                                                    break;
                                            }
                                            break;
                                        case ConstNpc.MENU_CHON_CAP_DO:
                                            switch (select) {
                                                case 0:
                                                    Input.gI().createFormChooseLevelCDRD(player);
                                                    break;
                                            }
                                            break;
                                    }
                                }
                            }
                        }

                    };
                    break;
                case ConstNpc.TO_SU_KAIO:
                    npc = new Npc(mapId, status, cx, cy, tempId, avartar) {
                        @Override
                        public void openBaseMenu(Player player) {
                            if (canOpenNpc(player)) {
                                if (this.mapId == 50) {
                                   this.createOtherMenu(player, ConstNpc.BASE_MENU,
                                     "Con mu·ªën n√¢ng gi·ªõi h·∫°n s·ª©c m·∫°nh cho ƒë·ªá t·ª≠?", "ƒê·ªá t·ª≠", "ƒê√≥ng",
                                     "T·ª´ ch·ªëi");
                                } else {
                                    super.openBaseMenu(player);
                                }
                            }
                        }

                        @Override
                        public void confirmMenu(Player player, int select) {
                            if (canOpenNpc(player)) {
                                if (this.mapId == 50) {
                                    switch (select) {
                                           case 0:
                                                 if (player.pet != null) {
                                                 if (player.pet.nPoint.limitPower < NPoint.MAX_LIMIT) {
                                                 this.createOtherMenu(player, ConstNpc.OPEN_POWER_PET,
                                                  "Ta s·∫Ω tru·ªÅn nƒÉng l∆∞·ª£ng gi√∫p con m·ªü gi·ªõi h·∫°n s·ª©c m·∫°nh c·ªßa ƒë·ªá t·ª≠ l√™n "
                                                  + Util.numberToMoney(
                                                player.pet.nPoint.getPowerNextLimit()),
                                                  "N√¢ng ngay\n" + Util.numberToMoney(
                                                OpenPowerService.COST_SPEED_OPEN_LIMIT_POWER)
                                                  + " v√†ng",
                                                "ƒê√≥ng");
                                             } else {
                                                 this.createOtherMenu(player, ConstNpc.IGNORE_MENU,
                                                "S·ª©c m·∫°nh c·ªßa ƒë·ªá con ƒë√£ ƒë·∫°t t·ªõi gi·ªõi h·∫°n", "ƒê√≥ng");
                                             }
                                             } else {
                                                 Service.getInstance().sendThongBao(player, "Kh√¥ng th·ªÉ th·ª±c hi·ªán");
                                             }
                                               break;
                                       case 1:
                  //                           CombineServiceNew.gI().openTabCombine(player, CombineServiceNew.UPGRADE_THAN_LINH);
                                               break;
                                                        }
            } else if (player.iDMark.getIndexMenu() == ConstNpc.OPEN_POWER_PET) {
                if (select == 0) {
                    if (player.inventory.gold >= OpenPowerService.COST_SPEED_OPEN_LIMIT_POWER) {
                        if (OpenPowerService.gI().openPowerSpeed(player.pet)) {
                            player.inventory.gold -= OpenPowerService.COST_SPEED_OPEN_LIMIT_POWER;
                            Service.getInstance().sendMoney(player);
                        }
                    } else {
                        Service.getInstance().sendThongBao(player,
                                "B·∫°n kh√¥ng ƒë·ªß v√†ng ƒë·ªÉ m·ªü, c√≤n thi·∫øu " + Util
                                        .numberToMoney((OpenPowerService.COST_SPEED_OPEN_LIMIT_POWER
                                                - player.inventory.gold))
                                + " v√†ng");
                                       }                         
                                    }
                                }
                            }
                        }
                    };
                    break;
                case ConstNpc.DOC_NHAN:
                    npc = new Npc(mapId, status, cx, cy, tempId, avartar) {
                        @Override
                        public void openBaseMenu(Player player) {
                            if (canOpenNpc(player)) {
                                if (this.mapId == 57) {
                                    if (player.zone.isCheckKilledAll(57) && !player.clan.doanhTrai.isHaveDoneDoanhTrai) {
                                        player.clan.doanhTrai.isHaveDoneDoanhTrai = true;
                                        player.clan.doanhTrai.lastTimeDoneDoanhTrai = System.currentTimeMillis();
                                        player.clan.doanhTrai.DropNgocRong();
                                        Service.getInstance().sendThongBao(player, "Tr·∫°i ƒê·ªôc Nh√£n ƒë√£ b·ªã ti√™u di·ªát, b·∫°n c√≥ 5 ph√∫t ƒë·ªÉ t√¨m ki·∫øm vi√™n ng·ªçc r·ªìng 4 sao tr∆∞·ªõc khi phi thuy·ªÅn ƒë·∫øn ƒë√≥n");
                                        NpcService.gI().createTutorial(player, avartar, "Ta ch·ªãu thua, nh∆∞ng c√°c ng∆∞∆°i ƒë·ª´ng c√≥ mong l·∫•y ƒë∆∞·ª£c ng·ªçc c·ªßa ta\b"
                                                + "ta ƒë√£ gi·∫•u ng·ªçc 4 sao v√† 1 ƒë·ªëng 7 sao trong doanh tr·∫°i n√†y\b"
                                                + "C√°c ng∆∞∆°i ch·ªâ c√≥ 5 ph√∫t ƒëi t√¨m, ƒë·ªë c√°c ng∆∞∆°i t√¨m ra hahaha");
                                    } else {
                                        NpcService.gI().createTutorial(player, avartar, "h√£y ti√™u di·ªát h·∫øt qu√°i");
                                    }
                                }
                            }
                        }

                        @Override
                        public void confirmMenu(Player player, int select) {
                        }
                    };
                    break;
                case ConstNpc.KIBIT:
                    npc = new Npc(mapId, status, cx, cy, tempId, avartar) {
                        @Override
                        public void openBaseMenu(Player player) {
                            if (canOpenNpc(player)) {
                                if (this.mapId == 50) {
                                    this.createOtherMenu(player, ConstNpc.BASE_MENU, "Ta c√≥ th·ªÉ gi√∫p g√¨ cho ng∆∞∆°i ?",
                                            "ƒê·∫øn\nKaio", "T·ª´ ch·ªëi");
                                } else {
                                    super.openBaseMenu(player);
                                }
                            }
                        }

                        @Override
                        public void confirmMenu(Player player, int select) {
                            if (canOpenNpc(player)) {
                                if (this.mapId == 50) {
                                    if (player.iDMark.isBaseMenu()) {
                                        switch (select) {
                                            case 0:
                                                ChangeMapService.gI().changeMap(player, 48, -1, 354, 240);
                                                break;
                                        }
                                    }
                                }
                            }
                        }
                    };
                    break;

                case ConstNpc.TRONG_TAI:
                    npc = new Npc(mapId, status, cx, cy, tempId, avartar) {
                        @Override
                        public void openBaseMenu(Player player) {
                            if (canOpenNpc(player)) {
                                if (this.mapId == 113) {
                                    this.createOtherMenu(player, ConstNpc.BASE_MENU, "ƒê·∫°i h·ªôi v√µ thu·∫≠t Si√™u h·∫°ng\ndi·ªÖn ra 24/7 k·ªÉ c·∫£ ng√†y l·ªÖ v√† ch·ªß nh·∫≠t\nH√£y thi ƒë·∫•u ngay ƒë·ªÉ kh·∫≥ng ƒë·ªãnh ƒë·∫≥ng c·∫•p c·ªßa m√¨nh nh√©",
                    "Top 100\nCao th·ªß",
                    "H∆∞·ªõng\nd·∫´n\nth√™m",
                    "∆Øu ti√™n\nƒë·∫•u ngay",
                    "Update b·∫£n sao sao si√™u h·∫°ng",
                    "V·ªÅ\nƒê·∫°i H·ªôi\nV√µ Thu·∫≠t");
                                } else {
                                    super.openBaseMenu(player);
                                }
                            }
                        }

                        @Override
                        public void confirmMenu(Player player, int select) {
                            if (canOpenNpc(player)) {
                                if (this.mapId == 113) {
                                    if (player.iDMark.isBaseMenu()) {
                                        switch (select) {
                                            case 0:
                                                SieuHangService.ShowTop(player, 0);
                                                break;
                                            case 1:
                                                NpcService.gI().createTutorial(player, -1,
                                                "Gi·∫£i ƒë·∫•u th·ªÉ hi·ªán ƒë·∫≥ng c·∫•p th·ª±c s·ª±\bC√°c tr·∫≠n ƒë·∫•u di·ªÖn ra li√™n t·ª•c b·∫•t k·ªÉ ng√†y ƒë√™m\bB·∫°n h√£y tham gia thi ƒë·∫•u ƒë·ªÉ n√¢ng h·∫°ng\bv√† nh·∫≠n gi·∫£i th∆∞·ªüng kh·ªßng nh√©\nC∆° c·∫•u gi·∫£i th∆∞·ªüng nh∆∞ sau\b(ch·ªët v√† trao gi·∫£i ng·∫´u nhi√™n t·ª´ 20h-23h m·ªói ng√†y)\bTop 1 th∆∞·ªüng 100 ng·ªçc\bTop 2-10 th∆∞·ªüng 20 ng·ªçc\bTop 11-100 th∆∞·ªüng 5 ng·ªçc\bTop 101-1000 th∆∞·ªüng 1 ng·ªçc\nM·ªói ng√†y c√°c b·∫°n ƒë∆∞·ª£c t·∫∑ng 1 v√© tham d·ª± mi·ªÖn ph√≠\b(t√≠ch l≈©y t·ªëi ƒëa 3 v√©) khi thua s·∫Ω m·∫•t ƒëi 1 v√©\bKhi h·∫øt v√© b·∫°n ph·∫£i tr·∫£ 1 ng·ªçc ƒë·ªÉ ƒë·∫•u ti·∫øp\b(tr·ª´ ng·ªçc khi tr·∫≠n ƒë·∫•u k·∫øt th√∫c)\nB·∫°n kh√¥ng th·ªÉ thi ƒë·∫•u v·ªõi ƒë·∫•u th·ªß\bc√≥ h·∫°ng th·∫•p h∆°n m√¨nh\bCh√∫c b·∫°n may m·∫Øn, ch√†o ƒëo√†n k·∫øt v√† quy·∫øt th·∫Øng");
                                                break;
                                            case 2: 
                                                Service.getInstance().sendThongBao(player, "vui l√≤ng ƒë·ª£i");
                                                SieuHangService.startChallenge(player);
                                                break;
                                            case 3: 
                                                 SieuHangManager.CreateClone(player);
                                                 break;
                                            case 4: 
                                                 ChangeMapService.gI().changeMapNonSpaceship(player, ConstMap.DAI_HOI_VO_THUAT, player.location.x, 336);
                                                  break;
                                        }
                                    }
                                }
                            }
                        }
                    };
                    break;
                case ConstNpc.OSIN:
                    npc = new Npc(mapId, status, cx, cy, tempId, avartar) {
                        @Override
                        public void openBaseMenu(Player player) {
                            if (canOpenNpc(player)) {
                                if (this.mapId == 50) {
                                    this.createOtherMenu(player, ConstNpc.BASE_MENU, "Ta c√≥ th·ªÉ gi√∫p g√¨ cho ng∆∞∆°i ?",
                                            "ƒê·∫øn\nKaio", "ƒê·∫øn\nh√†nh tinh\nBill", "T·ª´ ch·ªëi");
                                } else if (this.mapId == 52) {
                                    if (MabuWar.gI().isTimeMabuWar() || MabuWar14h.gI().isTimeMabuWar()) {
                                        this.createOtherMenu(player, ConstNpc.BASE_MENU,
                                                "B√¢y gi·ªù t√¥i s·∫Ω b√≠ m·∫≠t...\n ƒëu·ªïi theo 2 t√™n ƒë·ªì t·ªÉ... \n"
                                                + "Qu√Ω v·ªã n√†o mu·ªën ƒëi theo th√¨ xin m·ªùi !",
                                                "Ok", "Ch√™");
                                    } else {
                                        this.createOtherMenu(player, ConstNpc.BASE_MENU,
                                                "V√†o l√∫c 12h t√¥i s·∫Ω b√≠ m·∫≠t...\n ƒëu·ªïi theo 2 t√™n ƒë·ªì t·ªÉ... \n"
                                                + "Qu√Ω v·ªã n√†o mu·ªën ƒëi theo th√¨ xin m·ªùi !",
                                                "Ok");
                                    }
                                } else if (this.mapId == 154) {
                                    this.createOtherMenu(player, ConstNpc.BASE_MENU, "Ta c√≥ th·ªÉ gi√∫p g√¨ cho ng∆∞∆°i ?",
                                            "V·ªÅ th√°nh ƒë·ªãa", "ƒê·∫øn\nh√†nh tinh\nng·ª•c t√π", "T·ª´ ch·ªëi");
                                } else if (this.mapId == 155) {
                                    this.createOtherMenu(player, ConstNpc.BASE_MENU, "Ta c√≥ th·ªÉ gi√∫p g√¨ cho ng∆∞∆°i ?",
                                            "Quay v·ªÅ", "T·ª´ ch·ªëi");
                                } else if (MapService.gI().isMapMabuWar(this.mapId)) {
                                    this.createOtherMenu(player, ConstNpc.BASE_MENU,
                                            "ƒê·ª´ng v·ªôi xem th∆∞·ªùng Babyƒë√¢y,ngay ƒë·∫øn cha h·∫Øn l√† th·∫ßn ma ƒë·∫°o sƒ©\n"
                                            + "Bibiƒë√¢y khi c√≤n s·ªëng c≈©ng ph·∫£i s·ª£ h·∫Øn ƒë·∫•y",
                                            "Gi·∫£i tr·ª´\nph√©p thu·∫≠t\n50Tr V√†ng",
                                            player.zone.map.mapId != 120 ? "Xu·ªëng\nT·∫ßng D∆∞·ªõi" : "R·ªùi\nKh·ªèi ƒë√¢y");
                                } else {
                                    if (MabuWar14h.gI().isTimeMabuWar()) {
                                       createOtherMenu(player, ConstNpc.BASE_MENU, "Ta s·∫Ω ph√π h·ªô cho ng∆∞∆°i b·∫±ng ngu·ªìn s·ª©c m·∫°nh c·ªßa Th·∫ßn Kai√¥\n+1 tri·ªáu HP, +1 tri·ªáu MP, +10k S·ª©c ƒë√°nh\nL∆∞u √Ω: s·ª©c m·∫°nh s·∫Ω bi·∫øn m·∫•t khi ng∆∞∆°i r·ªùi kh·ªèi ƒë√¢y", "Ph√π h·ªô\n55 h·ªìng ng·ªçc", "T·ª´ ch·ªëi", "V·ªÅ\nƒê·∫°i H·ªôi\nV√µ Thu·∫≠t");
                }
                                    super.openBaseMenu(player);
                                }
                            }
                        }

                        @Override
                        public void confirmMenu(Player player, int select) {
                            if (canOpenNpc(player)) {
                                if (this.mapId == 50) {
                                    if (player.iDMark.isBaseMenu()) {
                                        switch (select) {
                                            case 0:
                                                ChangeMapService.gI().changeMap(player, 48, -1, 354, 240);
                                                break;
                                            case 1:
                                                ChangeMapService.gI().changeMap(player, 154, -1, 200, 312);
                                                break;
                                        }
                                    }
                                } else if (this.mapId == 52) {
                                    if (player.iDMark.isBaseMenu()) {
                                        switch (select) {
                                            case 0:
                                                ChangeMapService.gI().changeMap(player, 114, -1, 354, 240);
                                                break;
                                        }
                                    }
                                } else if (this.mapId == 154) {
                                    if (player.iDMark.isBaseMenu()) {
                                        switch (select) {
                                            case 0:
                                                ChangeMapService.gI().changeMap(player, 50, -1, 318, 336);
                                                break;
                                            case 1:
                                                if (!Manager.gI().getGameConfig().isOpenPrisonPlanet()) {
                                                    Service.getInstance().sendThongBao(player,
                                                            "L·ªëi v√†o h√†nh tinh ng·ª•c t√π ch∆∞a m·ªü");
                                                    return;
                                                }
                                                if (player.nPoint.power < 60000000000L) {
                                                    Service.getInstance().sendThongBao(player,
                                                            "Y√™u c·∫ßu t·ªëi thi·∫øu 60t·ª∑ s·ª©c m·∫°nh");
                                                    return;
                                                }
                                                ChangeMapService.gI().changeMap(player, 155, -1, 111, 792);
                                                break;
                                        }
                                    }
                                } else if (this.mapId == 155) {
                                    if (player.iDMark.isBaseMenu()) {
                                        if (select == 0) {
                                            ChangeMapService.gI().changeMap(player, 154, -1, 200, 312);
                                        }
                                    }
                                } else if (MapService.gI().isMapMabuWar(this.mapId)) {
                                    if (player.iDMark.isBaseMenu()) {
                                        switch (select) {
                                            case 0:
                                                if (player.inventory.getGold() >= 50000000) {
                                                    Service.getInstance().changeFlag(player, 9);
                                                    player.inventory.subGold(50000000);

                                                } else {
                                                    Service.getInstance().sendThongBao(player, "Kh√¥ng ƒë·ªß v√†ng");
                                                }
                                                break;
                                            case 1:
                                                if (player.zone.map.mapId == 120) {
                                                    ChangeMapService.gI().changeMapBySpaceShip(player,
                                                            player.gender + 21, -1, 250);
                                                }
                                                if (player.cFlag == 9) {
                                                    if (player.getPowerPoint() >= 20) {
                                                        if (!(player.zone.map.mapId == 119)) {
                                                            int idMapNextFloor = player.zone.map.mapId == 115
                                                                    ? player.zone.map.mapId + 2
                                                                    : player.zone.map.mapId + 1;
                                                            ChangeMapService.gI().changeMap(player, idMapNextFloor, -1,
                                                                    354, 240);
                                                        } else {
                                                            Zone zone = MabuWar.gI().getMapLastFloor(120);
                                                            if (zone != null) {
                                                                ChangeMapService.gI().changeMap(player, zone, 354, 240);
                                                            } else {
                                                                Service.getInstance().sendThongBao(player,
                                                                        "Tr·∫≠n ƒë·∫°i chi·∫øn ƒë√£ k·∫øt th√∫c, t√†u v·∫≠n chuy·ªÉn s·∫Ω ƒë∆∞a b·∫°n v·ªÅ nh√†");
                                                            }
                                                        }
                                                        player.resetPowerPoint();
                                                        player.sendMenuGotoNextFloorMabuWar = false;
                                                        Service.getInstance().sendPowerInfo(player, "%",
                                                                player.getPowerPoint());
                                                        if (Util.isTrue(1, 30)) {
                                                            player.inventory.ruby += 1;
                                                            PlayerService.gI().sendInfoHpMpMoney(player);
                                                            Service.getInstance().sendThongBao(player,
                                                                    "B·∫°n nh·∫≠n ƒë∆∞·ª£c 1 H·ªìng Ng·ªçc");
                                                        } else {
                                                            Service.getInstance().sendThongBao(player,
                                                                    "B·∫°n ƒëen v√¥ c√πng lu√¥n n√™n kh√¥ng nh·∫≠n ƒë∆∞·ª£c g√¨ c·∫£");
                                                        }
                                                    } else {
                                                        this.npcChat(player,
                                                                "Ng∆∞∆°i c·∫ßn c√≥ ƒë·ªß ƒëi·ªÉm ƒë·ªÉ xu·ªëng t·∫ßng ti·∫øp theo");
                                                    }
                                                    break;
                                                } else {
                                                    this.npcChat(player,
                                                            "Ng∆∞∆°i ƒëang theo phe Babiƒë√¢y,H√£y qua b√™n ƒë√≥ m√† th·ªÉ hi·ªán");
                                                }
                                        }
                                    }
                                }
                            }
                        }
                    };
                    break;
                case ConstNpc.BABIDAY:
                    npc = new Npc(mapId, status, cx, cy, tempId, avartar) {
                        @Override
                        public void openBaseMenu(Player player) {
                            if (canOpenNpc(player)) {
                                if (MapService.gI().isMapMabuWar(this.mapId)) {
                                    this.createOtherMenu(player, ConstNpc.BASE_MENU,
                                            "ƒê·ª´ng v·ªôi xem th∆∞·ªùng Babyƒë√¢y,ngay ƒë·∫øn cha h·∫Øn l√† th·∫ßn ma ƒë·∫°o sƒ©\n"
                                            + "Bibiƒë√¢y khi c√≤n s·ªëng c≈©ng ph·∫£i s·ª£ h·∫Øn ƒë·∫•y",
                                            "Y·ªÉm b√πa\n50Tr V√†ng",
                                            player.zone.map.mapId != 120 ? "Xu·ªëng\nT·∫ßng D∆∞·ªõi" : "R·ªùi\nKh·ªèi ƒë√¢y");
                                } else {
                                    super.openBaseMenu(player);
                                }
                            }
                        }

                        @Override
                        public void confirmMenu(Player player, int select) {
                            if (canOpenNpc(player)) {
                                if (MapService.gI().isMapMabuWar(this.mapId)) {
                                    if (player.iDMark.isBaseMenu()) {
                                        switch (select) {
                                            case 0:
                                                if (player.inventory.getGold() >= 50000000) {
                                                    Service.getInstance().changeFlag(player, 10);
                                                    player.inventory.subGold(50000000);
                                                } else {
                                                    Service.getInstance().sendThongBao(player, "Kh√¥ng ƒë·ªß v√†ng");
                                                }
                                                break;
                                            case 1:
                                                if (player.zone.map.mapId == 120) {
                                                    ChangeMapService.gI().changeMapBySpaceShip(player,
                                                            player.gender + 21, -1, 250);
                                                }
                                                if (player.cFlag == 10) {
                                                    if (player.getPowerPoint() >= 20) {
                                                        if (!(player.zone.map.mapId == 119)) {
                                                            int idMapNextFloor = player.zone.map.mapId == 115
                                                                    ? player.zone.map.mapId + 2
                                                                    : player.zone.map.mapId + 1;
                                                            ChangeMapService.gI().changeMap(player, idMapNextFloor, -1,
                                                                    354, 240);
                                                        } else {
                                                            Zone zone = MabuWar.gI().getMapLastFloor(120);
                                                            if (zone != null) {
                                                                ChangeMapService.gI().changeMap(player, zone, 354, 240);
                                                            } else {
                                                                Service.getInstance().sendThongBao(player,
                                                                        "Tr·∫≠n ƒë·∫°i chi·∫øn ƒë√£ k·∫øt th√∫c, t√†u v·∫≠n chuy·ªÉn s·∫Ω ƒë∆∞a b·∫°n v·ªÅ nh√†");
                                                                ChangeMapService.gI().changeMapBySpaceShip(player,
                                                                        player.gender + 21, -1, 250);
                                                            }
                                                        }
                                                        player.resetPowerPoint();
                                                        player.sendMenuGotoNextFloorMabuWar = false;
                                                        Service.getInstance().sendPowerInfo(player, "TL",
                                                                player.getPowerPoint());
                                                        if (Util.isTrue(1, 30)) {
                                                            player.inventory.ruby += 1;
                                                            PlayerService.gI().sendInfoHpMpMoney(player);
                                                            Service.getInstance().sendThongBao(player,
                                                                    "B·∫°n nh·∫≠n ƒë∆∞·ª£c 1 H·ªìng Ng·ªçc");
                                                        } else {
                                                            Service.getInstance().sendThongBao(player,
                                                                    "B·∫°n ƒëen v√¥ c√πng lu√¥n n√™n kh√¥ng nh·∫≠n ƒë∆∞·ª£c g√¨ c·∫£");
                                                        }
                                                    } else {
                                                        this.npcChat(player,
                                                                "Ng∆∞∆°i c·∫ßn c√≥ ƒë·ªß ƒëi·ªÉm ƒë·ªÉ xu·ªëng t·∫ßng ti·∫øp theo");
                                                    }
                                                    break;
                                                } else {
                                                    this.npcChat(player,
                                                            "Ng∆∞∆°i ƒëang theo phe √îsin,H√£y qua b√™n ƒë√≥ m√† th·ªÉ hi·ªán");
                                                }
                                        }
                                    }
                                }
                            }
                        }
                    };
                    break;
                case ConstNpc.LINH_CANH:
                    npc = new Npc(mapId, status, cx, cy, tempId, avartar) {
                        @Override
                        public void openBaseMenu(Player player) {
                            if (canOpenNpc(player)) {
                                if (player.clan == null) {
                                    this.createOtherMenu(player, ConstNpc.MENU_KHONG_CHO_VAO_DT,
                                            "Ch·ªâ ti·∫øp c√°c bang h·ªôi, mi·ªÖn ti·∫øp kh√°ch v√£ng lai", "ƒê√≥ng");
                                }                                 else 
                                                                    if (player.clan.getMembers().size() < 5) {
                                
                                                                    NpcService.gI().createTutorial(player, avartar, "Bang h·ªôi ph·∫£i c√≥ t·ª´ 5 th√†nh vi√™n m·ªõi ƒë∆∞·ª£c tham gia");
                                                                }
                                else {
                                    ClanMember clanMember = player.clan.getClanMember((int) player.id);
                                    int days = (int) (((System.currentTimeMillis() / 1000) - clanMember.joinTime) / 60
                                            / 60 / 24);
                                    if (days < 2) {
                                        NpcService.gI().createTutorial(player, avartar,
                                                "Ch·ªâ nh·ªØng th√†nh vi√™n gia nh·∫≠p bang h·ªôi t·ªëi thi·ªÉu 2 ng√†y m·ªõi c√≥ th·ªÉ tham gia");
                                        return;
                                    }
                                    if (!player.clan.haveGoneDoanhTrai && player.clan.timeOpenDoanhTrai != 0) {
                                        createOtherMenu(player, ConstNpc.MENU_VAO_DT,
                                                "Bang h·ªôi c·ªßa ng∆∞∆°i ƒëang ƒë√°nh tr·∫°i ƒë·ªôc nh√£n\n" + "Th·ªùi gian c√≤n l·∫°i l√† "
                                                + TimeUtil.chuyenDoiTuGiaySangPhut(TimeUtil.getSecondLeft(player.clan.timeOpenDoanhTrai,
                                                        DoanhTrai.TIME_DOANH_TRAI / 1000))
                                                + ". Ng∆∞∆°i c√≥ mu·ªën tham gia kh√¥ng?",
                                                "Tham gia", "Kh√¥ng", "H∆∞·ªõng\nd·∫´n\nth√™m");
                                    } else {
                                        List<Player> plSameClans = new ArrayList<>();
                                        List<Player> playersMap = player.zone.getPlayers();
                                        synchronized (playersMap) {
                                            for (Player pl : playersMap) {
                                                if (!pl.equals(player) && pl.clan != null
                                                        && pl.clan.id == player.clan.id && pl.location.x >= 1285
                                                        && pl.location.x <= 1645) {
                                                    plSameClans.add(pl);
                                                }

                                            }
                                        }
                                        if (plSameClans.size() >= 2) {
                                            if (!player.isAdmin() && player.clanMember.getNumDateFromJoinTimeToToday() < DoanhTrai.DATE_WAIT_FROM_JOIN_CLAN) {
                                                createOtherMenu(player, ConstNpc.MENU_KHONG_CHO_VAO_DT,
                                                        "Bang h·ªôi ch·ªâ cho ph√©p nh·ªØng ng∆∞·ªùi ·ªü trong bang tr√™n 1 ng√†y. H·∫πn ng∆∞∆°i quay l·∫°i v√†o l√∫c kh√°c",
                                                        "OK", "H∆∞·ªõng\nd·∫´n\nth√™m");
                                            } else
                                        if (player.clan.haveGoneDoanhTrai) {
                                            createOtherMenu(player, ConstNpc.MENU_KHONG_CHO_VAO_DT,
                                                    "Bang h·ªôi c·ªßa ng∆∞∆°i ƒë√£ ƒëi tr·∫°i l√∫c "
                                                    + Util.formatTime(player.clan.timeOpenDoanhTrai)
                                                    + " h√¥m nay. Ng∆∞·ªùi m·ªü\n" + "("
                                                    + player.clan.playerOpenDoanhTrai.name
                                                    + "). H·∫πn ng∆∞∆°i quay l·∫°i v√†o ng√†y mai",
                                                    "OK", "H∆∞·ªõng\nd·∫´n\nth√™m");

                                        } else {
                                            createOtherMenu(player, ConstNpc.MENU_CHO_VAO_DT,
                                                    "H√¥m nay bang h·ªôi c·ªßa ng∆∞∆°i ch∆∞a v√†o tr·∫°i l·∫ßn n√†o. Ng∆∞∆°i c√≥ mu·ªën v√†o\n"
                                                    + "kh√¥ng?\nƒê·ªÉ v√†o, ta khuy√™n ng∆∞∆°i n√™n c√≥ 3-4 ng∆∞·ªùi c√πng bang ƒëi c√πng",
                                                    "V√†o\n(mi·ªÖn ph√≠)", "Kh√¥ng", "H∆∞·ªõng\nd·∫´n\nth√™m");
                                        }
                                        } else {
                                            createOtherMenu(player, ConstNpc.MENU_KHONG_CHO_VAO_DT,
                                                    "Ng∆∞∆°i ph·∫£i c√≥ √≠t nh·∫•t 2 ƒë·ªìng ƒë·ªôi c√πng bang ƒë·ª©ng g·∫ßn m·ªõi c√≥ th·ªÉ v√†o "
                                                    + "tuy nhi√™n ta khuy√™n ng∆∞∆°i n√™n ƒëi c√πng v·ªõi 3-4 ng∆∞·ªùi ƒë·ªÉ kh·ªèi ch·∫øt.\n"
                                                    + "Hahaha.",
                                                    "OK", "H∆∞·ªõng\nd·∫´n\nth√™m");
                                        }
                                    }
                                }
                            }
                        }

                        @Override
                        public void confirmMenu(Player player, int select) {
                            if (canOpenNpc(player)) {
                                if (this.mapId == 27) {
                                    switch (player.iDMark.getIndexMenu()) {
                                        case ConstNpc.MENU_KHONG_CHO_VAO_DT:
                                            if (select == 1) {
                                                NpcService.gI().createTutorial(player, this.avartar,
                                                        ConstNpc.HUONG_DAN_DOANH_TRAI);
                                            }
                                            break;
                                        case ConstNpc.MENU_CHO_VAO_DT:
                                            switch (select) {
                                                case 0:
                                                    DoanhTraiService.gI().openDoanhTrai(player);
                                                    break;
                                                case 2:
                                                    NpcService.gI().createTutorial(player, this.avartar,
                                                            ConstNpc.HUONG_DAN_DOANH_TRAI);
                                                    break;
                                            }
                                            break;
                                        case ConstNpc.MENU_VAO_DT:
                                            switch (select) {
                                                case 0:
                                                    ChangeMapService.gI().changeMap(player, 53, 0, 35, 432);
                                                    break;
                                                case 2:
                                                    NpcService.gI().createTutorial(player, this.avartar,
                                                            ConstNpc.HUONG_DAN_DOANH_TRAI);
                                                    break;
                                            }
                                            break;
                                        default:
                                            break;
                                    }
                                }
                            }
                        }
                    };
                    break;
                case ConstNpc.QUA_TRUNG:
                    npc = new Npc(mapId, status, cx, cy, tempId, avartar) {

                        private final int COST_AP_TRUNG_NHANH = 1000000000;

                        @Override
                        public void openBaseMenu(Player player) {
                            if (canOpenNpc(player)) {
                                player.mabuEgg.sendMabuEgg();
                                if (player.mabuEgg.getSecondDone() != 0) {
                                    this.createOtherMenu(player, ConstNpc.CAN_NOT_OPEN_EGG, "H√£y thu th·∫≠p nƒÉng l∆∞·ª£ng\nb·∫±ng c√°ch l√†m nhi·ªám v·ª• h·∫±ng ng√†y\nt·∫°i B√≤ M·ªông t·ª´ m·ª©c ƒë·ªô kh√≥ tr·ªü l√™n\nƒë·ªÉ tr·ª©ng mau n·ªü nh√©.",
                                            "N·ªü tr·ª©ng\nnhanh\n1 t·ª∑ v√†ng", "H·ªßy b·ªè\ntr·ª©ng", "ƒê√≥ng");
                                } else {
                                    this.createOtherMenu(player, ConstNpc.CAN_OPEN_EGG, "H√£y thu th·∫≠p nƒÉng l∆∞·ª£ng\nb·∫±ng c√°ch l√†m nhi·ªám v·ª• h·∫±ng ng√†y\nt·∫°i B√≤ M·ªông t·ª´ m·ª©c ƒë·ªô kh√≥ tr·ªü l√™n\nƒë·ªÉ tr·ª©ng mau n·ªü nh√©.", "N·ªü",
                                            "H·ªßy b·ªè\ntr·ª©ng", "ƒê√≥ng");
                                }
                            }
                        }

                        @Override
                        public void confirmMenu(Player player, int select) {
                            if (canOpenNpc(player)) {
                                switch (player.iDMark.getIndexMenu()) {
                                    case ConstNpc.CAN_NOT_OPEN_EGG:
                                        switch (select) {
                                            case 0:
                                                player.mabuEgg.timeDone = 0;
                                                player.inventory.gold -= 1000000000;
                                                Service.getInstance().sendMoney(player);
                                                Service.getInstance().sendThongBao(player, "ƒê√£ n·ªü tr·ª©ng nhanh th√†nh c√¥ng");
                                                break;
                                            case 1:
                                                this.createOtherMenu(player, ConstNpc.CONFIRM_DESTROY_EGG,
                                                        "B·∫°n c√≥ ch·∫Øc ch·∫Øn mu·ªën h·ªßy b·ªè tr·ª©ng Mab∆∞?", "ƒê·ªìng √Ω", "T·ª´ ch·ªëi");
                                                break;
                                        }
                                        break;
                                    case ConstNpc.CAN_OPEN_EGG:
                                        switch (select) {
                                            case 0:
                                                this.createOtherMenu(player, ConstNpc.CONFIRM_OPEN_EGG,
                                                        "B·∫°n c√≥ ch·∫Øc thay th·∫ø ƒë·ªá t·ª≠ hi·ªán t·∫°i b·∫±ng ƒê·ªá t·ª≠ Mab∆∞",
                                                        "Thay th·∫ø", "T·ª´ ch·ªëi");
                                                break;
                                            case 1:
                                                this.createOtherMenu(player, ConstNpc.CONFIRM_DESTROY_EGG,
                                                        "B·∫°n c√≥ ch·∫Øc ch·∫Øn mu·ªën h·ªßy b·ªè tr·ª©ng Mab∆∞?", "ƒê·ªìng √Ω",
                                                        "T·ª´ ch·ªëi");
                                                break;
                                        }
                                        break;
                                    case ConstNpc.CONFIRM_OPEN_EGG:
                                        switch (select) {
                                            case 0:
                                                player.mabuEgg.openEgg(player.gender);
                                                break;
                                            default:
                                                break;
                                        }
                                        break;
                                    case ConstNpc.CONFIRM_DESTROY_EGG:
                                        if (select == 0) {
                                            player.mabuEgg.destroyEgg();
                                        }
                                        break;
                                }
                            }
                        }
                    };
                    break;
                case ConstNpc.QUOC_VUONG:
                    npc = new Npc(mapId, status, cx, cy, tempId, avartar) {

                        @Override
                        public void openBaseMenu(Player player) {
                            this.createOtherMenu(player, ConstNpc.BASE_MENU,
                                    "Con mu·ªën n√¢ng gi·ªõi h·∫°n s·ª©c m·∫°nh cho b·∫£n th√¢n hay ƒë·ªá t·ª≠?", "B·∫£n th√¢n", "ƒê·ªá t·ª≠",
                                    "T·ª´ ch·ªëi");
                        }

                        @Override
                        public void confirmMenu(Player player, int select) {
                            if (canOpenNpc(player)) {
                                if (player.iDMark.isBaseMenu()) {
                                    switch (select) {
                                        case 0:
                                            if (player.nPoint.limitPower < NPoint.MAX_LIMIT) {
                                                this.createOtherMenu(player, ConstNpc.OPEN_POWER_MYSEFT,
                                                        "Ta s·∫Ω tru·ªÅn nƒÉng l∆∞·ª£ng gi√∫p con m·ªü gi·ªõi h·∫°n s·ª©c m·∫°nh c·ªßa b·∫£n th√¢n l√™n "
                                                        + Util.numberToMoney(player.nPoint.getPowerNextLimit()),
                                                        "N√¢ng\ngi·ªõi h·∫°n\ns·ª©c m·∫°nh",
                                                        "N√¢ng ngay\n"
                                                        + Util.numberToMoney(
                                                                OpenPowerService.COST_SPEED_OPEN_LIMIT_POWER)
                                                        + " v√†ng",
                                                        "ƒê√≥ng");
                                            } else {
                                                this.createOtherMenu(player, ConstNpc.IGNORE_MENU,
                                                        "S·ª©c m·∫°nh c·ªßa con ƒë√£ ƒë·∫°t t·ªõi gi·ªõi h·∫°n", "ƒê√≥ng");
                                            }
                                            break;
                                        case 1:
                                            if (player.pet != null) {
                                                if (player.pet.nPoint.limitPower < NPoint.MAX_LIMIT) {
                                                    this.createOtherMenu(player, ConstNpc.OPEN_POWER_PET,
                                                            "Ta s·∫Ω tru·ªÅn nƒÉng l∆∞·ª£ng gi√∫p con m·ªü gi·ªõi h·∫°n s·ª©c m·∫°nh c·ªßa ƒë·ªá t·ª≠ l√™n "
                                                            + Util.numberToMoney(
                                                                    player.pet.nPoint.getPowerNextLimit()),
                                                            "N√¢ng ngay\n" + Util.numberToMoney(
                                                                    OpenPowerService.COST_SPEED_OPEN_LIMIT_POWER)
                                                            + " v√†ng",
                                                            "ƒê√≥ng");
                                                } else {
                                                    this.createOtherMenu(player, ConstNpc.IGNORE_MENU,
                                                            "S·ª©c m·∫°nh c·ªßa ƒë·ªá con ƒë√£ ƒë·∫°t t·ªõi gi·ªõi h·∫°n", "ƒê√≥ng");
                                                }
                                            } else {
                                                Service.getInstance().sendThongBao(player, "Kh√¥ng th·ªÉ th·ª±c hi·ªán");
                                            }
                                            // gi·ªõi h·∫°n ƒë·ªá t·ª≠
                                            break;
                                    }
                                } else if (player.iDMark.getIndexMenu() == ConstNpc.OPEN_POWER_MYSEFT) {
                                    switch (select) {
                                        case 0:
                                            OpenPowerService.gI().openPowerBasic(player);
                                            break;
                                        case 1:
                                            if (player.inventory.gold >= OpenPowerService.COST_SPEED_OPEN_LIMIT_POWER) {
                                                if (OpenPowerService.gI().openPowerSpeed(player)) {
                                                    player.inventory.gold -= OpenPowerService.COST_SPEED_OPEN_LIMIT_POWER;
                                                    Service.getInstance().sendMoney(player);
                                                }
                                            } else {
                                                Service.getInstance().sendThongBao(player,
                                                        "B·∫°n kh√¥ng ƒë·ªß v√†ng ƒë·ªÉ m·ªü, c√≤n thi·∫øu " + Util.numberToMoney(
                                                                (OpenPowerService.COST_SPEED_OPEN_LIMIT_POWER
                                                                - player.inventory.gold))
                                                        + " v√†ng");
                                            }
                                            break;
                                    }
                                } else if (player.iDMark.getIndexMenu() == ConstNpc.OPEN_POWER_PET) {
                                    if (select == 0) {
                                        if (player.inventory.gold >= OpenPowerService.COST_SPEED_OPEN_LIMIT_POWER) {
                                            if (OpenPowerService.gI().openPowerSpeed(player.pet)) {
                                                player.inventory.gold -= OpenPowerService.COST_SPEED_OPEN_LIMIT_POWER;
                                                Service.getInstance().sendMoney(player);
                                            }
                                        } else {
                                            Service.getInstance().sendThongBao(player,
                                                    "B·∫°n kh√¥ng ƒë·ªß v√†ng ƒë·ªÉ m·ªü, c√≤n thi·∫øu " + Util
                                                            .numberToMoney((OpenPowerService.COST_SPEED_OPEN_LIMIT_POWER
                                                                    - player.inventory.gold))
                                                    + " v√†ng");
                                        }
                                    }
                                }
                            }
                        }
                    };
                    break;
                case ConstNpc.BUNMA_TL:
                    npc = new Npc(mapId, status, cx, cy, tempId, avartar) {
                        @Override
                        public void openBaseMenu(Player player) {
                            if (canOpenNpc(player)) {
                                if (!TaskService.gI().checkDoneTaskTalkNpc(player, this)) {
                                    this.createOtherMenu(player, ConstNpc.BASE_MENU, "C·∫≠u b√© mu·ªën mua g√¨ n√†o?",
                                            "C·ª≠a h√†ng", "ƒê√≥ng");
                                }
                            }
                        }

                        @Override
                        public void confirmMenu(Player player, int select) {
                            if (canOpenNpc(player)) {
                                if (player.iDMark.isBaseMenu()) {
                                    if (select == 0) {
                                        ShopService.gI().openShopNormal(player, this, ConstNpc.SHOP_BUNMA_TL_0, 0,
                                                player.gender);
                                    }
                                }
                            }
                        }
                    };
                    break;
                case ConstNpc.RONG_OMEGA:
                    npc = new Npc(mapId, status, cx, cy, tempId, avartar) {
                        @Override
                        public void openBaseMenu(Player player) {
                            if (canOpenNpc(player)) {
                                BlackBallWar.gI().setTime();
                                if (this.mapId == 24 || this.mapId == 25 || this.mapId == 26) {
                                    try {
                                        long now = System.currentTimeMillis();
                                        if (now > BlackBallWar.TIME_OPEN && now < BlackBallWar.TIME_CLOSE) {
                                            this.createOtherMenu(player, ConstNpc.MENU_OPEN_BDW,
                                                    "ƒê∆∞·ªùng ƒë·∫øn v·ªõi ng·ªçc r·ªìng sao ƒëen ƒë√£ m·ªü, "
                                                    + "ng∆∞∆°i c√≥ mu·ªën tham gia kh√¥ng?",
                                                    "H∆∞·ªõng d·∫´n\nth√™m", "Tham gia", "T·ª´ ch·ªëi");
                                        } else {
                                            String[] optionRewards = new String[7];
                                            int index = 0;
                                            for (int i = 0; i < 7; i++) {
                                                if (player.rewardBlackBall.timeOutOfDateReward[i] > System
                                                        .currentTimeMillis()) {
                                                    optionRewards[index] = "Nh·∫≠n th∆∞·ªüng\n" + (i + 1) + " sao";
                                                    index++;
                                                }
                                            }
                                            if (index != 0) {
                                                String[] options = new String[index + 1];
                                                for (int i = 0; i < index; i++) {
                                                    options[i] = optionRewards[i];
                                                }
                                                options[options.length - 1] = "T·ª´ ch·ªëi";
                                                this.createOtherMenu(player, ConstNpc.MENU_REWARD_BDW,
                                                        "Ng∆∞∆°i c√≥ m·ªôt v√†i ph·∫ßn th∆∞·ªüng ng·ªçc " + "r·ªìng sao ƒëen ƒë√¢y!",
                                                        options);
                                            } else {
                                                this.createOtherMenu(player, ConstNpc.MENU_NOT_OPEN_BDW,
                                                        "Ta c√≥ th·ªÉ gi√∫p g√¨ cho ng∆∞∆°i?", "H∆∞·ªõng d·∫´n", "T·ª´ ch·ªëi");
                                            }
                                        }
                                    } catch (Exception ex) {
                                        Log.error("L·ªói m·ªü menu r·ªìng Omega");
                                    }
                                }
                            }
                        }

                        @Override
                        public void confirmMenu(Player player, int select) {
                            if (canOpenNpc(player)) {
                                switch (player.iDMark.getIndexMenu()) {
                                    case ConstNpc.MENU_REWARD_BDW:
                                        player.rewardBlackBall.getRewardSelect((byte) select);
                                        break;
                                    case ConstNpc.MENU_OPEN_BDW:
                                        if (select == 0) {
                                            NpcService.gI().createTutorial(player, this.avartar,
                                                    ConstNpc.HUONG_DAN_BLACK_BALL_WAR);
                                        } else if (select == 1) {
                                            player.iDMark.setTypeChangeMap(ConstMap.CHANGE_BLACK_BALL);
                                            ChangeMapService.gI().openChangeMapTab(player);
                                        }
                                        break;
                                    case ConstNpc.MENU_NOT_OPEN_BDW:
                                        if (select == 0) {
                                            NpcService.gI().createTutorial(player, this.avartar,
                                                    ConstNpc.HUONG_DAN_BLACK_BALL_WAR);
                                        }
                                        break;
                                }
                            }
                        }
                    };
                    break;
                case ConstNpc.RONG_1S:
                case ConstNpc.RONG_2S:
                case ConstNpc.RONG_3S:
                case ConstNpc.RONG_4S:
                case ConstNpc.RONG_5S:
                case ConstNpc.RONG_6S:
                case ConstNpc.RONG_7S:
                    npc = new Npc(mapId, status, cx, cy, tempId, avartar) {
                        @Override
                        public void openBaseMenu(Player player) {
                            if (canOpenNpc(player)) {
                                if (player.isHoldBlackBall) {
                                    this.createOtherMenu(player, ConstNpc.MENU_PHU_HP, "Ta c√≥ th·ªÉ gi√∫p g√¨ cho ng∆∞∆°i?",
                                            "Ph√π h·ªô", "T·ª´ ch·ªëi");
                                } else {
                                    this.createOtherMenu(player, ConstNpc.MENU_OPTION_GO_HOME,
                                            "Ta c√≥ th·ªÉ gi√∫p g√¨ cho ng∆∞∆°i?", "V·ªÅ nh√†", "T·ª´ ch·ªëi");
                                }
                            }
                        }

                        @Override
                        public void confirmMenu(Player player, int select) {
                            if (canOpenNpc(player)) {
                                if (player.iDMark.getIndexMenu() == ConstNpc.MENU_PHU_HP) {
                                    if (select == 0) {
                                        this.createOtherMenu(player, ConstNpc.MENU_OPTION_PHU_HP,
                                                "Ta s·∫Ω gi√∫p ng∆∞∆°i tƒÉng HP l√™n m·ª©c kinh ho√†ng, ng∆∞∆°i ch·ªçn ƒëi",
                                                "x3 HP\n" + Util.numberToMoney(BlackBallWar.COST_X3) + " v√†ng",
                                                "x5 HP\n" + Util.numberToMoney(BlackBallWar.COST_X5) + " v√†ng",
                                                "x7 HP\n" + Util.numberToMoney(BlackBallWar.COST_X7) + " v√†ng",
                                                "T·ª´ ch·ªëi");
                                    }
                                } else if (player.iDMark.getIndexMenu() == ConstNpc.MENU_OPTION_GO_HOME) {
                                    if (select == 0) {
                                        ChangeMapService.gI().changeMapBySpaceShip(player, player.gender + 21, -1, 250);
                                    }
                                } else if (player.iDMark.getIndexMenu() == ConstNpc.MENU_OPTION_PHU_HP) {
                                    switch (select) {
                                        case 0:
                                            BlackBallWar.gI().xHPKI(player, BlackBallWar.X3);
                                            break;
                                        case 1:
                                            BlackBallWar.gI().xHPKI(player, BlackBallWar.X5);
                                            break;
                                        case 2:
                                            BlackBallWar.gI().xHPKI(player, BlackBallWar.X7);
                                            break;
                                        case 3:
                                            this.npcChat(player, "ƒê·ªÉ ta xem ng∆∞∆°i tr·ª• ƒë∆∞·ª£c bao l√¢u");
                                            break;
                                    }
                                }
                            }
                        }
                    };
                    break;
                case ConstNpc.NPC_64:
                    npc = new Npc(mapId, status, cx, cy, tempId, avartar) {
                        @Override
                        public void openBaseMenu(Player player) {
                            if (canOpenNpc(player)) {
                                createOtherMenu(player, ConstNpc.BASE_MENU, "Ng∆∞∆°i mu·ªën xem th√¥ng tin g√¨?",
                                        "Top\ns·ª©c m·∫°nh", "ƒê√≥ng");
                            }
                        }

                        @Override
                        public void confirmMenu(Player player, int select) {
                            if (canOpenNpc(player)) {
                                if (player.iDMark.isBaseMenu()) {
                                    if (select == 0) {
                                        Service.getInstance().showTopPower(player);
                                    }
                                }
                            }
                        }
                    };
                    break;
                case ConstNpc.BILL:
                    npc = new Npc(mapId, status, cx, cy, tempId, avartar) {

                        @Override
                        public void openBaseMenu(Player player) {
                            if (canOpenNpc(player)) {
                                if (this.mapId == 48) {
                                    this.createOtherMenu(player, ConstNpc.BASE_MENU, "ƒê√≥i b·ª•ng qu√°...ng∆∞∆°i mang cho ta 99 ph·∫ßn ƒë·ªì ƒÉn,\n"
                                            + "ta s·∫Ω cho ng∆∞∆°i m·ªôt m√≥n ƒë·ªì H·ªßy Di·ªát.\n"
                                            + "N·∫øu t√¢m tr·∫°ng ta vui ng∆∞∆°i c√≥ th·ªÉ nh·∫≠n ƒë∆∞·ª£c trang b·ªã tƒÉng ƒë·∫øn 15%", "OK", "T·ª´ ch·ªëi");
                                } else {
                                    super.openBaseMenu(player);
                                }
                            }
                        }

                        @Override
                        public void confirmMenu(Player player, int select) {
                            if (canOpenNpc(player)) {
                                switch (this.mapId) {
                                    case 48:
                                        if (player.iDMark.isBaseMenu()) {
                                            switch (select) {
                                                case 0:
                                                    if (player.setClothes.godClothes) {
                                                        ShopService.gI().openShopBillHuyDiet(player, ConstNpc.SHOP_BILL_HUY_DIET_0, 0);
                                                    } else {
                                                        Service.getInstance().sendThongBao(player,
                                                                "Y√™u c·∫ßu c√≥ ƒë·ªß trang b·ªã th·∫ßn linh");
                                                    }
                                                    break;
                                            }
                                        }
                                }
                            }
                        }
                    };
                    break;

                case ConstNpc.WHIS:
                    npc = new Npc(mapId, status, cx, cy, tempId, avartar) {
                        @Override
                        public void openBaseMenu(Player player) {
                            switch (mapId) {
                                case 5:
                                    this.createOtherMenu(player, ConstNpc.BASE_MENU, "Ta l√† Whis ƒë∆∞·ª£c ƒê·∫°i thi√™n s·ª© c·ª≠ xu·ªëng Tr√°i ƒë·∫•t ƒë·ªÉ thu th·∫≠p l·∫°i c√°c trang b·ªã Th·∫ßn linh b·ªã k·∫ª x·∫•u ƒë√°nh c·∫Øp. Ta s·∫Ω b·∫°n l·∫°i cho ng∆∞∆°i trang b·ªã k√≠ch ho·∫°t trong truy·ªÅn thuy·∫øt n·∫øu ng∆∞∆°i giao cho ta trang b·ªã Th·∫ßn linh.", "Hi·∫øn t·∫ø\nTh·∫ßn linh", "H∆∞·ªõng\nd·∫´n", "ƒê√≥ng");
                                    return;
                                case 154:
                                    createOtherMenu(player, ConstNpc.BASE_MENU, "Th·ª≠ ƒë√°nh ta xem n√†o.\n"
                                            + "Ng∆∞∆°i c√≤n 1 l∆∞·ª£t n·ªØa c∆° m√†.", "Ch·∫ø T·∫°o", "H·ªçc\ntuy·ªát k·ªπ", "Top 100", "[LV:" + player.levelKillWhis + "]");
                                    return;
                            }

                        }

                        @Override
                        public void confirmMenu(Player player, int select) {
                            if (canOpenNpc(player)) {
                                switch (player.iDMark.getIndexMenu()) {
                                    case ConstNpc.BASE_MENU:
                                        switch (mapId) {
                                            case 154:
                                                switch (select) {
                                                    case 0:
                                                         CombineServiceNew.gI().openTabCombine(player, CombineServiceNew.NANG_CAP_DO_THIEN_SU);
                                                          break;
                                                    case 1: // H·ªçc tuy·ªát k·ªπ
                                                        Item biKipTuyetKy = InventoryService.gI().findItemBagByTemp(player, (short) 1229);
                                                        if (biKipTuyetKy != null && biKipTuyetKy.quantity >= 9999 && player.inventory.gold >= 10_000_000 && player.inventory.gem >= 99) {
                                                            int skillID = player.gender == 0 ? 24 : player.gender == 1 ? 26 : 25;
                                                            Skill newSkill = SkillUtil.createSkill(skillID, 1);
                                                            String npcSay = "|1|Qua s·∫Ω d·∫°y ng∆∞∆°i tuy·ªát k·ªπ " + newSkill.template.name + "\n";
                                                            npcSay += "|2|" + biKipTuyetKy.getName() + " " + biKipTuyetKy.quantity + "/9999\n";
                                                            npcSay += "Gi√° v√†ng: 10.000.000\n";
                                                            npcSay += "Gi√° ng·ªçc: 99";
                                                            createOtherMenu(player, ConstNpc.HOC_TUYET_KY, npcSay, "ƒê·ªìng √Ω", "T·ª´ ch·ªëi");
                                                            return;
                                                        } else {
                                                            int skillID = player.gender == 0 ? 24 : player.gender == 1 ? 26 : 25;
                                                            Skill newSkill = SkillUtil.createSkill(skillID, 1);
                                                            String npcSay = "|1|Qua s·∫Ω d·∫°y ng∆∞∆°i tuy·ªát k·ªπ " + newSkill.template.name + " 1\n";
                                                            if (biKipTuyetKy == null || biKipTuyetKy.quantity < 9999) {
                                                                if (biKipTuyetKy == null) {
                                                                    npcSay += "|7|B√≠ k√≠p tuy·ªát k·ªπ" + " " + "0/9999\n";
                                                                } else {
                                                                    npcSay += "|7|B√≠ k√≠p tuy·ªát k·ªπ" + " " + biKipTuyetKy.quantity + "/9999\n";
                                                                }
                                                            } else {
                                                                npcSay += "|2|" + biKipTuyetKy.getName() + " " + biKipTuyetKy.quantity + "/9999\n";
                                                            }
                                                            if (player.inventory.gold < 10_000_000) {
                                                                npcSay += "|7|Gi√° v√†ng: 10.000.000\n";
                                                            } else {
                                                                npcSay += "|2|Gi√° v√†ng: 10.000.000\n";
                                                            }
                                                            if (player.inventory.gem < 99) {
                                                                npcSay += "|7|Gi√° ng·ªçc: 99";
                                                            } else {
                                                                npcSay += "|2|Gi√° ng·ªçc: 99";
                                                            }
                                                            createOtherMenu(player, ConstNpc.HOC_TUYET_KY_2, npcSay, "T·ª´ ch·ªëi");
                                                            return;
                                                        }

                                                    case 2: // Top ƒë√°nh NPC whis
                                                        Service.getInstance().showToplevelWhis(player);
                                                        break;
                                                    case 3:// khi√™u chi·∫øn NPC whis
                                                        player.lastTimeSwapWhis = System.currentTimeMillis();
                                                        PlayerService.gI().savePlayer(player);

                                                        ScheduledExecutorService scheduler = Executors.newSingleThreadScheduledExecutor();

                                                        Runnable task = () -> {
                                                            hide_npc(player, (int) ConstNpc.WHIS, 0);
                                                            PlayerService.gI().changeAndSendTypePK(player, ConstPlayer.PK_PVP);
                                                            PlayerService.gI().playerMove(player, 485, 360);
                                                            PlayerService.gI().setPos(player, 488, 360, 55);
                                                            scheduler.shutdown();
                                                        };
                                                        scheduler.schedule(task, 1, TimeUnit.SECONDS);

                                                        try {
                                                            Boss_Whis dt = new Boss_Whis(Util.createIdDuongTank((int) player.id), BossData.WHIS_NPC, player.zone, this.cx, this.cy, player);
                                                        } catch (Exception ex) {
                                                            Logger.getLogger(NpcFactory.class.getName()).log(Level.SEVERE, null, ex);
                                                        }
                                                        player.zone.load_Me_To_Another(player);
                                                }
                                                return;
                                            case 5:
                                                switch (select) {
                                                    case 0:
                                                        createOtherMenu(player, 799455479, "Ng∆∞∆°i mu·ªën hi·∫øn t·∫ø cho B·∫£n th√¢n hay ƒê·ªá t·ª≠", "Cho\nB·∫£n th√¢n", "Cho\nƒê·ªá t·ª≠", "ƒê√≥ng");
                                                        return;
                                                    case 1:
                                                        NpcService.gI().createTutorial(player, avartar, "Ta l√† Whis ƒë∆∞·ª£c ƒê·∫°i thi√™n s·ª© c·ª≠ xu·ªëng Tr√°i ƒë·∫•t ƒë·ªÉ thu th·∫≠p l·∫°i trang b·ªã Th·∫ßn linh\bb·ªã k·∫ª x·∫•u ƒë√°nh c·∫Øp\n"
                                                                + "H√£y ƒëi ti√™u di·ªát k·∫ª x·∫•u ƒë·ªÉ gi√†nh l·∫°i trang b·ªã Th·∫ßn linh b·ªã ƒë√°nh c·∫Øp\n"
                                                                + "Hi·∫øn t·∫ø cho ta trang b·ªã Th·∫ßn linh, Ta s·∫Ω ban cho ng∆∞∆°i trang b·ªã k√≠ch ho·∫°t t∆∞∆°ng ·ª©ng trong truy·ªÅn thuy·∫øt\n"
                                                                + "Y√™u c·∫ßu khi hi·∫øn t·∫ø:\b- B·∫£n th√¢n ƒëang s·ª≠ d·ª•ng trang b·ªã Th·∫ßn linh\b- V√†ng trong h√†nh trang: 2 T·ª∑ v√†ng\b(kh√¥ng gi·ªõi h·∫°n s·ªë trang b·ªã Th·∫ßn linh trong 1 l·∫ßn hi·∫øn t·∫ø)");
                                                        return;
                                                }
                                        }
                                        

                                        
                                    
                                    case ConstNpc.HOC_TUYET_KY:
                                        switch (select) {
                                            case 0:
                                                Item biKipTuyetKy = InventoryService.gI().findItemBagByTemp(player, (short) 1229);
                                                int skillID = player.gender == 0 ? 24 : player.gender == 1 ? 26 : 25;
                                                Skill newSkill = SkillUtil.createSkill(skillID, 1);
                                                try {
                                                    Message msg = Service.getInstance().messageSubCommand((byte) 23);
                                                    msg.writer().writeShort(newSkill.skillId);
                                                    player.sendMessage(msg);
                                                    msg.cleanup();
                                                } catch (IOException e) {
                                                }
                                                try { // send effect susscess
                                                    Message msg = new Message(-81);
                                                    msg.writer().writeByte(0);
                                                    msg.writer().writeUTF("test");
                                                    msg.writer().writeUTF("test");
                                                    msg.writer().writeShort(tempId);
                                                    player.sendMessage(msg);
                                                    msg.cleanup();

                                                    msg = new Message(-81);
                                                    msg.writer().writeByte(1);
                                                    msg.writer().writeByte(2);
                                                    msg.writer().writeByte(InventoryService.gI().getIndexBag(player, biKipTuyetKy));
                                                    msg.writer().writeByte(-1);
                                                    player.sendMessage(msg);
                                                    msg.cleanup();

                                                    msg = new Message(-81);
                                                    msg.writer().writeByte(7);
                                                    msg.writer().writeShort(newSkill.template.iconId);
                                                    player.sendMessage(msg);
                                                    msg.cleanup();
                                                } catch (Exception e) {
                                                }
                                                Inventory inv = player.inventory;
                                                InventoryService.gI().subQuantityItemsBag(player, biKipTuyetKy, 9999);
                                                InventoryService.gI().sendItemBags(player);
                                                inv.subGold(10_000_000);
                                                inv.subGem(99);
                                                SkillUtil.setSkill(player, newSkill);
                                        }
                                        return;
                                    case 799455479:
                                        switch (select) {
                                            case 0:
                                                if (!player.getSession().actived) {
                                                    NpcService.gI().createTutorial(player, avartar, "Truy c·∫≠p Trang ch·ªß  ƒë·ªÉ m·ªü Th√†nh vi√™n");
                                                    return;
                                                }
                                                int gender = player.gender;
                                                List<Integer> ao = Arrays.asList(555, 557, 559);
                                                List<Integer> quan = Arrays.asList(556, 558, 560);
                                                List<Integer> gang = Arrays.asList(562, 564, 566);
                                                List<Integer> giay = Arrays.asList(563, 565, 567);
                                                int nhan = 561;

                                                boolean dieuKien1 = player.inventory.itemsBody.get(0).isNotNullItem();
                                                boolean dieuKien2 = player.inventory.itemsBody.get(1).isNotNullItem();
                                                boolean dieuKien3 = player.inventory.itemsBody.get(2).isNotNullItem();
                                                boolean dieuKien4 = player.inventory.itemsBody.get(3).isNotNullItem();
                                                boolean dieuKien5 = player.inventory.itemsBody.get(4).isNotNullItem();

                                                boolean dieuKien1_1 = dieuKien1 && (player.inventory.itemsBody.get(0).template.id == ao.get(gender));
                                                boolean dieuKien2_1 = dieuKien2 && (player.inventory.itemsBody.get(1).template.id == quan.get(gender));
                                                boolean dieuKien3_1 = dieuKien3 && (player.inventory.itemsBody.get(2).template.id == gang.get(gender));
                                                boolean dieuKien4_1 = dieuKien4 && (player.inventory.itemsBody.get(3).template.id == giay.get(gender));
                                                boolean dieuKien5_1 = dieuKien5 && (player.inventory.itemsBody.get(4).template.id == nhan);

                                                boolean condition1 = dieuKien1_1;
                                                boolean condition2 = dieuKien2_1;
                                                boolean condition3 = dieuKien3_1;
                                                boolean condition4 = dieuKien4_1;
                                                boolean condition5 = dieuKien5_1;

                                                if (condition1 || condition2 || condition3 || condition4 || condition5) {
                                                    String npcsay = "Danh s√°ch hi·∫øn t·∫ø cho Whis:\n";
                                                    int i = 1;
                                                    if (condition1) {
                                                        npcsay += i + ". " + player.inventory.itemsBody.get(0).template.name + "\n";
                                                        i++;
                                                    }
                                                    if (condition2) {
                                                        npcsay += i + ". " + player.inventory.itemsBody.get(1).template.name + "\n";
                                                        i++;
                                                    }
                                                    if (condition3) {
                                                        npcsay += i + ". " + player.inventory.itemsBody.get(2).template.name + "\n";
                                                        i++;
                                                    }
                                                    if (condition4) {
                                                        npcsay += i + ". " + player.inventory.itemsBody.get(3).template.name + "\n";
                                                        i++;
                                                    }
                                                    if (condition5) {
                                                        npcsay += i + ". " + player.inventory.itemsBody.get(4).template.name + "\n";
                                                        i++;
                                                    }

                                                    npcsay += "Ng∆∞∆°i s·∫Ω nh·∫≠n l·∫°i m·ªôt trang b·ªã k√≠ch ho·∫°t t∆∞∆°ng ·ª©ng trong truy·ªÅn thuy·∫øt.";

                                                    createOtherMenu(player, ConstNpc.HIEN_TE_SU_PHU, npcsay, "Hi·∫øn t·∫ø\n(2 T·ª∑ v√†ng)", "ƒê√≥ng");
                                                    return;
                                                } else {
                                                    NpcService.gI().createTutorial(player, avartar, "Khi n√†o ng∆∞∆°i m·∫∑c trang b·ªã th·∫ßn linh th√¨ t·ªõi ƒë√¢y ta n√≥i chuy·ªán ti·∫øp");
                                                    break;
                                                }

                                            case 1:

                                                if (!player.getSession().actived) {
                                                    NpcService.gI().createTutorial(player, avartar, "Truy c·∫≠p Trang ch·ªß NgocRongKakarot.Com ƒë·ªÉ m·ªü Th√†nh vi√™n");
                                                    return;
                                                }

                                                if (player.pet == null) {
                                                    NpcService.gI().createTutorial(player, avartar, "Ng∆∞∆°i c·∫ßn ph·∫£i c√≥ ƒê·ªá t·ª≠ tr∆∞·ªõc khi th·ª±c hi·ªán");
                                                    return;
                                                }

                                                int gender_detu = player.pet.gender;

                                                List<Integer> ao2 = Arrays.asList(555, 557, 559);
                                                List<Integer> quan2 = Arrays.asList(556, 558, 560);
                                                List<Integer> gang2 = Arrays.asList(562, 564, 566);
                                                List<Integer> giay2 = Arrays.asList(563, 565, 567);
                                                int nhan2 = 561;

                                                boolean dieuKien12 = player.pet.inventory.itemsBody.get(0).isNotNullItem();
                                                boolean dieuKien22 = player.pet.inventory.itemsBody.get(1).isNotNullItem();
                                                boolean dieuKien32 = player.pet.inventory.itemsBody.get(2).isNotNullItem();
                                                boolean dieuKien42 = player.pet.inventory.itemsBody.get(3).isNotNullItem();
                                                boolean dieuKien52 = player.pet.inventory.itemsBody.get(4).isNotNullItem();

                                                boolean dieuKien1_12 = dieuKien12 && (player.pet.inventory.itemsBody.get(0).template.id == ao2.get(gender_detu));
                                                boolean dieuKien2_12 = dieuKien22 && (player.pet.inventory.itemsBody.get(1).template.id == quan2.get(gender_detu));
                                                boolean dieuKien3_12 = dieuKien32 && (player.pet.inventory.itemsBody.get(2).template.id == gang2.get(gender_detu));
                                                boolean dieuKien4_12 = dieuKien42 && (player.pet.inventory.itemsBody.get(3).template.id == giay2.get(gender_detu));
                                                boolean dieuKien5_12 = dieuKien52 && (player.pet.inventory.itemsBody.get(4).template.id == nhan2);

                                                boolean condition12 = dieuKien1_12;
                                                boolean condition22 = dieuKien2_12;
                                                boolean condition32 = dieuKien3_12;
                                                boolean condition42 = dieuKien4_12;
                                                boolean condition52 = dieuKien5_12;

                                                if (condition12 || condition22 || condition32 || condition42 || condition52) {
                                                    String npcsay = "Danh s√°ch hi·∫øn t·∫ø cho Whis:\n";
                                                    int i = 1;
                                                    if (condition12) {
                                                        npcsay += i + ". " + player.pet.inventory.itemsBody.get(0).template.name + "\n";
                                                        i++;
                                                    }
                                                    if (condition22) {
                                                        npcsay += i + ". " + player.pet.inventory.itemsBody.get(1).template.name + "\n";
                                                        i++;
                                                    }
                                                    if (condition32) {
                                                        npcsay += i + ". " + player.pet.inventory.itemsBody.get(2).template.name + "\n";
                                                        i++;
                                                    }
                                                    if (condition42) {
                                                        npcsay += i + ". " + player.pet.inventory.itemsBody.get(3).template.name + "\n";
                                                        i++;
                                                    }
                                                    if (condition52) {
                                                        npcsay += i + ". " + player.pet.inventory.itemsBody.get(4).template.name + "\n";
                                                        i++;
                                                    }

                                                    npcsay += "Ng∆∞∆°i s·∫Ω nh·∫≠n l·∫°i m·ªôt trang b·ªã k√≠ch ho·∫°t t∆∞∆°ng ·ª©ng trong truy·ªÅn thuy·∫øt.";

                                                    createOtherMenu(player, ConstNpc.HIEN_TE_DE_TU, npcsay, "OK");
                                                    return;
                                                } else {
                                                    NpcService.gI().createTutorial(player, avartar, "Khi n√†o ƒë·ªá t·ª≠ ng∆∞∆°i m·∫∑c trang b·ªã th·∫ßn linh th√¨ t·ªõi ƒë√¢y ta n√≥i chuy·ªán ti·∫øp");
                                                    break;
                                                }
                                        }

                                    case ConstNpc.HIEN_TE_SU_PHU:
                                        switch (select) {
                                            case 0:
                                                int i = 0;
                                                int gender = player.gender;
                                                List<Integer> ao = Arrays.asList(555, 557, 559);
                                                List<Integer> quan = Arrays.asList(556, 558, 560);
                                                List<Integer> gang = Arrays.asList(562, 564, 566);
                                                List<Integer> giay = Arrays.asList(563, 565, 567);

                                                List<Integer> aoSKH = Arrays.asList(555, 557, 559);
                                                List<Integer> quanSKH = Arrays.asList(556, 558, 560);
                                                List<Integer> gangSKH = Arrays.asList(562, 564, 566);
                                                List<Integer> giaySKH = Arrays.asList(563, 565, 567);
                                                int rada = 12;

                                                int[][] options = {{128, 129, 127}, {130, 131, 132}, {133, 135, 134}};
//                                                int skhId = ItemService.gI().randomSKHId((byte) 0);

                                                short itemId;

                                                int nhan = 561;

                                                boolean dieuKien1 = player.inventory.itemsBody.get(0).isNotNullItem();
                                                boolean dieuKien2 = player.inventory.itemsBody.get(1).isNotNullItem();
                                                boolean dieuKien3 = player.inventory.itemsBody.get(2).isNotNullItem();
                                                boolean dieuKien4 = player.inventory.itemsBody.get(3).isNotNullItem();
                                                boolean dieuKien5 = player.inventory.itemsBody.get(4).isNotNullItem();

                                                boolean dieuKien1_1 = dieuKien1 && (player.inventory.itemsBody.get(0).template.id == ao.get(gender));
                                                boolean dieuKien2_1 = dieuKien2 && (player.inventory.itemsBody.get(1).template.id == quan.get(gender));
                                                boolean dieuKien3_1 = dieuKien3 && (player.inventory.itemsBody.get(2).template.id == gang.get(gender));
                                                boolean dieuKien4_1 = dieuKien4 && (player.inventory.itemsBody.get(3).template.id == giay.get(gender));
                                                boolean dieuKien5_1 = dieuKien5 && (player.inventory.itemsBody.get(4).template.id == nhan);

                                                boolean condition1 = dieuKien1_1;
                                                boolean condition2 = dieuKien2_1;
                                                boolean condition3 = dieuKien3_1;
                                                boolean condition4 = dieuKien4_1;
                                                boolean condition5 = dieuKien5_1;

                                                if (condition1 || condition2 || condition3 || condition4 || condition5) {

                                                    if (player.inventory.gold < 2_000_000_000) {
                                                        NpcService.gI().createTutorial(player, avartar, "Ng∆∞∆°i c√≤n thi·∫øu " + Util.numberToMoney(2_000_000_000 - player.inventory.gold) + " v√†ng");
                                                        return;
                                                    }

                                                    player.inventory.gold -= 2000000000;
                                                    Service.getInstance().sendMoney(player);

                                                    if (condition1) { // √ÅO
                                                        Item ao2 = ItemService.gI().createNewItem((short) gender);

                                                        InventoryService.gI().removeItem(player.inventory.itemsBody, 0);

                                                        Random random = new Random();
                                                        int tyle = random.nextInt(100);
                                                        ao2.itemOptions.add(new ItemOption(47, 3));

                                                        if (tyle < 30) {
                                                            if (gender == 0) {
                                                                ao2.itemOptions.add(new ItemOption(129, 1));
                                                                ao2.itemOptions.add(new ItemOption(141, 1));
                                                            }
                                                            if (gender == 1) {
                                                                ao2.itemOptions.add(new ItemOption(131, 1));
                                                                ao2.itemOptions.add(new ItemOption(143, 1));
                                                            } else {
                                                                ao2.itemOptions.add(new ItemOption(135, 1));
                                                                ao2.itemOptions.add(new ItemOption(138, 1));
                                                            }
                                                        } else if (tyle < 60) {
                                                            if (gender == 0) {
                                                                ao2.itemOptions.add(new ItemOption(128, 1));
                                                                ao2.itemOptions.add(new ItemOption(140, 1));
                                                            }
                                                            if (gender == 1) {
                                                                ao2.itemOptions.add(new ItemOption(130, 1));
                                                                ao2.itemOptions.add(new ItemOption(142, 1));
                                                            } else {
                                                                ao2.itemOptions.add(new ItemOption(133, 1));
                                                                ao2.itemOptions.add(new ItemOption(136, 1));
                                                            }

                                                        } else {
                                                            ao2.itemOptions.add(new ItemOption(134, 1));
                                                            ao2.itemOptions.add(new ItemOption(137, 1));
                                                        }
                                                        InventoryService.gI().addItemBody(player, ao2);
                                                        InventoryService.gI().sendItemBody(player);
                                                        i++;
                                                    }

                                                    if (condition2) { // QU·∫¶N
                                                        Item ao2 = ItemService.gI().createNewItem((short) (gender + 6));
                                                        InventoryService.gI().removeItem(player.inventory.itemsBody, 1);
//                                                      ao2.template.id = (short) (gender + 6);
                                                        List<ItemOption> optionsToRemove = new ArrayList<>(); // Danh s√°ch c√°c ItemOption c·∫ßn x√≥a
                                                        for (ItemOption itopt : ao2.itemOptions) {
                                                            int optionId = itopt.optionTemplate.id;
                                                            if (optionId >= 0 && optionId <= 233) {
                                                                optionsToRemove.add(itopt);
                                                            }
                                                        }

                                                        Random random = new Random();
                                                        int tyle = random.nextInt(100);

                                                        ao2.itemOptions.removeAll(optionsToRemove);
                                                        ao2.itemOptions.add(new ItemOption(6, 20));

                                                        if (tyle < 30) {
                                                            if (gender == 0) {
                                                                ao2.itemOptions.add(new ItemOption(129, 1));
                                                                ao2.itemOptions.add(new ItemOption(141, 1));
                                                            }
                                                            if (gender == 1) {
                                                                ao2.itemOptions.add(new ItemOption(131, 1));
                                                                ao2.itemOptions.add(new ItemOption(143, 1));
                                                            } else {
                                                                ao2.itemOptions.add(new ItemOption(135, 1));
                                                                ao2.itemOptions.add(new ItemOption(138, 1));
                                                            }
                                                        } else if (tyle < 60) {
                                                            if (gender == 0) {
                                                                ao2.itemOptions.add(new ItemOption(128, 1));
                                                                ao2.itemOptions.add(new ItemOption(140, 1));
                                                            }
                                                            if (gender == 1) {
                                                                ao2.itemOptions.add(new ItemOption(130, 1));
                                                                ao2.itemOptions.add(new ItemOption(142, 1));
                                                            } else {
                                                                ao2.itemOptions.add(new ItemOption(133, 1));
                                                                ao2.itemOptions.add(new ItemOption(136, 1));
                                                            }

                                                        } else {
                                                            ao2.itemOptions.add(new ItemOption(134, 1));
                                                            ao2.itemOptions.add(new ItemOption(137, 1));
                                                        }
                                                        InventoryService.gI().addItemBody(player, ao2);
                                                        InventoryService.gI().sendItemBody(player);
                                                        Service.getInstance().Send_Caitrang(player);
                                                        Service.getInstance().Send_Info_NV(player);
                                                        i++;
                                                    }
                                                    if (condition3) { // GƒÇNG

                                                        Item ao2 = ItemService.gI().createNewItem((short) (gender + 21));
                                                        InventoryService.gI().removeItem(player.inventory.itemsBody, 2);

                                                        List<ItemOption> optionsToRemove = new ArrayList<>(); // Danh s√°ch c√°c ItemOption c·∫ßn x√≥a
                                                        for (ItemOption itopt : ao2.itemOptions) {
                                                            int optionId = itopt.optionTemplate.id;
                                                            if (optionId >= 0 && optionId <= 233) {
                                                                optionsToRemove.add(itopt);
                                                            }
                                                        }

                                                        Random random = new Random();
                                                        int tyle = random.nextInt(100);

                                                        ao2.itemOptions.removeAll(optionsToRemove);
                                                        ao2.itemOptions.add(new ItemOption(0, 5));

                                                        if (tyle < 30) {
                                                            if (gender == 0) {
                                                                ao2.itemOptions.add(new ItemOption(129, 1));
                                                                ao2.itemOptions.add(new ItemOption(141, 1));
                                                            }
                                                            if (gender == 1) {
                                                                ao2.itemOptions.add(new ItemOption(131, 1));
                                                                ao2.itemOptions.add(new ItemOption(143, 1));
                                                            } else {
                                                                ao2.itemOptions.add(new ItemOption(135, 1));
                                                                ao2.itemOptions.add(new ItemOption(138, 1));
                                                            }
                                                        } else if (tyle < 60) {
                                                            if (gender == 0) {
                                                                ao2.itemOptions.add(new ItemOption(128, 1));
                                                                ao2.itemOptions.add(new ItemOption(140, 1));
                                                            }
                                                            if (gender == 1) {
                                                                ao2.itemOptions.add(new ItemOption(130, 1));
                                                                ao2.itemOptions.add(new ItemOption(142, 1));
                                                            } else {
                                                                ao2.itemOptions.add(new ItemOption(133, 1));
                                                                ao2.itemOptions.add(new ItemOption(136, 1));
                                                            }

                                                        } else {
                                                            ao2.itemOptions.add(new ItemOption(134, 1));
                                                            ao2.itemOptions.add(new ItemOption(137, 1));
                                                        }
                                                        InventoryService.gI().addItemBody(player, ao2);
                                                        InventoryService.gI().sendItemBody(player);
                                                        Service.getInstance().Send_Caitrang(player);
                                                        Service.getInstance().Send_Info_NV(player);
                                                        i++;
                                                    }
                                                    if (condition4) { // GI·∫¶Y

                                                        Item ao2 = ItemService.gI().createNewItem((short) (gender + 27));
                                                        InventoryService.gI().removeItem(player.inventory.itemsBody, 3);

                                                        List<ItemOption> optionsToRemove = new ArrayList<>(); // Danh s√°ch c√°c ItemOption c·∫ßn x√≥a
                                                        for (ItemOption itopt : ao2.itemOptions) {
                                                            int optionId = itopt.optionTemplate.id;
                                                            if (optionId >= 0 && optionId <= 233) {
                                                                optionsToRemove.add(itopt);
                                                            }
                                                        }

                                                        Random random = new Random();
                                                        int tyle = random.nextInt(100);

                                                        ao2.itemOptions.removeAll(optionsToRemove);
                                                        ao2.itemOptions.add(new ItemOption(7, 10));

                                                        if (tyle < 30) {
                                                            if (gender == 0) {
                                                                ao2.itemOptions.add(new ItemOption(129, 1));
                                                                ao2.itemOptions.add(new ItemOption(141, 1));
                                                            }
                                                            if (gender == 1) {
                                                                ao2.itemOptions.add(new ItemOption(131, 1));
                                                                ao2.itemOptions.add(new ItemOption(143, 1));
                                                            } else {
                                                                ao2.itemOptions.add(new ItemOption(135, 1));
                                                                ao2.itemOptions.add(new ItemOption(138, 1));
                                                            }
                                                        } else if (tyle < 60) {
                                                            if (gender == 0) {
                                                                ao2.itemOptions.add(new ItemOption(128, 1));
                                                                ao2.itemOptions.add(new ItemOption(140, 1));
                                                            }
                                                            if (gender == 1) {
                                                                ao2.itemOptions.add(new ItemOption(130, 1));
                                                                ao2.itemOptions.add(new ItemOption(142, 1));
                                                            } else {
                                                                ao2.itemOptions.add(new ItemOption(133, 1));
                                                                ao2.itemOptions.add(new ItemOption(136, 1));
                                                            }

                                                        } else {
                                                            ao2.itemOptions.add(new ItemOption(134, 1));
                                                            ao2.itemOptions.add(new ItemOption(137, 1));
                                                        }
                                                        InventoryService.gI().addItemBody(player, ao2);
                                                        InventoryService.gI().sendItemBody(player);
                                                        Service.getInstance().Send_Caitrang(player);
                                                        Service.getInstance().Send_Info_NV(player);
                                                        i++;
                                                    }
                                                    if (condition5) { // RADA
                                                        Item ao2 = ItemService.gI().createNewItem((short) 12);
                                                        InventoryService.gI().removeItem(player.inventory.itemsBody, 4);

                                                        List<ItemOption> optionsToRemove = new ArrayList<>(); // Danh s√°ch c√°c ItemOption c·∫ßn x√≥a
                                                        for (ItemOption itopt : ao2.itemOptions) {
                                                            int optionId = itopt.optionTemplate.id;
                                                            if (optionId >= 0 && optionId <= 233) {
                                                                optionsToRemove.add(itopt);
                                                            }
                                                        }

                                                        Random random = new Random();
                                                        int tyle = random.nextInt(100);

                                                        ao2.itemOptions.removeAll(optionsToRemove);
                                                        ao2.itemOptions.add(new ItemOption(14, 1));

                                                        if (tyle < 30) {
                                                            if (gender == 0) {
                                                                ao2.itemOptions.add(new ItemOption(129, 1));
                                                                ao2.itemOptions.add(new ItemOption(141, 1));
                                                            }
                                                            if (gender == 1) {
                                                                ao2.itemOptions.add(new ItemOption(131, 1));
                                                                ao2.itemOptions.add(new ItemOption(143, 1));
                                                            } else {
                                                                ao2.itemOptions.add(new ItemOption(135, 1));
                                                                ao2.itemOptions.add(new ItemOption(138, 1));
                                                            }
                                                        } else if (tyle < 60) {
                                                            if (gender == 0) {
                                                                ao2.itemOptions.add(new ItemOption(128, 1));
                                                                ao2.itemOptions.add(new ItemOption(140, 1));
                                                            }
                                                            if (gender == 1) {
                                                                ao2.itemOptions.add(new ItemOption(130, 1));
                                                                ao2.itemOptions.add(new ItemOption(142, 1));
                                                            } else {
                                                                ao2.itemOptions.add(new ItemOption(133, 1));
                                                                ao2.itemOptions.add(new ItemOption(136, 1));
                                                            }

                                                        } else {
                                                            ao2.itemOptions.add(new ItemOption(134, 1));
                                                            ao2.itemOptions.add(new ItemOption(137, 1));
                                                        }
                                                        InventoryService.gI().addItemBody(player, ao2);
                                                        InventoryService.gI().sendItemBody(player);
                                                        Service.getInstance().Send_Caitrang(player);
                                                        Service.getInstance().Send_Info_NV(player);
                                                        i++;
                                                    }
                                                    NpcService.gI().createTutorial(player, avartar, "Ba la ca ... ca ca ca... Um ba mi xa ki... ca ca...\n"
                                                            + "Na na ca ca... la la... sa da ma ta ro bu ki....\n"
                                                            + "....................\n"
                                                            + "B·∫°n v·ª´a hi·∫øn t·∫ø th√†nh c√¥ng cho Whis " + i + " trang b·ªã Th·∫ßn linh v√† nh·∫≠n ƒë∆∞·ª£c " + i + " trang b·ªã k√≠ch ho·∫°t trong truy·ªÅn thuy·∫øt.");
                                                    InventoryService.gI().sendItemBody(player);
                                                    Service.getInstance().Send_Caitrang(player);
                                                    Service.getInstance().Send_Info_NV(player);
                                                    break;
                                                }
                                                break;
                                        }
                                }
                            }
                        }
                    };
                    break;
                case ConstNpc.HOC_SKILL:
                    npc = new Npc(mapId, status, cx, cy, tempId, avartar) {
                        @Override
                        public void openBaseMenu(Player player) {
                            switch (mapId) {                                
                                case 5:
                                    createOtherMenu(player, ConstNpc.BASE_MENU, "Ng∆∞∆°i mu·ªën h·ªçc skill bi·∫øn xayda kh√¥ng.\n"
                                            + "Ta s·∫Ω gi√∫p ng∆∞∆°i l√†m ƒë∆∞·ª£c ƒëi·ªÅu ƒë√≥.", "H·ªçc", "Gh√©p S√°ch\nLv2","Gh√©p S√°ch\n Lv3","Gh√©p S√°ch\nLv4","Gh√©p S√°ch\nLv5","ƒê√≥ng");
                                    return;
                            }

                        }

                        @Override
                        public void confirmMenu(Player player, int select) {
                            if (canOpenNpc(player)) {
                                switch (player.iDMark.getIndexMenu()) {
                                    case ConstNpc.BASE_MENU:
                                        switch (mapId) {
                                            case 5:
                                                switch (select) {                                  
                                                    case 0: // H·ªçc tuy·ªát k·ªπ
                                                        Item biKipTuyetKy = InventoryService.gI().findItemBagByTemp(player, (short) 1350);
                                                        if (biKipTuyetKy != null && biKipTuyetKy.quantity >= 9999 && player.inventory.gold >= 10_000_000 && player.inventory.gem >= 99) {
                                                            int skillID = player.gender == 0 ? 27 : player.gender == 1 ? 27 : 27;
                                                            Skill newSkill = SkillUtil.createSkill(skillID, 1);
                                                            String npcSay = "|1|Qua s·∫Ω d·∫°y ng∆∞∆°i chi√™u " + newSkill.template.name + "\n";
                                                            npcSay += "|2|" + biKipTuyetKy.getName() + " " + biKipTuyetKy.quantity + "/9999\n";
                                                            npcSay += "Gi√° v√†ng: 10.000.000\n";
                                                            npcSay += "Gi√° ng·ªçc: 99";
                                                            createOtherMenu(player, ConstNpc.HOC_TUYET_KY, npcSay, "ƒê·ªìng √Ω", "T·ª´ ch·ªëi");
                                                            return;
                                                        } else {
                                                            int skillID = player.gender == 0 ? 27 : player.gender == 1 ? 27 : 27;
                                                            Skill newSkill = SkillUtil.createSkill(skillID, 1);
                                                            String npcSay = "|1|Qua s·∫Ω d·∫°y ng∆∞∆°i chi√™u " + newSkill.template.name + " 1\n";
                                                            if (biKipTuyetKy == null || biKipTuyetKy.quantity < 9999) {
                                                                if (biKipTuyetKy == null) {
                                                                    npcSay += "|7|" + " " + "0/9999\n";
                                                                } else {
                                                                    npcSay += "|7|b√≠ k√≠p h√≥a h√¨nh" + " " + biKipTuyetKy.quantity + "/9999\n";
                                                                }
                                                            } else {
                                                                npcSay += "|2|" + biKipTuyetKy.getName() + " " + biKipTuyetKy.quantity + "/9999\n";
                                                            }
                                                            if (player.inventory.gold < 10_000_000) {
                                                                npcSay += "|7|Gi√° v√†ng: 10.000.000\n";
                                                            } else {
                                                                npcSay += "|2|Gi√° v√†ng: 10.000.000\n";
                                                            }
                                                            if (player.inventory.gem < 99) {
                                                                npcSay += "|7|Gi√° ng·ªçc: 99";
                                                            } else {
                                                                npcSay += "|2|Gi√° ng·ªçc: 99";
                                                            }
                                                            createOtherMenu(player, ConstNpc.HOC_TUYET_KY_2, npcSay, "T·ª´ ch·ªëi");
                                                            return;
                                                        }
                                                    case 1:
                                                        StringBuilder sb = new StringBuilder();
                        sb.append("|2|Ch·∫ø t·∫°o s√°ch bi·∫øn h√¨nh lv2\n ").append("Tuy·ªát Kƒ© H√≥a H√¨nh: ").append(InventoryService.gI().getQuantity(player, ConstItem.BI_KIP_HOA_HINH)).append("/999\n").append("Th·ªèi V√†ng: ").append(InventoryService.gI().getQuantity(player, ConstItem.THOI_VANG)).append("/999\n");
                       
                        Item bikiphoahinh = InventoryService.gI().findItem(player, ConstItem.BI_KIP_HOA_HINH, 999);
                        Item thoivang = InventoryService.gI().findItem(player, ConstItem.THOI_VANG, 999);
                        Inventory inv = player.inventory;
                        if (select == 0) {
                            sb.append("Gi√° v√†ng: 150.000.000\n");
                        }
                        sb.append("Gi√° v√†ng: 300.000.000\n").append("Gi√° h·ªìng ng·ªçc: 15");
                        ConfirmDialog confDialog = new ConfirmDialog(sb.toString(), () -> {
                            if (bikiphoahinh != null && thoivang != null) {
                                int cost = 150000000;
                                if (select == 1) {
                                    if (inv.ruby < 15) {
                                        Service.getInstance().sendThongBao(player, "B·∫°n kh√¥ng ƒë·ªß ti·ªÅn");
                                        return;
                                    }
                                    inv.subRuby(15);
                                    cost = 300000000;
                                }
                                if (inv.gold < cost) {
                                    Service.getInstance().sendThongBao(player, "B·∫°n kh√¥ng ƒë·ªß ti·ªÅn");
                                    return;
                                }
                                inv.subGold(cost);                                
                                InventoryService.gI().subQuantityItemsBag(player, bikiphoahinh, 999);
                                InventoryService.gI().subQuantityItemsBag(player, thoivang, 999);

                                int rwID = (select == 0 ? ConstItem.BIEN_HINH_LV2 : ConstItem.BIEN_HINH_LV2);
                                Item rw = ItemService.gI().createNewItem((short) rwID);
                                InventoryService.gI().addItemBag(player, rw, 1);
                                InventoryService.gI().sendItemBags(player);
                                Service.getInstance().sendThongBao(player, "B·∫°n Nh·∫≠n ƒë∆∞·ª£c " + rw.template.name);
                            } else {
                                Service.getInstance().sendThongBao(player, "Kh√¥ng ƒë·ªß v·∫≠t ph·∫©m");
                            }
                        });
                        confDialog.show(player);
                                                        break;
                                                        
                                                    case 2:
                                                        StringBuilder sb1 = new StringBuilder();
                                                        sb1.append("|2|Ch·∫ø t·∫°o s√°ch bi·∫øn h√¨nh lv3\n ").append("Tuy·ªát Kƒ© H√≥a H√¨nh: ").append(InventoryService.gI().getQuantity(player, ConstItem.BI_KIP_HOA_HINH)).append("/999\n").append("Th·ªèi V√†ng: ").append(InventoryService.gI().getQuantity(player, ConstItem.THOI_VANG)).append("/999\n");
                       
                        Item bikiphoahinh1 = InventoryService.gI().findItem(player, ConstItem.BI_KIP_HOA_HINH, 999);
                        Item thoivang1 = InventoryService.gI().findItem(player, ConstItem.THOI_VANG, 999);
                        Inventory inv1 = player.inventory;
                        if (select == 0) {
                            sb1.append("Gi√° v√†ng: 150.000.000\n");
                        }
                        sb1.append("Gi√° v√†ng: 300.000.000\n").append("Gi√° h·ªìng ng·ªçc: 15");
                        ConfirmDialog confDialog1 = new ConfirmDialog(sb1.toString(), () -> {
                            if (bikiphoahinh1 != null && thoivang1 != null) {
                                int cost = 150000000;
                                if (select == 1) {
                                    if (inv1.ruby < 15) {
                                        Service.getInstance().sendThongBao(player, "B·∫°n kh√¥ng ƒë·ªß ti·ªÅn");
                                        return;
                                    }
                                    inv1.subRuby(15);
                                    cost = 300000000;
                                }
                                if (inv1.gold < cost) {
                                    Service.getInstance().sendThongBao(player, "B·∫°n kh√¥ng ƒë·ªß ti·ªÅn");
                                    return;
                                }
                                inv1.subGold(cost);                                
                                InventoryService.gI().subQuantityItemsBag(player, bikiphoahinh1, 999);
                                InventoryService.gI().subQuantityItemsBag(player, thoivang1, 999);

                                int rwID = (select == 0 ? ConstItem.BIEN_HINH_LV3 : ConstItem.BIEN_HINH_LV3);
                                Item rw = ItemService.gI().createNewItem((short) rwID);
                                InventoryService.gI().addItemBag(player, rw, 1);
                                InventoryService.gI().sendItemBags(player);
                                Service.getInstance().sendThongBao(player, "B·∫°n Nh·∫≠n ƒë∆∞·ª£c " + rw.template.name);
                            } else {
                                Service.getInstance().sendThongBao(player, "Kh√¥ng ƒë·ªß v·∫≠t ph·∫©m");
                            }
                        });
                        confDialog1.show(player);
                                                        break;  
                                                 case 3:
                                                        StringBuilder sb2 = new StringBuilder();
                                                        sb2.append("|2|Ch·∫ø t·∫°o s√°ch bi·∫øn h√¨nh lv4\n ").append("Tuy·ªát Kƒ© H√≥a H√¨nh: ").append(InventoryService.gI().getQuantity(player, ConstItem.BI_KIP_HOA_HINH)).append("/999\n").append("Th·ªèi V√†ng: ").append(InventoryService.gI().getQuantity(player, ConstItem.THOI_VANG)).append("/999\n");
                       
                        Item bikiphoahinh2 = InventoryService.gI().findItem(player, ConstItem.BI_KIP_HOA_HINH, 999);
                        Item thoivang2 = InventoryService.gI().findItem(player, ConstItem.THOI_VANG, 999);
                        Inventory inv2 = player.inventory;
                        if (select == 0) {
                            sb2.append("Gi√° v√†ng: 150.000.000\n");
                        }
                        sb2.append("Gi√° v√†ng: 300.000.000\n").append("Gi√° h·ªìng ng·ªçc: 15");
                        ConfirmDialog confDialog2 = new ConfirmDialog(sb2.toString(), () -> {
                            if (bikiphoahinh2 != null && thoivang2 != null) {
                                int cost = 150000000;
                                if (select == 1) {
                                    if (inv2.ruby < 15) {
                                        Service.getInstance().sendThongBao(player, "B·∫°n kh√¥ng ƒë·ªß ti·ªÅn");
                                        return;
                                    }
                                    inv2.subRuby(15);
                                    cost = 300000000;
                                }
                                if (inv2.gold < cost) {
                                    Service.getInstance().sendThongBao(player, "B·∫°n kh√¥ng ƒë·ªß ti·ªÅn");
                                    return;
                                }
                                inv2.subGold(cost);                                
                                InventoryService.gI().subQuantityItemsBag(player, bikiphoahinh2, 999);
                                InventoryService.gI().subQuantityItemsBag(player, thoivang2, 999);

                                int rwID = (select == 0 ? ConstItem.BIEN_HINH_LV4 : ConstItem.BIEN_HINH_LV4);
                                Item rw = ItemService.gI().createNewItem((short) rwID);
                                InventoryService.gI().addItemBag(player, rw, 1);
                                InventoryService.gI().sendItemBags(player);
                                Service.getInstance().sendThongBao(player, "B·∫°n Nh·∫≠n ƒë∆∞·ª£c " + rw.template.name);
                            } else {
                                Service.getInstance().sendThongBao(player, "Kh√¥ng ƒë·ªß v·∫≠t ph·∫©m");
                            }
                        });
                        confDialog2.show(player);
                                                        break;
                 case 4:
                                                        StringBuilder sb3 = new StringBuilder();
                                                        sb3.append("|2|Ch·∫ø t·∫°o s√°ch bi·∫øn h√¨nh lv5\n ").append("Tuy·ªát Kƒ© H√≥a H√¨nh: ").append(InventoryService.gI().getQuantity(player, ConstItem.BI_KIP_HOA_HINH)).append("/999\n").append("Th·ªèi V√†ng: ").append(InventoryService.gI().getQuantity(player, ConstItem.THOI_VANG)).append("/999\n");
                       
                        Item bikiphoahinh3 = InventoryService.gI().findItem(player, ConstItem.BI_KIP_HOA_HINH, 999);
                        Item thoivang3 = InventoryService.gI().findItem(player, ConstItem.THOI_VANG, 999);
                        Inventory inv3 = player.inventory;
                        if (select == 0) {
                            sb3.append("Gi√° v√†ng: 150.000.000\n");
                        }
                        sb3.append("Gi√° v√†ng: 300.000.000\n").append("Gi√° h·ªìng ng·ªçc: 15");
                        ConfirmDialog confDialog3 = new ConfirmDialog(sb3.toString(), () -> {
                            if (bikiphoahinh3 != null && thoivang3 != null) {
                                int cost = 150000000;
                                if (select == 1) {
                                    if (inv3.ruby < 15) {
                                        Service.getInstance().sendThongBao(player, "B·∫°n kh√¥ng ƒë·ªß ti·ªÅn");
                                        return;
                                    }
                                    inv3.subRuby(15);
                                    cost = 300000000;
                                }
                                if (inv3.gold < cost) {
                                    Service.getInstance().sendThongBao(player, "B·∫°n kh√¥ng ƒë·ªß ti·ªÅn");
                                    return;
                                }
                                inv3.subGold(cost);                                
                                InventoryService.gI().subQuantityItemsBag(player, bikiphoahinh3, 999);
                                InventoryService.gI().subQuantityItemsBag(player, thoivang3, 999);

                                int rwID = (select == 0 ? ConstItem.BIEN_HINH_LV5 : ConstItem.BIEN_HINH_LV5);
                                Item rw = ItemService.gI().createNewItem((short) rwID);
                                InventoryService.gI().addItemBag(player, rw, 1);
                                InventoryService.gI().sendItemBags(player);
                                Service.getInstance().sendThongBao(player, "B·∫°n Nh·∫≠n ƒë∆∞·ª£c " + rw.template.name);
                            } else {
                                Service.getInstance().sendThongBao(player, "Kh√¥ng ƒë·ªß v·∫≠t ph·∫©m");
                            }
                        });
                        confDialog3.show(player);
                                                        break;
                                        }
                                    case ConstNpc.HOC_TUYET_KY:
                                        switch (select) {
                                            case 0:
                                                Item biKipTuyetKy = InventoryService.gI().findItemBagByTemp(player, (short) 1350);
                                                int skillID = player.gender == 0 ? 27 : player.gender == 1 ? 27 : 27;
                                                Skill newSkill = SkillUtil.createSkill(skillID, 1);
                                                try {
                                                    Message msg = Service.getInstance().messageSubCommand((byte) 23);
                                                    msg.writer().writeShort(newSkill.skillId);
                                                    player.sendMessage(msg);
                                                    msg.cleanup();
                                                } catch (IOException e) {
                                                }
                                                try { // send effect susscess
                                                    Message msg = new Message(-81);
                                                    msg.writer().writeByte(0);
                                                    msg.writer().writeUTF("test");
                                                    msg.writer().writeUTF("test");
                                                    msg.writer().writeShort(tempId);
                                                    player.sendMessage(msg);
                                                    msg.cleanup();

                                                    msg = new Message(-81);
                                                    msg.writer().writeByte(1);
                                                    msg.writer().writeByte(2);
                                                    msg.writer().writeByte(InventoryService.gI().getIndexBag(player, biKipTuyetKy));
                                                    msg.writer().writeByte(-1);
                                                    player.sendMessage(msg);
                                                    msg.cleanup();

                                                    msg = new Message(-81);
                                                    msg.writer().writeByte(7);
                                                    msg.writer().writeShort(newSkill.template.iconId);
                                                    player.sendMessage(msg);
                                                    msg.cleanup();
                                                } catch (Exception e) {
                                                }
                                                Inventory inv = player.inventory;
                                                InventoryService.gI().subQuantityItemsBag(player, biKipTuyetKy, 9999);
                                                InventoryService.gI().sendItemBags(player);
                                                inv.subGold(10_000_000);
                                                inv.subGem(99);
                                                SkillUtil.setSkill(player, newSkill);
                                        }
                                        return;
                                        }
                                        
                                        
                                }
                            }
                        }
                    };
                    break;

                case ConstNpc.BO_MONG:
                    npc = new Npc(mapId, status, cx, cy, tempId, avartar) {
                        @Override
                        public void openBaseMenu(Player player) {
                            if (canOpenNpc(player)) {
                                if (this.mapId == 47 || this.mapId == 84) {
                                    this.createOtherMenu(player, ConstNpc.BASE_MENU, "Xin ch√†o, c·∫≠u mu·ªën t√¥i gi√∫p g√¨?",
                                            "Nhi·ªám v·ª•\nh√†ng ng√†y", "M√£ qu√† t·∫∑ng", "Nh·∫≠n ng·ªçc\nmi·ªÖn ph√≠", "T·ª´ ch·ªëi");
                                }
                            }
                        }

                        @Override
                        public void confirmMenu(Player player, int select) {
                            if (canOpenNpc(player)) {
                                if (this.mapId == 47 || this.mapId == 84) {
                                    if (player.iDMark.isBaseMenu()) {
                                        switch (select) {
                                            case 0:
                                                if (player.playerTask.sideTask.template != null) {
                                                    String npcSay = "Nhi·ªám v·ª• hi·ªán t·∫°i: "
                                                            + player.playerTask.sideTask.getName() + " ("
                                                            + player.playerTask.sideTask.getLevel() + ")"
                                                            + "\nHi·ªán t·∫°i ƒë√£ ho√†n th√†nh: "
                                                            + player.playerTask.sideTask.count + "/"
                                                            + player.playerTask.sideTask.maxCount + " ("
                                                            + player.playerTask.sideTask.getPercentProcess()
                                                            + "%)\nS·ªë nhi·ªám v·ª• c√≤n l·∫°i trong ng√†y: "
                                                            + player.playerTask.sideTask.leftTask + "/"
                                                            + ConstTask.MAX_SIDE_TASK;
                                                    this.createOtherMenu(player, ConstNpc.MENU_OPTION_PAY_SIDE_TASK,
                                                            npcSay, "Tr·∫£ nhi·ªám\nv·ª•", "H·ªßy nhi·ªám\nv·ª•");
                                                } else {
                                                    this.createOtherMenu(player, ConstNpc.MENU_OPTION_LEVEL_SIDE_TASK,
                                                            "T√¥i c√≥ v√†i nhi·ªám v·ª• theo c·∫•p b·∫≠c, "
                                                            + "s·ª©c c·∫≠u c√≥ th·ªÉ l√†m ƒë∆∞·ª£c c√°i n√†o?",
                                                            "D·ªÖ", "B√¨nh th∆∞·ªùng", "Kh√≥", "Si√™u kh√≥", "T·ª´ ch·ªëi");
                                                }
                                                break;

                                            case 1:
                                                Input.gI().createFormGiftCode(player);
                                                break;
                                            case 2:
                                                TaskService.gI().checkDoneAchivements(player);
                                                TaskService.gI().sendAchivement(player);
                                                break;
                                        }
                                    } else if (player.iDMark.getIndexMenu() == ConstNpc.MENU_OPTION_LEVEL_SIDE_TASK) {
                                        switch (select) {
                                            case 0:
                                            case 1:
                                            case 2:
                                            case 3:
                                                TaskService.gI().changeSideTask(player, (byte) select);
                                                break;
                                        }
                                    } else if (player.iDMark.getIndexMenu() == ConstNpc.MENU_OPTION_PAY_SIDE_TASK) {
                                        switch (select) {
                                            case 0:
                                                TaskService.gI().paySideTask(player);
                                                break;
                                            case 1:
                                                TaskService.gI().removeSideTask(player);
                                                break;
                                        }
                                    }
                                }
                            }
                        }
                    };
                    break;
                case ConstNpc.GOKU_SSJ:
                    npc = new Npc(mapId, status, cx, cy, tempId, avartar) {
                        @Override
                        public void openBaseMenu(Player player) {
                            if (canOpenNpc(player)) {
                                if (this.mapId == 80) {
                                    this.createOtherMenu(player, ConstNpc.BASE_MENU,
                                            "Xin ch√†o, t√¥i c√≥ th·ªÉ gi√∫p g√¨ cho c·∫≠u?", "T·ªõi h√†nh tinh\nYardart",
                                            "T·ª´ ch·ªëi");
                                } else if (this.mapId == 131) {
                                    this.createOtherMenu(player, ConstNpc.BASE_MENU,
                                            "Xin ch√†o, t√¥i c√≥ th·ªÉ gi√∫p g√¨ cho c·∫≠u?", "Quay v·ªÅ", "T·ª´ ch·ªëi");
                                } else {
                                    super.openBaseMenu(player);
                                }
                            }
                        }

                        @Override
                        public void confirmMenu(Player player, int select) {
                            if (canOpenNpc(player)) {
                                switch (player.iDMark.getIndexMenu()) {
                                    case ConstNpc.BASE_MENU:
                                        if (this.mapId == 80) {
                                            // if (select == 0) {
                                            // if (TaskService.gI().getIdTask(player) >= ConstTask.TASK_24_0) {
                                            // ChangeMapService.gI().changeMapBySpaceShip(player, 160, -1, 168);
                                            // } else {
                                            // this.npcChat(player, "Xin l·ªói, t√¥i ch∆∞a th·ªÉ ƒë∆∞a c·∫≠u t·ªõi n∆°i ƒë√≥ l√∫c
                                            // n√†y...");
                                            // }
                                            // } else
                                            if (select == 0) {
                                                ChangeMapService.gI().changeMapBySpaceShip(player, 131, -1, 940);
                                            }
                                        } else if (this.mapId == 131) {
                                            if (select == 0) {
                                                ChangeMapService.gI().changeMapBySpaceShip(player, 80, -1, 870);
                                            }
                                        }
                                        break;
                                }
                            }
                        }
                    };
                    break;
                case ConstNpc.GOKU_SSJ_:
                    npc = new Npc(mapId, status, cx, cy, tempId, avartar) {
                        @Override
                        public void openBaseMenu(Player player) {
                            if (canOpenNpc(player)) {
                                if (this.mapId == 133) {
                                    Item biKiep = InventoryService.gI().findItem(player.inventory.itemsBag, 590);
                                    int soLuong = 0;
                                    if (biKiep != null) {
                                        soLuong = biKiep.quantity;
                                    }
                                    if (soLuong >= 10000) {
                                        this.createOtherMenu(player, ConstNpc.BASE_MENU, "B·∫°n ƒëang c√≥ " + soLuong
                                                + " b√≠ ki·∫øp.\n"
                                                + "H√£y ki·∫øm ƒë·ªß 10000 b√≠ ki·∫øp t√¥i s·∫Ω d·∫°y b·∫°n c√°ch d·ªãch chuy·ªÉn t·ª©c th·ªùi c·ªßa ng∆∞·ªùi Yardart",
                                                "H·ªçc d·ªãch\nchuy·ªÉn", "ƒê√≥ng");
                                    } else {
                                        this.createOtherMenu(player, ConstNpc.BASE_MENU, "B·∫°n ƒëang c√≥ " + soLuong
                                                + " b√≠ ki·∫øp.\n"
                                                + "H√£y ki·∫øm ƒë·ªß 10000 b√≠ ki·∫øp t√¥i s·∫Ω d·∫°y b·∫°n c√°ch d·ªãch chuy·ªÉn t·ª©c th·ªùi c·ªßa ng∆∞·ªùi Yardart",
                                                "ƒê√≥ng");
                                    }
                                }
                            }
                        }

                        @Override
                        public void confirmMenu(Player player, int select) {
                            if (canOpenNpc(player)) {
                                if (this.mapId == 133) {
                                    Item biKiep = InventoryService.gI().findItem(player.inventory.itemsBag, 590);
                                    int soLuong = 0;
                                    if (biKiep != null) {
                                        soLuong = biKiep.quantity;
                                    }
                                    if (soLuong >= 10000 && InventoryService.gI().getCountEmptyBag(player) > 0) {
                                        Item yardart = ItemService.gI().createNewItem((short) (player.gender + 592));
                                        yardart.itemOptions.add(new ItemOption(47, 400));
                                        yardart.itemOptions.add(new ItemOption(108, 10));
                                        InventoryService.gI().addItemBag(player, yardart, 0);
                                        InventoryService.gI().subQuantityItemsBag(player, biKiep, 10000);
                                        InventoryService.gI().sendItemBags(player);
                                        Service.getInstance().sendThongBao(player,
                                                "B·∫°n v·ª´a nh·∫≠n ƒë∆∞·ª£c trang ph·ª•c t·ªôc Yardart");
                                    }
                                }
                            }
                        }
                    };
                    break;
                case ConstNpc.GHI_DANH:
                    npc = new Npc(mapId, status, cx, cy, tempId, avartar) {
                        String[] menuselect = new String[]{};

                        @Override
                        public void openBaseMenu(Player player) {
                            if (canOpenNpc(player)) {
                                if (this.mapId == ConstMap.DAI_HOI_VO_THUAT) {
                                    int crrHOUR = TimeUtil.getCurrHour();
                                    if (DaiHoiVoThuatManager.gI().openDHVT && (System.currentTimeMillis() <= DaiHoiVoThuatManager.gI().tOpenDHVT)) {
                                        String nameDH = DaiHoiVoThuatManager.gI().nameRoundDHVT();
                                        this.createOtherMenu(player, ConstNpc.DAI_HOI_VO_THUAT, "Ch√†o m·ª´ng b·∫°n ƒë·∫øn v·ªõi ƒë·∫°i h·ªôi v√µ thu·∫≠t\n"
                                                + "Gi·∫£i " + nameDH + " ƒëang c√≥ " + DaiHoiVoThuatManager.gI().lstIDPlayers.size() + " ng∆∞·ªùi ƒëƒÉng k√Ω thi ƒë·∫•u\n" + DaiHoiVoThuatService.gI().textDaiHoi(player.nPoint.power), "Th√¥ng tin\nChi ti·∫øt", "ƒêƒÉng k√≠", "Gi·∫£i\nSi√™u H·∫°ng", "ƒê·∫°i H·ªôi\nV√µ Thu·∫≠t\nL·∫ßn th·ª©\n23");
                                    } else {
                                        this.createOtherMenu(player, ConstNpc.BASE_MENU, "ƒê√£ h·∫øt h·∫°n ƒëƒÉng k√Ω thi ƒë·∫•u, xin vui l√≤ng ch·ªù ƒë·∫øn gi·∫£i sau" + DaiHoiVoThuatManager.gI().timeDHVTnext(crrHOUR) + "\n" + DaiHoiVoThuatService.gI().textDaiHoi(player.nPoint.power), new String[]{"Th√¥ng tin\bChi ti·∫øt", "Gi·∫£i\nSi√™u H·∫°ng", "ƒê·∫°i H·ªôi\nV√µ Thu·∫≠t\nL·∫ßn th·ª©\n23", "√ê√≥ng"});
                                    }
                                } else if (this.mapId == ConstMap.DAI_HOI_VO_THUAT_129) {
                                    int goldchallenge = player.goldChallenge;
                                    if (player.levelWoodChest == 0) {
                                        menuselect = new String[]{
                                            "H∆∞·ªõng\nd·∫´n\nth√™m",
                                            "Thi ƒë·∫•u\n" + player.gemChallenge + " ng·ªçc",
                                            "Thi ƒë·∫•u\n" + Util.numberToMoney(goldchallenge) + "\nv√†ng",
                                            "V·ªÅ\nƒê·∫°i H·ªôi\nV√µ Thu·∫≠t"};
                                    } else {
                                        menuselect = new String[]{
                                            "H∆∞·ªõng\nd·∫´n\nth√™m",
                                            "Thi ƒë·∫•u\n" + player.gemChallenge + " ng·ªçc",
                                            "Thi ƒë·∫•u\n" + Util.numberToMoney(goldchallenge) + "\nv√†ng",
                                            "Nh·∫≠n\nth∆∞·ªüng\n R∆∞∆°ng C·∫•p " + player.levelWoodChest,
                                            "V·ªÅ\nƒê·∫°i H·ªôi\nV√µ Thu·∫≠t"};
                                    }
                                    this.createOtherMenu(player, ConstNpc.BASE_MENU,
                                            "ƒê·∫°i h·ªôi v√µ thu·∫≠t l·∫ßn th·ª© 23\n"
                                            + "Di·ªÖn ra b·∫•t k·ªÉ ng√†y ƒë√™m, ng√†y ngh·ªâ, ng√†y l·ªÖ\n"
                                            + "Ph·∫ßn th∆∞·ªüng v√¥ c√πng qu√Ω gi√°\n"
                                            + "Nhanh ch√≥ng tham gia n√†o",
                                            menuselect, "T·ª´ ch·ªëi");
                                } else {
                                    super.openBaseMenu(player);
                                }
                            }
                        }

                        @Override
                        public void confirmMenu(Player player, int select) {
                            if (canOpenNpc(player)) {
                                switch (player.iDMark.getIndexMenu()) {
                                    case ConstNpc.DAI_HOI_VO_THUAT:
                                        switch (select) {
                                            case 0:
                                                NpcService.gI().createTutorial(player, avartar, "L·ªãch thi ƒë·∫•u trong ng√†y\b Gi·∫£i Nhi ƒë·ªìng: 8,14,18h\b Gi·∫£i Si√™u c·∫•p 1: 9,13,19h\b Gi·∫£i Si√™u c·∫•p 2: 10,15,20h\b Gi·∫£i Si√™u c·∫•p 3: 11,16,21h\b Gi·∫£i Ngo·∫°i h·∫°ng: 12,17,22,23h\n"
                                                        + "Gi·∫£i th∆∞·ªüng khi th·∫Øng m·ªói v√≤ng\b Gi·∫£i Nhi ƒë·ªìng: 2 ng·ªçc\b Gi·∫£i Si√™u c·∫•p 1: 4 ng·ªçc\b Gi·∫£i Si√™u c·∫•p 2: 6 ng·ªçc\b Gi·∫£i Si√™u c·∫•p 3: 8 ng·ªçc\b Gi·∫£i Ngo·∫°i h·∫°ng: 10.000 v√†ng\b V√¥ ƒë·ªãch: 5 vi√™n ƒë√° n√¢ng c·∫•p\n"
                                                        + "L·ªá ph√≠ ƒëƒÉng k√Ω c√°c gi·∫£i ƒë·∫•u\b Gi·∫£i Nhi ƒë·ªìng: 2 ng·ªçc\b Gi·∫£i Si√™u c·∫•p 1: 4 ng·ªçc\b Gi·∫£i Si√™u c·∫•p 2: 6 ng·ªçc\b Gi·∫£i Si√™u c·∫•p 3: 8 ng·ªçc\b Gi·∫£i Ngo·∫°i h·∫°ng: 10.000 v√†ng\n"
                                                        + "Vui l√≤ng ƒë·∫øn ƒë√∫ng gi·ªù ƒë·ªÉ ƒëƒÉng k√Ω thi ƒë·∫•u");
                                                break;
                                            case 1:
                                                this.createOtherMenu(player, ConstNpc.DANG_KY_DAI_HOI_VO_THUAT, "Hi·ªán ƒëang c√≥ gi·∫£i ƒë·∫•u " + DaiHoiVoThuatManager.gI().nameRoundDHVT() + " b·∫°n c√≥ mu·ªën ƒëƒÉng k√Ω kh√¥ng?", "Gi·∫£i\n " + DaiHoiVoThuatManager.gI().nameRoundDHVT() + "\n(" + DaiHoiVoThuatManager.gI().costRoundDHVT() + ")", "T·ª´ ch·ªëi");
                                                break;
                                            case 2:
                                            
                                                ChangeMapService.gI().changeMapNonSpaceship(player, 113, player.location.x, 360);
                                                break;
                                            case 3:
                                                ChangeMapService.gI().changeMapNonSpaceship(player, 129, player.location.x, 360);
                                                break;
                                        }
                                        return;
                                    case ConstNpc.DANG_KY_DAI_HOI_VO_THUAT:
                                        switch (select) {
                                            case 0:
                                                if (DaiHoiVoThuatService.gI().canRegisDHVT(player.nPoint.power)) {
                                                    if (DaiHoiVoThuatManager.gI().lstIDPlayers.size() < 256) {
                                                        if (DaiHoiVoThuatManager.gI().typeDHVT == (byte) 5 && player.inventory.gold >= 10000) {
                                                            if (DaiHoiVoThuatManager.gI().isAssignDHVT(player.id)) {
                                                                Service.getInstance().sendThongBao(player, "B·∫°n ƒë√£ ƒëƒÉng k√Ω tham gia ƒë·∫°i h·ªôi v√µ thu·∫≠t r·ªìi");
                                                            } else {
                                                                player.inventory.gold -= 10000;
                                                                Service.getInstance().sendMoney(player);
                                                                Service.getInstance().sendThongBao(player, "B·∫°n ƒë√£ ƒëƒÉng k√Ω th√†nh c√¥ng, nh·ªõ c√≥ m·∫∑t t·∫°i ƒë√¢y tr∆∞·ªõc gi·ªù thi ƒë·∫•u");
                                                                DaiHoiVoThuatManager.gI().lstIDPlayers.add(player.id);
                                                            }
                                                        } else if (DaiHoiVoThuatManager.gI().typeDHVT > (byte) 0 && DaiHoiVoThuatManager.gI().typeDHVT < (byte) 5 && player.inventory.gem >= (int) (2 * DaiHoiVoThuatManager.gI().typeDHVT)) {
                                                            if (DaiHoiVoThuatManager.gI().isAssignDHVT(player.id)) {
                                                                Service.getInstance().sendThongBao(player, "B·∫°n ƒë√£ ƒëƒÉng k√Ω tham gia ƒë·∫°i h·ªôi v√µ thu·∫≠t r·ªìi");
                                                            } else {
                                                                player.inventory.gem -= (int) (2 * DaiHoiVoThuatManager.gI().typeDHVT);
                                                                Service.getInstance().sendMoney(player);
                                                                Service.getInstance().sendThongBao(player, "B·∫°n ƒë√£ ƒëƒÉng k√Ω th√†nh c√¥ng, nh·ªõ c√≥ m·∫∑t t·∫°i ƒë√¢y tr∆∞·ªõc gi·ªù thi ƒë·∫•u");
                                                                DaiHoiVoThuatManager.gI().lstIDPlayers.add(player.id);
                                                            }
                                                        } else {
                                                            Service.getInstance().sendThongBao(player, "Kh√¥ng ƒë·ªß v√†ng ng·ªçc ƒë·ªÉ ƒëƒÉng k√Ω thi ƒë·∫•u");
                                                        }
                                                    } else {
                                                        Service.getInstance().sendThongBao(player, "Hi·ªán t·∫°i ƒë√£ ƒë·∫°t t·ªõi s·ªë l∆∞·ª£ng ng∆∞·ªùi ƒëƒÉng k√Ω t·ªëi ƒëa, xin h√£y ch·ªù ƒë·∫øn gi·∫£i sau");
                                                    }

                                                } else {
                                                    NpcService.gI().createTutorial(player, avartar, DaiHoiVoThuatService.gI().textDaiHoi2(player.nPoint.power));
                                                }
                                        }
                                        return;
                                    case ConstNpc.MENU_NHAN_RUONG:
                                        switch (select) {
                                            case 0:
                                                if (!player.receivedWoodChest) {
                                                    if (InventoryService.gI().getCountEmptyBag(player) > 0) {
                                                        Item it = ItemService.gI()
                                                                .createNewItem((short) ConstItem.RUONG_GO);
                                                        it.itemOptions.add(new ItemOption(72, player.levelWoodChest));
                                                        it.createTime = System.currentTimeMillis();
                                                        InventoryService.gI().addItemBag(player, it, 0);
                                                        InventoryService.gI().sendItemBags(player);
                                                        NpcService.gI().createMenuConMeo(player, 251020003, -1, "B·∫°n nh·∫≠n ƒë∆∞·ª£c\n"
                                                                + "|1|R∆∞∆°ng g·ªó\n"
                                                                + "|2|Gi·∫•u b√™n trong nhi·ªÅu v·∫≠t ph·∫©m qu√Ω gi√°", "OK");
                                                        player.receivedWoodChest = true;
                                                        player.levelWoodChest = 0;
                                                        return;
                                                    } else {
                                                        this.npcChat(player, "H√†nh trang ƒë√£ ƒë·∫ßy");
                                                    }
                                                } else {
                                                    Service.getInstance().sendThongBao(player,
                                                            "M·ªói ng√†y ch·ªâ c√≥ th·ªÉ nh·∫≠n r∆∞∆°ng b√°u 1 l·∫ßn");
                                                }
                                                break;
                                        }
                                        break;
                                    case ConstNpc.BASE_MENU:
                                        if (this.mapId == ConstMap.DAI_HOI_VO_THUAT) {
                                            if (player.iDMark.isBaseMenu()) {
                                                switch (select) {
                                                    case 0:
                                                        NpcService.gI().createTutorial(player, avartar, "L·ªãch thi ƒë·∫•u trong ng√†y\b Gi·∫£i Nhi ƒë·ªìng: 8,14,18h\b Gi·∫£i Si√™u c·∫•p 1: 9,13,19h\b Gi·∫£i Si√™u c·∫•p 2: 10,15,20h\b Gi·∫£i Si√™u c·∫•p 3: 11,16,21h\b Gi·∫£i Ngo·∫°i h·∫°ng: 12,17,22,23h\n"
                                                                + "Gi·∫£i th∆∞·ªüng khi th·∫Øng m·ªói v√≤ng\b Gi·∫£i Nhi ƒë·ªìng: 2 ng·ªçc\b Gi·∫£i Si√™u c·∫•p 1: 4 ng·ªçc\b Gi·∫£i Si√™u c·∫•p 2: 6 ng·ªçc\b Gi·∫£i Si√™u c·∫•p 3: 8 ng·ªçc\b Gi·∫£i Ngo·∫°i h·∫°ng: 10.000 v√†ng\b V√¥ ƒë·ªãch: 5 vi√™n ƒë√° n√¢ng c·∫•p\n"
                                                                + "L·ªá ph√≠ ƒëƒÉng k√Ω c√°c gi·∫£i ƒë·∫•u\b Gi·∫£i Nhi ƒë·ªìng: 2 ng·ªçc\b Gi·∫£i Si√™u c·∫•p 1: 4 ng·ªçc\b Gi·∫£i Si√™u c·∫•p 2: 6 ng·ªçc\b Gi·∫£i Si√™u c·∫•p 3: 8 ng·ªçc\b Gi·∫£i Ngo·∫°i h·∫°ng: 10.000 v√†ng\n"
                                                                + "Vui l√≤ng ƒë·∫øn ƒë√∫ng gi·ªù ƒë·ªÉ ƒëƒÉng k√Ω thi ƒë·∫•u");
                                                        break;
                                                    case 1:
                                                      //  NpcService.gI().createTutorial(player, avartar, "Ch·ª©c nƒÉng ƒëang ƒë∆∞·ª£c ph√°t tri·ªÉn");
                                                        ChangeMapService.gI().changeMapNonSpaceship(player, 113, player.location.x, 360);
                                                        break;
                                                    case 2:
                                                        ChangeMapService.gI().changeMapNonSpaceship(player, 129, player.location.x, 360);
                                                        break;
                                                }
                                            }
                                        } else if (this.mapId == ConstMap.DAI_HOI_VO_THUAT_129) {
                                            int goldchallenge = player.goldChallenge;
                                            if (player.levelWoodChest == 0) {
                                                switch (select) {
                                                    case 0:
                                                        NpcService.gI().createTutorial(player, avartar, "ƒê·∫°i h·ªôi quy t·ª• nhi·ªÅu cao th·ªß nh∆∞ Jacky Chun, Thi√™n Xin HƒÉng, T√†u B·∫£y B·∫£y...\bPh·∫ßn th∆∞·ªüng l√† 1 r∆∞∆°ng g·ªó ch·ª©a nhi·ªÅu v·∫≠t ph·∫©m gi√° tr·ªã\bKhi h·∫° ƒë∆∞·ª£c 1 ƒë·ªëi th·ªß, ph·∫ßn th∆∞·ªüng s·∫Ω n√¢ng l√™n 1 c·∫•p\bR∆∞∆°ng c√†ng cao c·∫•p, v·∫≠t ph·∫©m trong ƒë√≥ c√†ng gi√° tr·ªã h∆°n\n"
                                                                + "M·ªói ng√†y b·∫°n ch·ªâ ƒë∆∞·ª£c nh·∫≠n 1 ph·∫ßn th∆∞·ªüng\bB·∫°n h√£y c·ªë g·∫Øng h·∫øt s·ª©c m√¨nh ƒë·ªÉ\b nh·∫≠n ph·∫ßn th∆∞·ªüng x·ª©ng ƒë√°ng nh·∫•t nh√©");
                                                        break;
                                                    case 1:
                                                        if (!player.receivedWoodChest) {
                                                            if (InventoryService.gI().finditemWoodChest(player)) {
                                                                if (player.inventory.getGem() >= player.gemChallenge) {
                                                                    DHVT23Service.gI().startChallenge(player);
                                                                    player.inventory.subGem(player.gemChallenge);
                                                                    PlayerService.gI().sendInfoHpMpMoney(player);
                                                                    player.goldChallenge += 50000;
                                                                    player.gemChallenge += 1;
                                                                } else {
                                                                    Service.getInstance().sendThongBao(player,
                                                                            "Kh√¥ng ƒë·ªß ng·ªçc, c√≤n thi·∫øu "
                                                                            + Util.numberToMoney(player.gemChallenge
                                                                                    - player.inventory.gem)
                                                                            + " ng·ªçc n·ªØa");
                                                                }
                                                            } else {
                                                                Service.getInstance().sendThongBao(player,
                                                                        "H√£y m·ªü r∆∞∆°ng b√°u v·∫≠t tr∆∞·ªõc");
                                                            }
                                                        } else {
                                                            Service.getInstance().sendThongBao(player,
                                                                    "H√£y ch·ªù ƒë·∫øn ng√†y mai");
                                                        }
                                                        break;
                                                    case 2:
                                                        if (!player.receivedWoodChest) {
                                                            if (InventoryService.gI().finditemWoodChest(player)) {
                                                                if (player.inventory.getGold() >= goldchallenge) {
                                                                    DHVT23Service.gI().startChallenge(player);
                                                                    player.inventory.subGold(goldchallenge);
                                                                    PlayerService.gI().sendInfoHpMpMoney(player);
                                                                    player.goldChallenge += 50000;
                                                                    player.gemChallenge += 1;
                                                                } else {
                                                                    Service.getInstance().sendThongBao(player,
                                                                            "Kh√¥ng ƒë·ªß v√†ng, c√≤n thi·∫øu "
                                                                            + Util.numberToMoney(goldchallenge
                                                                                    - player.inventory.gold)
                                                                            + " v√†ng n·ªØa");
                                                                }
                                                            } else {
                                                                Service.getInstance().sendThongBao(player,
                                                                        "H√£y m·ªü r∆∞∆°ng b√°u v·∫≠t tr∆∞·ªõc");
                                                            }
                                                            break;
                                                        } else {
                                                            Service.getInstance().sendThongBao(player,
                                                                    "H√£y ch·ªù ƒë·∫øn ng√†y mai");
                                                        }
                                                        break;
                                                    case 3:
                                                        ChangeMapService.gI().changeMapNonSpaceship(player,
                                                                ConstMap.DAI_HOI_VO_THUAT, player.location.x, 336);
                                                        break;
                                                }
                                            } else {
                                                switch (select) {
                                                    case 0:
                                                        NpcService.gI().createTutorial(player, avartar, "ƒê·∫°i h·ªôi quy t·ª• nhi·ªÅu cao th·ªß nh∆∞ Jacky Chun, Thi√™n Xin HƒÉng, T√†u B·∫£y B·∫£y...\bPh·∫ßn th∆∞·ªüng l√† 1 r∆∞∆°ng g·ªó ch·ª©a nhi·ªÅu v·∫≠t ph·∫©m gi√° tr·ªã\bKhi h·∫° ƒë∆∞·ª£c 1 ƒë·ªëi th·ªß, ph·∫ßn th∆∞·ªüng s·∫Ω n√¢ng l√™n 1 c·∫•p\bR∆∞∆°ng c√†ng cao c·∫•p, v·∫≠t ph·∫©m trong ƒë√≥ c√†ng gi√° tr·ªã h∆°n\n"
                                                                + "M·ªói ng√†y b·∫°n ch·ªâ ƒë∆∞·ª£c nh·∫≠n 1 ph·∫ßn th∆∞·ªüng\bB·∫°n h√£y c·ªë g·∫Øng h·∫øt s·ª©c m√¨nh ƒë·ªÉ\b nh·∫≠n ph·∫ßn th∆∞·ªüng x·ª©ng ƒë√°ng nh·∫•t nh√©");
                                                        break;
                                                    case 1:
                                                        if (!player.receivedWoodChest) {
                                                            if (InventoryService.gI().finditemWoodChest(player)) {
                                                                if (player.inventory.getGem() >= player.gemChallenge) {
                                                                    DHVT23Service.gI().startChallenge(player);
                                                                    player.inventory.subGem(player.gemChallenge);
                                                                    PlayerService.gI().sendInfoHpMpMoney(player);
                                                                    player.goldChallenge += 50000;
                                                                    player.gemChallenge += 1;
                                                                } else {
                                                                    Service.getInstance().sendThongBao(player,
                                                                            "Kh√¥ng ƒë·ªß ng·ªçc, c√≤n thi·∫øu "
                                                                            + Util.numberToMoney(player.gemChallenge
                                                                                    - player.inventory.gem)
                                                                            + " ng·ªçc n·ªØa");
                                                                }
                                                            } else {
                                                                Service.getInstance().sendThongBao(player,
                                                                        "H√£y m·ªü r∆∞∆°ng b√°u v·∫≠t tr∆∞·ªõc");
                                                            }
                                                        } else {
                                                            Service.getInstance().sendThongBao(player,
                                                                    "H√£y ch·ªù ƒë·∫øn ng√†y mai");
                                                        }

                                                        break;
                                                    case 2:
                                                        if (!player.receivedWoodChest) {
                                                            if (InventoryService.gI().finditemWoodChest(player)) {
                                                                if (player.inventory.getGold() >= goldchallenge) {
                                                                    DHVT23Service.gI().startChallenge(player);
                                                                    player.inventory.subGold(goldchallenge);
                                                                    PlayerService.gI().sendInfoHpMpMoney(player);
                                                                    player.goldChallenge += 2000000;
                                                                } else {
                                                                    Service.getInstance().sendThongBao(player,
                                                                            "Kh√¥ng ƒë·ªß v√†ng, c√≤n thi·∫øu "
                                                                            + Util.numberToMoney(goldchallenge
                                                                                    - player.inventory.gold)
                                                                            + " v√†ng");
                                                                }
                                                            } else {
                                                                Service.getInstance().sendThongBao(player,
                                                                        "H√£y m·ªü r∆∞∆°ng b√°u v·∫≠t tr∆∞·ªõc");
                                                            }
                                                        } else {
                                                            Service.getInstance().sendThongBao(player,
                                                                    "H√£y ch·ªù ƒë·∫øn ng√†y mai");
                                                        }
                                                        break;
                                                    case 3:
                                                        createOtherMenu(player, ConstNpc.MENU_NHAN_RUONG, "Ph·∫ßn th∆∞·ªüng c·ªßa b·∫°n ƒëang ·ªü c·∫•p " + player.levelWoodChest + " / 12\n"
                                                                + "M·ªói ng√†y ch·ªâ ƒë∆∞·ª£c nh·∫≠n ph·∫ßn th∆∞·ªüng 1 l·∫ßn\n"
                                                                + "b·∫°n c√≥ ch·∫Øc s·∫Ω nh·∫≠n ph·∫ßn th∆∞·ªüng ngay b√¢y gi·ªù?",
                                                                "OK", "T·ª´ ch·ªëi");
                                                        break;
                                                    case 4:
                                                        ChangeMapService.gI().changeMapNonSpaceship(player,
                                                                ConstMap.DAI_HOI_VO_THUAT, player.location.x, 336);
                                                        break;
                                                }
                                            }
                                        }
                                        break;
                                }
                            }
                        }
                    };
                    break;
                case ConstNpc.NOI_BANH:
                    npc = new Npc(mapId, status, cx, cy, tempId, avartar) {
                        @Override
                        public void openBaseMenu(Player player) {
                            if (canOpenNpc(player)) {
                                this.createOtherMenu(player, ConstNpc.BASE_MENU,
                                        "Xin ch√†o " + player.name + "\nT√¥i l√† n·ªìi n·∫•u b√°nh\nT√¥i c√≥ th·ªÉ gi√∫p g√¨ cho b·∫°n",
                                        "L√†m\nB√°nh T√©t", "L√†m\nB√°nh Ch∆∞ng", getMenuLamBanh(player, 0),
                                        getMenuLamBanh(player, 1), "ƒê·ªïi H·ªôp\nQu√† T·∫øt");
                            }
                        }

                        @Override
                        public void confirmMenu(Player player, int select) {
                            if (canOpenNpc(player)) {
                                switch (player.iDMark.getIndexMenu()) {
                                    case ConstNpc.BASE_MENU:
                                        switch (select) {
                                            case 0:
                                                Item thitBaChi = InventoryService.gI().findItem(player,
                                                        ConstItem.THIT_BA_CHI, 99);
                                                Item gaoNep = InventoryService.gI().findItem(player, ConstItem.GAO_NEP,
                                                        99);
                                                Item doXanh = InventoryService.gI().findItem(player, ConstItem.DO_XANH,
                                                        99);
                                                Item laChuoi = InventoryService.gI().findItem(player,
                                                        ConstItem.LA_CHUOI, 99);
                                                if (thitBaChi != null && gaoNep != null && doXanh != null
                                                        && laChuoi != null) {
                                                    InventoryService.gI().subQuantityItemsBag(player, thitBaChi, 99);
                                                    InventoryService.gI().subQuantityItemsBag(player, gaoNep, 99);
                                                    InventoryService.gI().subQuantityItemsBag(player, doXanh, 99);
                                                    InventoryService.gI().subQuantityItemsBag(player, laChuoi, 99);
                                                    Item banhtet = ItemService.gI()
                                                            .createNewItem((short) ConstItem.BANH_TET_2023);
                                                    banhtet.itemOptions.add(new ItemOption(74, 0));
                                                    InventoryService.gI().addItemBag(player, banhtet, 0);
                                                    InventoryService.gI().sendItemBags(player);
                                                    Service.getInstance().sendThongBao(player,
                                                            "B·∫°n nh·∫≠n ƒë∆∞·ª£c B√°nh T√©t");
                                                } else {
                                                    Service.getInstance().sendThongBao(player, "Kh√¥ng ƒë·ªß nguy√™n li·ªáu");
                                                }
                                                break;
                                            case 1:
                                                Item thitHeo1 = InventoryService.gI().findItem(player,
                                                        ConstItem.THIT_HEO_2023, 99);
                                                Item gaoNep1 = InventoryService.gI().findItem(player, ConstItem.GAO_NEP,
                                                        99);
                                                Item doXanh1 = InventoryService.gI().findItem(player, ConstItem.DO_XANH,
                                                        99);
                                                Item laDong1 = InventoryService.gI().findItem(player,
                                                        ConstItem.LA_DONG_2023, 99);
                                                if (thitHeo1 != null && gaoNep1 != null && doXanh1 != null
                                                        && laDong1 != null) {
                                                    InventoryService.gI().subQuantityItemsBag(player, thitHeo1, 99);
                                                    InventoryService.gI().subQuantityItemsBag(player, gaoNep1, 99);
                                                    InventoryService.gI().subQuantityItemsBag(player, doXanh1, 99);
                                                    InventoryService.gI().subQuantityItemsBag(player, laDong1, 99);
                                                    Item banhChung = ItemService.gI()
                                                            .createNewItem((short) ConstItem.BANH_CHUNG_2023);
                                                    banhChung.itemOptions.add(new ItemOption(74, 0));
                                                    InventoryService.gI().addItemBag(player, banhChung, 0);
                                                    InventoryService.gI().sendItemBags(player);
                                                    Service.getInstance().sendThongBao(player,
                                                            "B·∫°n nh·∫≠n ƒë∆∞·ª£c B√°nh Ch∆∞ng");
                                                } else {
                                                    Service.getInstance().sendThongBao(player, "Kh√¥ng ƒë·ªß nguy√™n li·ªáu");
                                                }
                                                break;
                                            case 2:
                                                if (!player.event.isCookingTetCake()) {
                                                    Item banhTet2 = InventoryService.gI().findItem(player,
                                                            ConstItem.BANH_TET_2023, 1);
                                                    Item phuGiaTaoMau2 = InventoryService.gI().findItem(player,
                                                            ConstItem.PHU_GIA_TAO_MAU, 1);
                                                    Item giaVi2 = InventoryService.gI().findItem(player,
                                                            ConstItem.GIA_VI_TONG_HOP, 1);

                                                    if (banhTet2 != null && phuGiaTaoMau2 != null && giaVi2 != null) {
                                                        InventoryService.gI().subQuantityItemsBag(player, banhTet2, 1);
                                                        InventoryService.gI().subQuantityItemsBag(player, phuGiaTaoMau2,
                                                                1);
                                                        InventoryService.gI().subQuantityItemsBag(player, giaVi2, 1);
                                                        InventoryService.gI().sendItemBags(player);
                                                        player.event.setTimeCookTetCake(300);
                                                        player.event.setCookingTetCake(true);
                                                        Service.getInstance().sendThongBao(player,
                                                                "B·∫Øt ƒë·∫ßu n·∫•u b√°nh,th·ªùi gian n·∫•u b√°nh l√† 5 ph√∫t");
                                                    } else {
                                                        Service.getInstance().sendThongBao(player,
                                                                "Kh√¥ng ƒë·ªß nguy√™n li·ªáu");
                                                    }
                                                } else if (player.event.isCookingTetCake()
                                                        && player.event.getTimeCookTetCake() == 0) {
                                                    Item cake = ItemService.gI()
                                                            .createNewItem((short) ConstItem.BANH_TET_CHIN, 1);
                                                    cake.itemOptions.add(new ItemOption(77, 20));
                                                    cake.itemOptions.add(new ItemOption(103, 20));
                                                    cake.itemOptions.add(new ItemOption(74, 0));
                                                    InventoryService.gI().addItemBag(player, cake, 0);
                                                    InventoryService.gI().sendItemBags(player);
                                                    player.event.setCookingTetCake(false);
                                                    player.event.addEventPoint(1);
                                                    Service.getInstance().sendThongBao(player,
                                                            "B·∫°n nh·∫≠n ƒë∆∞·ª£c B√°nh T√©t (ƒë√£ ch√≠nh) v√† 1 ƒëi·ªÉm s·ª± ki·ªán");
                                                }
                                                break;
                                            case 3:
                                                if (!player.event.isCookingChungCake()) {
                                                    Item banhChung3 = InventoryService.gI().findItem(player,
                                                            ConstItem.BANH_CHUNG_2023, 1);
                                                    Item phuGiaTaoMau3 = InventoryService.gI().findItem(player,
                                                            ConstItem.PHU_GIA_TAO_MAU, 1);
                                                    Item giaVi3 = InventoryService.gI().findItem(player,
                                                            ConstItem.GIA_VI_TONG_HOP, 1);

                                                    if (banhChung3 != null && phuGiaTaoMau3 != null && giaVi3 != null) {
                                                        InventoryService.gI().subQuantityItemsBag(player, banhChung3,
                                                                1);
                                                        InventoryService.gI().subQuantityItemsBag(player, phuGiaTaoMau3,
                                                                1);
                                                        InventoryService.gI().subQuantityItemsBag(player, giaVi3, 1);
                                                        InventoryService.gI().sendItemBags(player);
                                                        player.event.setTimeCookChungCake(300);
                                                        player.event.setCookingChungCake(true);
                                                        Service.getInstance().sendThongBao(player,
                                                                "B·∫Øt ƒë·∫ßu n·∫•u b√°nh,th·ªùi gian n·∫•u b√°nh l√† 5 ph√∫t");
                                                    } else {
                                                        Service.getInstance().sendThongBao(player,
                                                                "Kh√¥ng ƒë·ªß nguy√™n li·ªáu");
                                                    }
                                                } else if (player.event.isCookingChungCake()
                                                        && player.event.getTimeCookChungCake() == 0) {
                                                    Item cake = ItemService.gI()
                                                            .createNewItem((short) ConstItem.BANH_CHUNG_CHIN, 1);
                                                    cake.itemOptions.add(new ItemOption(50, 20));
                                                    cake.itemOptions.add(new ItemOption(5, 15));
                                                    cake.itemOptions.add(new ItemOption(74, 0));
                                                    InventoryService.gI().addItemBag(player, cake, 0);
                                                    InventoryService.gI().sendItemBags(player);
                                                    player.event.setCookingChungCake(false);
                                                    player.event.addEventPoint(1);
                                                    Service.getInstance().sendThongBao(player,
                                                            "B·∫°n nh·∫≠n ƒë∆∞·ª£c B√°nh Ch∆∞ng (ƒë√£ ch√≠n) v√† 1 ƒëi·ªÉm s·ª± ki·ªán");
                                                }
                                                break;
                                            case 4:
                                                Item tetCake = InventoryService.gI().findItem(player,
                                                        ConstItem.BANH_TET_CHIN, 5);
                                                Item chungCake = InventoryService.gI().findItem(player,
                                                        ConstItem.BANH_CHUNG_CHIN, 5);
                                                if (chungCake != null && tetCake != null) {
                                                    Item hopQua = ItemService.gI()
                                                            .createNewItem((short) ConstItem.HOP_QUA_TET_2023, 1);
                                                    hopQua.itemOptions.add(new ItemOption(30, 0));
                                                    hopQua.itemOptions.add(new ItemOption(74, 0));

                                                    InventoryService.gI().subQuantityItemsBag(player, tetCake, 5);
                                                    InventoryService.gI().subQuantityItemsBag(player, chungCake, 5);
                                                    InventoryService.gI().addItemBag(player, hopQua, 0);
                                                    InventoryService.gI().sendItemBags(player);
                                                    Service.getInstance().sendThongBao(player,
                                                            "B·∫°n nh·∫≠n ƒë∆∞·ª£c H·ªôp qu√† t·∫øt");
                                                } else {
                                                    Service.getInstance().sendThongBao(player,
                                                            "Kh√¥ng ƒë·ªß nguy√™n li·ªáu ƒë·ªÉ ƒë·ªïi");
                                                }
                                                break;
                                        }
                                        break;
                                }
                            }
                        }
                    };
                    break;
                case ConstNpc.KING_FURY:
                    npc = new Npc(mapId, status, cx, cy, tempId, avartar) {
                        @Override
                        public void openBaseMenu(Player player) {
                            if (canOpenNpc(player)) {
                                this.createOtherMenu(player, ConstNpc.BASE_MENU,
                                        "C·ª≠a h√†ng c·ªßa ch√∫ng t√¥i chuy√™n mua b√°n h√†ng hi·ªáu, h√†ng ƒë·ªôc\n"
                                        + "C√°m ∆°n b·∫°n ƒë√£ gh√© thƒÉm.", "H∆∞·ªõng\nd·∫´n\nth√™m", "Mua b√°n\nK√Ω g·ª≠i\nS·ª± ki·ªán", "T·ª´ ch·ªëi");
                            }
                        }

                        @Override
                        public void confirmMenu(Player player, int select) {
                            if (canOpenNpc(player)) {
                                switch (player.iDMark.getIndexMenu()) {
                                    case ConstNpc.BASE_MENU:
                                        switch (select) {
                                            case 0:
                                                NpcService.gI().createTutorial(player, avartar, "C·ª≠a h√†ng chuy√™n nh·∫≠n k√Ω g·ª≠i mua b√°n v·∫≠t ph·∫©m\b"
                                                        + "Ch·ªâ v·ªõi 1 ng·ªçc v√† 5% ph√≠ k√Ω g·ª≠i\b"
                                                        + "Gi√° tr·ªã k√Ω g·ª≠i 100k-1 T·ªâ v√†ng ho·∫∑c 2-2k ng·ªçc\b"
                                                        + "M·ªôt ng∆∞·ªùi b√°n, v·∫°n ng∆∞·ªùi mua, m·∫°i d√¥, m·∫°i d√¥");
                                                break;
                                            case 1:
                                             this.npcChat(player, "S·ª©c m·∫°nh c·ªßa con ph·∫£i √≠t nh·∫•t ph·∫£i ƒë·∫°t "
                                                        + Util.numberToMoney(BanDoKhoBau.POWER_CAN_GO_TO_DBKB));
                                                       // ConsignmentShop.getInstance().show(player);
                                                return;
                                        }
                                        break;
                                }
                            }
                        }
                    };
                    break;
                case ConstNpc.CUA_HANG_KY_GUI:
                    npc = new Npc(mapId, status, cx, cy, tempId, avartar) {
                        @Override
                        public void openBaseMenu(Player player) {
                            if (canOpenNpc(player)) {
                                this.createOtherMenu(player, ConstNpc.BASE_MENU,
                                        "C·ª≠a h√†ng c·ªßa ch√∫ng t√¥i chuy√™n mua b√°n h√†ng hi·ªáu, h√†ng ƒë·ªôc\n"
                                        + "C√°m ∆°n b·∫°n ƒë√£ gh√© thƒÉm.", "H∆∞·ªõng\nd·∫´n\nth√™m", "Mua b√°n\nK√Ω g·ª≠i", "T·ª´ ch·ªëi");
                            }
                        }

                        @Override
                        public void confirmMenu(Player player, int select) {
                            if (canOpenNpc(player)) {
                                switch (player.iDMark.getIndexMenu()) {
                                    case ConstNpc.BASE_MENU:
                                        switch (select) {
                                            case 0:
                                                NpcService.gI().createTutorial(player, avartar, "C·ª≠a h√†ng chuy√™n nh·∫≠n k√Ω g·ª≠i mua b√°n v·∫≠t ph·∫©m\b"
                                                        + "Ch·ªâ v·ªõi 1 ng·ªçc v√† 5% ph√≠ k√Ω g·ª≠i\b"
                                                        + "Gi√° tr·ªã k√Ω g·ª≠i 100k-1 T·ªâ v√†ng ho·∫∑c 2-2k ng·ªçc\b"
                                                        + "M·ªôt ng∆∞·ªùi b√°n, v·∫°n ng∆∞·ªùi mua, m·∫°i d√¥, m·∫°i d√¥");
                                                break;
                                            case 1:
//                                              this.npcChat(player, "S·ª©c m·∫°nh c·ªßa con ph·∫£i √≠t nh·∫•t ph·∫£i ƒë·∫°t "
//                                                        + Util.numberToMoney(BanDoKhoBau.POWER_CAN_GO_TO_DBKB));
                                                ConsignmentShop.getInstance().show(player);
                                                break;
                                        }
                                        break;
                                }
                            }
                        }
                    };
                    break;
                default:
                    npc = new Npc(mapId, status, cx, cy, tempId, avartar) {
                        @Override
                        public void openBaseMenu(Player player) {
                            if (canOpenNpc(player)) {
                                super.openBaseMenu(player);
                            }
                        }

                        @Override
                        public void confirmMenu(Player player, int select) {
                            if (canOpenNpc(player)) {
                              //   ShopService.gI().openShopNormal(player, this, ConstNpc.SHOP_BUNMA_TL_0, 0,
                              //   player.gender);
                            }
                        }
                    };
            }
        } catch (Exception e) {
            Log.error(NpcFactory.class,
                    e, "L·ªói load npc");
        }
        return npc;
    }
// girlkun75-mark

    public static void createNpcRongThieng() {
        Npc npc = new Npc(-1, -1, -1, -1, ConstNpc.RONG_THIENG, -1) {
            @Override
            public void confirmMenu(Player player, int select) {
                switch (player.iDMark.getIndexMenu()) {
                    case ConstNpc.IGNORE_MENU:

                        break;
                    case ConstNpc.SHENRON_CONFIRM:
                        if (select == 0) {
                            SummonDragon.gI().confirmWish();
                        } else if (select == 1) {
                            SummonDragon.gI().reOpenShenronWishes(player);
                        }
                        break;
                    case ConstNpc.SHENRON_1_1:
                        if (player.iDMark.getIndexMenu() == ConstNpc.SHENRON_1_1
                                && select == SHENRON_1_STAR_WISHES_1.length - 1) {
                            NpcService.gI().createMenuRongThieng(player, ConstNpc.SHENRON_1_2, SHENRON_SAY,
                                    SHENRON_1_STAR_WISHES_2);
                            break;
                        }
                    case ConstNpc.SHENRON_1_2:
                        if (player.iDMark.getIndexMenu() == ConstNpc.SHENRON_1_2
                                && select == SHENRON_1_STAR_WISHES_2.length - 1) {
                            NpcService.gI().createMenuRongThieng(player, ConstNpc.SHENRON_1_1, SHENRON_SAY,
                                    SHENRON_1_STAR_WISHES_1);
                            break;
                        }
                    case ConstNpc.BLACK_SHENRON:
                        if (player.iDMark.getIndexMenu() == ConstNpc.BLACK_SHENRON
                                && select == BLACK_SHENRON_WISHES.length) {
                            NpcService.gI().createMenuRongThieng(player, ConstNpc.BLACK_SHENRON, BLACK_SHENRON_SAY,
                                    BLACK_SHENRON_WISHES);
                            break;
                        }
                    case ConstNpc.ICE_SHENRON:
                        if (player.iDMark.getIndexMenu() == ConstNpc.ICE_SHENRON
                                && select == ICE_SHENRON_WISHES.length) {
                            NpcService.gI().createMenuRongThieng(player, ConstNpc.ICE_SHENRON, ICE_SHENRON_SAY,
                                    ICE_SHENRON_WISHES);
                            break;
                        }
                    default:
                        SummonDragon.gI().showConfirmShenron(player, player.iDMark.getIndexMenu(), (byte) select);
                        break;
                }
            }
        };
    }

    public static void createNpcConMeo() {
        Npc npc = new Npc(-1, -1, -1, -1, ConstNpc.CON_MEO, 351) {
            @Override
            public void confirmMenu(Player player, int select) {
                switch (player.iDMark.getIndexMenu()) {

                    case ConstNpc.CONFIRM_DIALOG:
                        ConfirmDialog confirmDialog = player.getConfirmDialog();
                        if (confirmDialog != null) {
                            if (confirmDialog instanceof MenuDialog menu) {
                                menu.getRunable().setIndexSelected(select);
                                menu.run();
                                return;
                            }
                            if (select == 0) {
                                confirmDialog.run();
                            } else {
                                confirmDialog.cancel();
                            }
                            player.setConfirmDialog(null);
                        }
                        break;
                    case 25100303:
                        switch (select) {
                            case 0:
                                PlayerDAO.saveMaBaoVe(player, player.MaBaoVe_TamThoi);
                                PlayerDAO.Bat_Tat_MaBaoVe(player, select);
                                player.MaBaoVe = player.MaBaoVe_TamThoi;
                                player.isUseMaBaoVe = true;
                                Service.getInstance().sendThongBao(player, "K√≠ch ho·∫°t th√†nh c√¥ng, t√†i kho·∫£n ƒëang ƒë∆∞·ª£c b·∫£o v·ªá");
                                PlayerService.gI().savePlayer(player);
                                break;
                            case 1:
                                break;
                        }
                        break;
                    case 25100304:
                        switch (select) {
                            case 0:
                                PlayerDAO.Bat_Tat_MaBaoVe(player, 1);
                                player.isUseMaBaoVe = false;
                                PlayerService.gI().savePlayer(player);
                                Service.getInstance().sendThongBao(player, "Ch·ª©c nƒÉng b·∫£o v·ªá t√†i kho·∫£n ƒëang t·∫Øt");
                                break;
                            case 1:
                                break;
                        }
                        break;
                    case 25100305:
                        switch (select) {
                            case 0:
                                PlayerDAO.Bat_Tat_MaBaoVe(player, 0);
                                player.isUseMaBaoVe = true;
                                PlayerService.gI().savePlayer(player);
                                Service.getInstance().sendThongBao(player, "T√†i kho·∫£n ƒëang ƒë∆∞·ª£c b·∫£o v·ªá");
                                break;
                            case 1:
                                break;
                        }
                        break;
                    case ConstNpc.HOP_QUA_THAN_LINH:

                        Item aotl_td = ItemService.gI().createNewItem((short) 555);
                        Item aotl_nm = ItemService.gI().createNewItem((short) 557);
                        Item aotl_xd = ItemService.gI().createNewItem((short) 559);

                        aotl_td.itemOptions.add(new ItemOption(47, 800 + new Random().nextInt(200)));

                        aotl_nm.itemOptions.add(new ItemOption(47, 900 + new Random().nextInt(100)));

                        aotl_xd.itemOptions.add(new ItemOption(47, 950 + new Random().nextInt(200)));

                        aotl_td.itemOptions.add(new ItemOption(21, 18)); // ycsm 18 t·ªâ
                        aotl_nm.itemOptions.add(new ItemOption(21, 18)); // ycsm 18 t·ªâ
                        aotl_xd.itemOptions.add(new ItemOption(21, 18)); // ycsm 18 t·ªâ

                        aotl_td.itemOptions.add(new ItemOption(30, 1)); // ycsm 18 t·ªâ
                        aotl_nm.itemOptions.add(new ItemOption(30, 1)); // ycsm 18 t·ªâ
                        aotl_xd.itemOptions.add(new ItemOption(30, 1)); // ycsm 18 t·ªâ

                        Item quantl_td = ItemService.gI().createNewItem((short) 556);
                        Item quantl_nm = ItemService.gI().createNewItem((short) 558);
                        Item quantl_xd = ItemService.gI().createNewItem((short) 560);

                        quantl_td.itemOptions.add(new ItemOption(22, 47 + new Random().nextInt(5)));
                        quantl_td.itemOptions.add(new ItemOption(27, (47 + new Random().nextInt(5)) * 1000 * 15 / 100));

                        quantl_nm.itemOptions.add(new ItemOption(22, 45 + new Random().nextInt(5)));
                        quantl_nm.itemOptions.add(new ItemOption(27, (45 + new Random().nextInt(5)) * 1000 * 15 / 100));

                        quantl_xd.itemOptions.add(new ItemOption(22, 42 + new Random().nextInt(8)));
                        quantl_xd.itemOptions.add(new ItemOption(27, (42 + new Random().nextInt(8)) * 1000 * 15 / 100));

                        quantl_td.itemOptions.add(new ItemOption(21, 18)); // ycsm 18 t·ªâ
                        quantl_nm.itemOptions.add(new ItemOption(21, 18)); // ycsm 18 t·ªâ
                        quantl_xd.itemOptions.add(new ItemOption(21, 18)); // ycsm 18 t·ªâ

                        quantl_td.itemOptions.add(new ItemOption(30, 1)); // ycsm 18 t·ªâ
                        quantl_nm.itemOptions.add(new ItemOption(30, 1)); // ycsm 18 t·ªâ
                        quantl_xd.itemOptions.add(new ItemOption(30, 1)); // ycsm 18 t·ªâ

                        Item gangtl_td = ItemService.gI().createNewItem((short) 562);
                        Item gangtl_nm = ItemService.gI().createNewItem((short) 564);
                        Item gangtl_xd = ItemService.gI().createNewItem((short) 566);

                        gangtl_td.itemOptions.add(new ItemOption(0, 3500 + new Random().nextInt(1200)));
                        gangtl_nm.itemOptions.add(new ItemOption(0, 3300 + new Random().nextInt(1100)));
                        gangtl_xd.itemOptions.add(new ItemOption(0, 3500 + new Random().nextInt(1400)));

                        gangtl_td.itemOptions.add(new ItemOption(21, 18)); // ycsm 18 t·ªâ
                        gangtl_nm.itemOptions.add(new ItemOption(21, 18)); // ycsm 18 t·ªâ
                        gangtl_xd.itemOptions.add(new ItemOption(21, 18)); // ycsm 18 t·ªâ

                        gangtl_td.itemOptions.add(new ItemOption(30, 1)); // ycsm 18 t·ªâ
                        gangtl_nm.itemOptions.add(new ItemOption(30, 1)); // ycsm 18 t·ªâ
                        gangtl_xd.itemOptions.add(new ItemOption(30, 1)); // ycsm 18 t·ªâ

                        Item giaytl_td = ItemService.gI().createNewItem((short) 563);
                        Item giaytl_nm = ItemService.gI().createNewItem((short) 565);
                        Item giaytl_xd = ItemService.gI().createNewItem((short) 567);

                        giaytl_td.itemOptions.add(new ItemOption(23, 42 + new Random().nextInt(5)));
                        giaytl_nm.itemOptions.add(new ItemOption(23, 47 + new Random().nextInt(5)));
                        giaytl_xd.itemOptions.add(new ItemOption(23, 45 + new Random().nextInt(4)));

                        giaytl_td.itemOptions.add(new ItemOption(28, (42 + new Random().nextInt(5)) * 1000 * 15 / 100));
                        giaytl_nm.itemOptions.add(new ItemOption(28, (47 + new Random().nextInt(5)) * 1000 * 15 / 100));
                        giaytl_xd.itemOptions.add(new ItemOption(28, (45 + new Random().nextInt(4)) * 1000 * 15 / 100));

                        giaytl_td.itemOptions.add(new ItemOption(21, 18)); // ycsm 18 t·ªâ
                        giaytl_nm.itemOptions.add(new ItemOption(21, 18)); // ycsm 18 t·ªâ
                        giaytl_xd.itemOptions.add(new ItemOption(21, 18)); // ycsm 18 t·ªâ

                        giaytl_td.itemOptions.add(new ItemOption(30, 1)); // ycsm 18 t·ªâ
                        giaytl_nm.itemOptions.add(new ItemOption(30, 1)); // ycsm 18 t·ªâ
                        giaytl_xd.itemOptions.add(new ItemOption(30, 1)); // ycsm 18 t·ªâ

                        Item nhan = ItemService.gI().createNewItem((short) 561);

                        nhan.itemOptions.add(new ItemOption(14, 14 + new Random().nextInt(4)));
                        nhan.itemOptions.add(new ItemOption(21, 18)); // ycsm 18 t·ªâ

                        nhan.itemOptions.add(new ItemOption(30, 1)); // ycsm 18 t·ªâ

                        Item HopQuaThanLinh = InventoryService.gI().findItemBagByTemp(player, 1280);

                        switch (select) {

                            case 0:
                                if (InventoryService.gI().getCountEmptyBag(player) < 5) {
                                    Service.getInstance().sendThongBao(player, "C·∫ßn 5 √¥ h√†nh trang m·ªõi c√≥ th·ªÉ m·ªü!!!");
                                    return;
                                }
                                InventoryService.gI().addItemBag(player, aotl_td, 1);
                                InventoryService.gI().addItemBag(player, quantl_td, 1);
                                InventoryService.gI().addItemBag(player, gangtl_td, 1);
                                InventoryService.gI().addItemBag(player, giaytl_td, 1);
                                InventoryService.gI().addItemBag(player, nhan, 1);
                                InventoryService.gI().subQuantityItemsBag(player, HopQuaThanLinh, 1);
                                InventoryService.gI().sendItemBags(player);
                                Service.getInstance().sendThongBao(player, "B·∫°n nh·∫≠n ƒë∆∞·ª£c 1 set th·∫ßn linh tr√°i ƒë·∫•t");
                                return;
                            case 1:
                                if (InventoryService.gI().getCountEmptyBag(player) < 5) {
                                    Service.getInstance().sendThongBao(player, "C·∫ßn 5 √¥ h√†nh trang m·ªõi c√≥ th·ªÉ m·ªü!!!");
                                    return;
                                }

                                InventoryService.gI().addItemBag(player, aotl_nm, 1);
                                InventoryService.gI().addItemBag(player, quantl_nm, 1);
                                InventoryService.gI().addItemBag(player, gangtl_nm, 1);
                                InventoryService.gI().addItemBag(player, giaytl_nm, 1);
                                InventoryService.gI().addItemBag(player, nhan, 1);
                                InventoryService.gI().subQuantityItemsBag(player, HopQuaThanLinh, 1);
                                Service.getInstance().sendThongBao(player, "B·∫°n nh·∫≠n ƒë∆∞·ª£c 1 set th·∫ßn linh namek");
                                InventoryService.gI().sendItemBags(player);
                                return;
                            case 2:
                                if (InventoryService.gI().getCountEmptyBag(player) < 5) {
                                    Service.getInstance().sendThongBao(player, "C·∫ßn 5 √¥ h√†nh trang m·ªõi c√≥ th·ªÉ m·ªü!!!");
                                    return;
                                }

                                InventoryService.gI().addItemBag(player, aotl_xd, 1);
                                InventoryService.gI().addItemBag(player, quantl_xd, 1);
                                InventoryService.gI().addItemBag(player, gangtl_xd, 1);
                                InventoryService.gI().addItemBag(player, giaytl_xd, 1);
                                InventoryService.gI().addItemBag(player, nhan, 1);
                                InventoryService.gI().subQuantityItemsBag(player, HopQuaThanLinh, 1);
                                InventoryService.gI().sendItemBags(player);

                                Service.getInstance().sendThongBao(player, "B·∫°n nh·∫≠n ƒë∆∞·ª£c 1 set th·∫ßn linh xayda");
                                return;
                        }
                        return;
                    case ConstNpc.UP_TOP_ITEM:

                        break;
                    case ConstNpc.RUONG_GO:
                        int size = player.textRuongGo.size();
                        if (size > 0) {
                            String menuselect = "OK [" + (size - 1) + "]";
                            if (size == 1) {
                                menuselect = "OK";
                            }
                            NpcService.gI().createMenuConMeo(player, ConstNpc.RUONG_GO, -1,
                                    player.textRuongGo.get(size - 1), menuselect);
                            player.textRuongGo.remove(size - 1);
                        }
                        break;
                    case ConstNpc.MENU_MABU_WAR:
                        if (select == 0) {
                            if (player.zone.finishMabuWar) {
                                ChangeMapService.gI().changeMapBySpaceShip(player, player.gender + 21, -1, 250);
                            } else if (player.zone.map.mapId == 119) {
                                Zone zone = MabuWar.gI().getMapLastFloor(120);
                                if (zone != null) {
                                    ChangeMapService.gI().changeMap(player, zone, 354, 240);
                                } else {
                                    Service.getInstance().sendThongBao(player,
                                            "Tr·∫≠n ƒë·∫°i chi·∫øn ƒë√£ k·∫øt th√∫c, t√†u v·∫≠n chuy·ªÉn s·∫Ω ƒë∆∞a b·∫°n v·ªÅ nh√†");
                                    ChangeMapService.gI().changeMapBySpaceShip(player, player.gender + 21, -1, 250);
                                }
                            } else {
                                int idMapNextFloor = player.zone.map.mapId == 115 ? player.zone.map.mapId + 2
                                        : player.zone.map.mapId + 1;
                                ChangeMapService.gI().changeMap(player, idMapNextFloor, -1, 354, 240);
                            }
                            player.resetPowerPoint();
                            player.sendMenuGotoNextFloorMabuWar = false;
                            Service.getInstance().sendPowerInfo(player, "TL", player.getPowerPoint());
                            if (Util.isTrue(1, 30)) {
                                player.inventory.ruby += 1;
                                PlayerService.gI().sendInfoHpMpMoney(player);
                                Service.getInstance().sendThongBao(player, "B·∫°n nh·∫≠n ƒë∆∞·ª£c 1 H·ªìng Ng·ªçc");
                            } else {
                                Service.getInstance().sendThongBao(player,
                                        "B·∫°n ƒëen v√¥ c√πng lu√¥n n√™n kh√¥ng nh·∫≠n ƒë∆∞·ª£c g√¨ c·∫£");
                            }
                        }
                        break;
                    case ConstNpc.IGNORE_MENU:

                        break;
                    case ConstNpc.MAKE_MATCH_PVP:
                        // PVP_old.gI().sendInvitePVP(player, (byte) select);
                        PVPServcice.gI().sendInvitePVP(player, (byte) select);
                        break;
                    case ConstNpc.MAKE_FRIEND:
                        if (select == 0) {
                            Object playerId = PLAYERID_OBJECT.get(player.id);
                            if (playerId != null) {
                                FriendAndEnemyService.gI().acceptMakeFriend(player,
                                        Integer.parseInt(String.valueOf(playerId)));
                            }
                        }
                        break;
                    case ConstNpc.REVENGE:
                        if (select == 0) {
                            PVPServcice.gI().acceptRevenge(player);
                        }
                        break;
                    case ConstNpc.TUTORIAL_SUMMON_DRAGON:
                        if (select == 0) {
                            NpcService.gI().createTutorial(player, -1, SummonDragon.SUMMON_SHENRON_TUTORIAL);
                        }
                        break;
                    case ConstNpc.SUMMON_SHENRON:
                        if (select == 0) {
                            NpcService.gI().createTutorial(player, -1, SummonDragon.SUMMON_SHENRON_TUTORIAL);
                        } else if (select == 1) {
                            SummonDragon.gI().summonShenron(player);
                        }
                        break;
                    case ConstNpc.SUMMON_BLACK_SHENRON:
                        if (select == 0) {
                            SummonDragon.gI().summonBlackShenron(player);
                        }
                        break;
                    case ConstNpc.SUMMON_ICE_SHENRON:
                        if (select == 0) {
                            SummonDragon.gI().summonIceShenron(player);
                        }
                        break;
                    case ConstNpc.INTRINSIC:
                        if (select == 0) {
                            IntrinsicService.gI().showAllIntrinsic(player);
                        } else if (select == 1) {
                            IntrinsicService.gI().showConfirmOpen(player);
                        } else if (select == 2) {
                            IntrinsicService.gI().showConfirmOpenVip(player);
                        }
                        break;
                    case ConstNpc.CONFIRM_OPEN_INTRINSIC:
                        if (select == 0) {
                            IntrinsicService.gI().open(player);
                        }
                        break;
                    case ConstNpc.CONFIRM_OPEN_INTRINSIC_VIP:
                        if (select == 0) {
                            IntrinsicService.gI().openVip(player);
                        }
                        break;
                    case ConstNpc.CONFIRM_LEAVE_CLAN:
                        if (select == 0) {
                            ClanService.gI().leaveClan(player);
                        }
                        break;
                    case ConstNpc.CONFIRM_NHUONG_PC:
                        if (select == 0) {
                            ClanService.gI().phongPc(player, (int) PLAYERID_OBJECT.get(player.id));
                        }
                        break;
                    case ConstNpc.BAN_PLAYER:
                        if (select == 0) {
                            PlayerService.gI().banPlayer((Player) PLAYERID_OBJECT.get(player.id));
                            Service.getInstance().sendThongBao(player,
                                    "Ban ng∆∞·ªùi ch∆°i " + ((Player) PLAYERID_OBJECT.get(player.id)).name + " th√†nh c√¥ng");
                        }
                        break;
                    case ConstNpc.BUFF_PET:
                        if (select == 0) {
                            Player pl = (Player) PLAYERID_OBJECT.get(player.id);
                            if (pl.pet == null) {
                                PetService.gI().createNormalPet(pl);
                                Service.getInstance().sendThongBao(player, "Ph√°t ƒë·ªá t·ª≠ cho "
                                        + ((Player) PLAYERID_OBJECT.get(player.id)).name + " th√†nh c√¥ng");
                            }
                        }
                        break;
                    case ConstNpc.TAIXIU:
                        String time = ((TaiXiu.gI().lastTimeEnd - System.currentTimeMillis()) / 1000) + " gi√¢y";
                        if (((TaiXiu.gI().lastTimeEnd - System.currentTimeMillis()) / 1000) > 0 && player.goldTai == 0 && player.goldXiu == 0 && TaiXiu.gI().baotri == false) {
                            switch (select) {
                                case 0:
                                    int ketqua = TaiXiu.gI().z + TaiXiu.gI().y + TaiXiu.gI().x;
                                    NpcService.gI().createMenuConMeo(player, ConstNpc.TAIXIU, 11039, "\n|7|---Tr√≤ ch∆°i may m·∫Øn---\n"
                                            + "\n|3|K·∫øt qu·∫£ k√¨ tr∆∞·ªõc:  " + TaiXiu.gI().x + " : " + TaiXiu.gI().y + " : " + TaiXiu.gI().z + " " + (ketqua >= 10 ? "T√†i" : "X·ªâu")
                                            + "\n|1|K·∫øt qu·∫£ k√¨ tr∆∞·ªõc" + "\n"
                                            + "|3| " + TaiXiu.gI().tongHistoryString
                                            + "\n\n|1|T·ªïng C∆∞·ª£c T√ÄI: " + Util.format(TaiXiu.gI().goldTai) + " H·ªìng ng·ªçc"
                                            + "\n\n|1|T·ªïng C∆∞·ª£c X·ªàU: " + Util.format(TaiXiu.gI().goldXiu) + " H·ªìng ng·ªçc\n"
                                            + "\n|5|ƒê·∫øm ng∆∞·ª£c: " + time, "C·∫≠p nh·∫≠p", "C∆∞·ª£c\n'T√†i'", "C∆∞·ª£c\n'X·ªâu' ", "ƒê√≥ng");
                                    break;
                                case 1:
                                    if (TaskService.gI().getIdTask(player) >= ConstTask.TASK_18_0) {
                                        Input.gI().TAI_taixiu(player);
                                    } else {
                                        Service.getInstance().sendThongBao(player, "B·∫°n ch∆∞a ƒë·ªß ƒëi·ªÅu ki·ªán ƒë·ªÉ ch∆°i");
                                    }
                                    break;
                                case 2:
                                    if (TaskService.gI().getIdTask(player) >= ConstTask.TASK_18_0) {
                                        Input.gI().XIU_taixiu(player);
                                    } else {
                                        Service.getInstance().sendThongBao(player, "B·∫°n ch∆∞a ƒë·ªß ƒëi·ªÅu ki·ªán ƒë·ªÉ ch∆°i");
                                    }
                                    break;
                            }
                        } else if (((TaiXiu.gI().lastTimeEnd - System.currentTimeMillis()) / 1000) > 0 && player.goldTai > 0 && TaiXiu.gI().baotri == false) {
                            switch (select) {
                                case 0:
                                    createOtherMenu(player, ConstNpc.TAIXIU, "\n|7|---Tr√≤ ch∆°i may m·∫Øn---\n"
                                            + "\n|3|K·∫øt qu·∫£ k√¨ tr∆∞·ªõc:  " + TaiXiu.gI().x + " : " + TaiXiu.gI().y + " : " + TaiXiu.gI().z
                                            + "\n\n|1|T·ªïng nh√† 'T√†i'=> " + Util.format(TaiXiu.gI().goldTai) + " H·ªìng ng·ªçc"
                                            + "\n\n|1|T·ªïng nh√† 'X·ªâu'=> " + Util.format(TaiXiu.gI().goldXiu) + " H·ªìng ng·ªçc\n"
                                            + "\n|5|Th·ªùi gian c√≤n l·∫°i: " + time, "C·∫≠p nh·∫≠p", "C∆∞·ª£c\n'T√†i'", "C∆∞·ª£c\n'X·ªâu' ", "ƒê√≥ng");
                                    break;
                            }
                        } else if (((TaiXiu.gI().lastTimeEnd - System.currentTimeMillis()) / 1000) > 0 && player.goldXiu > 0 && TaiXiu.gI().baotri == false) {
                            switch (select) {
                                case 0:
                                    createOtherMenu(player, ConstNpc.TAIXIU, "\n|7|---Tr√≤ ch∆°i may m·∫Øn---\n"
                                            + "\n|3|K·∫øt qu·∫£ k√¨ tr∆∞·ªõc:  " + TaiXiu.gI().x + " : " + TaiXiu.gI().y + " : " + TaiXiu.gI().z
                                            + "\n\n|1|T·ªïng nh√† 'T√†i'=> " + Util.format(TaiXiu.gI().goldTai) + " H·ªìng ng·ªçc"
                                            + "\n\n|1|T·ªïng nh√† 'X·ªâu'=> " + Util.format(TaiXiu.gI().goldXiu) + " H·ªìng ng·ªçc\n"
                                            + "\n|5|Th·ªùi gian c√≤n l·∫°i: " + time, "C·∫≠p nh·∫≠p", "C∆∞·ª£c\n'T√†i'", "C∆∞·ª£c\n'X·ªâu' ", "ƒê√≥ng");
                                    break;
                            }
                        } else if (((TaiXiu.gI().lastTimeEnd - System.currentTimeMillis()) / 1000) > 0 && player.goldTai > 0 && TaiXiu.gI().baotri == true) {
                            switch (select) {
                                case 0:
                                    createOtherMenu(player, ConstNpc.TAIXIU, "\n|7|---Tr√≤ ch∆°i may m·∫Øn---\n"
                                            + "\n|3|K·∫øt qu·∫£ k√¨ tr∆∞·ªõc:  " + TaiXiu.gI().x + " : " + TaiXiu.gI().y + " : " + TaiXiu.gI().z
                                            + "\n\n|1|T·ªïng nh√† 'T√†i'=> " + Util.format(TaiXiu.gI().goldTai) + " H·ªìng ng·ªçc"
                                            + "\n\n|1|T·ªïng nh√† 'X·ªâu'=> " + Util.format(TaiXiu.gI().goldXiu) + " H·ªìng ng·ªçc\n"
                                            + "\n|5|Th·ªùi gian c√≤n l·∫°i: " + time, "C·∫≠p nh·∫≠p", "C∆∞·ª£c\n'T√†i'", "C∆∞·ª£c\n'X·ªâu' ", "ƒê√≥ng");
                                    break;
                            }
                        } else if (((TaiXiu.gI().lastTimeEnd - System.currentTimeMillis()) / 1000) > 0 && player.goldXiu > 0 && TaiXiu.gI().baotri == true) {
                            switch (select) {
                                case 0:
                                    createOtherMenu(player, ConstNpc.TAIXIU, "\n|7|---Tr√≤ ch∆°i may m·∫Øn---\n"
                                            + "\n|3|K·∫øt qu·∫£ k√¨ tr∆∞·ªõc:  " + TaiXiu.gI().x + " : " + TaiXiu.gI().y + " : " + TaiXiu.gI().z
                                            + "\n\n|1|T·ªïng nh√† 'T√†i'=> " + Util.format(TaiXiu.gI().goldTai) + " H·ªìng ng·ªçc"
                                            + "\n\n|1|T·ªïng nh√† 'X·ªâu'=> " + Util.format(TaiXiu.gI().goldXiu) + " H·ªìng ng·ªçc\n"
                                            + "\n|5|Th·ªùi gian c√≤n l·∫°i: " + time, "C·∫≠p nh·∫≠p", "C∆∞·ª£c\n'T√†i'", "C∆∞·ª£c\n'X·ªâu' ", "ƒê√≥ng");
                                    break;
                            }
                        } else if (((TaiXiu.gI().lastTimeEnd - System.currentTimeMillis()) / 1000) > 0 && player.goldXiu == 0 && player.goldTai == 0 && TaiXiu.gI().baotri == true) {
                            switch (select) {
                                case 0:
                                    createOtherMenu(player, ConstNpc.TAIXIU, "\n|7|---Tr√≤ ch∆°i may m·∫Øn---\n"
                                            + "\n|3|K·∫øt qu·∫£ k√¨ tr∆∞·ªõc:  " + TaiXiu.gI().x + " : " + TaiXiu.gI().y + " : " + TaiXiu.gI().z
                                            + "\n\n|1|T·ªïng nh√† 'T√†i'=> " + Util.format(TaiXiu.gI().goldTai) + " H·ªìng ng·ªçc"
                                            + "\n\n|1|T·ªïng nh√† 'X·ªâu'=> " + Util.format(TaiXiu.gI().goldXiu) + " H·ªìng ng·ªçc\n"
                                            + "\n|5|Th·ªùi gian c√≤n l·∫°i: " + time, "C·∫≠p nh·∫≠p", "C∆∞·ª£c\n'T√†i'", "C∆∞·ª£c\n'X·ªâu' ", "ƒê√≥ng");
                                    break;
                            }
                        }
                        break;

                    case ConstNpc.MENU_ADMIN:
                        switch (select) {
                            case 0:
                                for (int i = 14; i <= 20; i++) {
                                    Item item = ItemService.gI().createNewItem((short) i);
                                    InventoryService.gI().addItemBag(player, item, 0);
                                }
                                InventoryService.gI().sendItemBags(player);
                                break;
                            case 1:
                                if (player.pet == null) {
                                    PetService.gI().createNormalPet(player);
                                } else {
                                    if (player.pet.isMabu) {
                                        PetService.gI().changeNormalPet(player);
                                    } else {
                                        PetService.gI().changeMabuPet(player);
                                    }
                                    PetService.gI().changeSuperPet(player, player.gender, 1);
                                }
                                break;
                            case 2:
                                Maintenance.gI().start(60);
                                break;
                            case 3:
                                Input.gI().createFormFindPlayer(player);
                                break;
                            case 4:
                                NotiManager.getInstance().load();
                                NotiManager.getInstance().sendAlert(player);
                                NotiManager.getInstance().sendNoti(player);
                                Service.getInstance().chat(player, "C·∫≠p nh·∫≠t th√¥ng b√°o th√†nh c√¥ng");
                                break;
                            case 5:
                                NotiManager.getInstance().load();
                                NotiManager.getInstance().sendAlert(player);
                                NotiManager.getInstance().sendNoti(player);
                                Service.getInstance().chat(player, "C·∫≠p nh·∫≠t th√¥ng b√°o th√†nh c√¥ng");
                                this.createOtherMenu(player, ConstNpc.CALL_BOSS,
                                        "M·ªùi B·∫°n Ch·ªçn?", "D·∫≠y ƒêi\nL√†m");
                                break;
                        }
                        break;
                    case ConstNpc.CALL_BOSS:
                        switch (select) {
                            case 0:
                                BossFactory.createBoss(BossFactory.ANDROID_13);
                                BossFactory.createBoss(BossFactory.ANDROID_14);
                                BossFactory.createBoss(BossFactory.ANDROID_15);
                                BossFactory.createBoss(BossFactory.ANDROID_19);
                                BossFactory.createBoss(BossFactory.ANDROID_20);
                                BossFactory.createBoss(BossFactory.KINGKONG);
                                BossFactory.createBoss(BossFactory.PIC);
                                BossFactory.createBoss(BossFactory.POC);
                                BossFactory.createBoss(BossFactory.BLACKGOKU);
                                BossFactory.createBoss(BossFactory.BROLY);
                                BossFactory.createBoss(BossFactory.SUPER_BROLY);
                                BossFactory.createBoss(BossFactory.XEN_BO_HUNG_1);
                                BossFactory.createBoss(BossFactory.FIDE_DAI_CA_1);
                                BossFactory.createBoss(BossFactory.SO4);
                                BossFactory.createBoss(BossFactory.KUKU);
                                BossFactory.createBoss(BossFactory.MAP_DAU_DINH);
                                BossFactory.createBoss(BossFactory.RAMBO);
                                BossFactory.createBoss(BossFactory.CUMBER);
                                BossFactory.createBoss(BossFactory.MABU_MAP);
                             //   BossFactory.createBoss(BossFactory.SUPER_BROLY;
                                BossFactory.createBoss(BossFactory.NGO_KHONG);
                                BossFactory.createBoss(BossFactory.BAT_GIOI);
                                BossFactory.createBoss(BossFactory.KID_BU);
                                BossFactory.createBoss(BossFactory.BU_HAN);
                                BossFactory.createBoss(BossFactory.MABU_MAP2);
                                break;                                                                                                                                        
                        }
                        break;
                    case ConstNpc.CONFIRM_REMOVE_ALL_ITEM_LUCKY_ROUND:
                        if (select == 0) {
                            for (int i = 0; i < player.inventory.itemsBoxCrackBall.size(); i++) {
                                player.inventory.itemsBoxCrackBall.set(i, ItemService.gI().createItemNull());
                            }
                            Service.getInstance().sendThongBao(player, "ƒê√£ x√≥a h·∫øt v·∫≠t ph·∫©m trong r∆∞∆°ng");
                        }
                        break;
                    case ConstNpc.MENU_FIND_PLAYER:
                        Player p = (Player) PLAYERID_OBJECT.get(player.id);
                        if (p != null) {
                            switch (select) {
                                case 0:
                                    if (p.zone != null) {
                                        ChangeMapService.gI().changeMapYardrat(player, p.zone, p.location.x,
                                                p.location.y);
                                    }
                                    break;
                                case 1:
                                    if (p.zone != null) {
                                        ChangeMapService.gI().changeMap(p, player.zone, player.location.x,
                                                player.location.y);
                                    }
                                    break;
                                case 2:
                                    if (p != null) {
                                        Input.gI().createFormChangeName(player, p);
                                    }
                                    break;
                                case 3:
                                    if (p != null) {
                                        String[] selects = new String[]{"ƒê·ªìng √Ω", "H·ªßy"};
                                        NpcService.gI().createMenuConMeo(player, ConstNpc.BAN_PLAYER, -1,
                                                "B·∫°n c√≥ ch·∫Øc ch·∫Øn mu·ªën ban " + p.name, selects, p);
                                    }
                                    break;
                            }
                        }
                        break;
                }
            }
        };
    }

    public static void processGemPurchase(Player player, int requiredVndBar, int gemAmount) {
        if (player.soDuVND >= requiredVndBar) {
            player.inventory.gem += gemAmount;
            player.soDuVND -= requiredVndBar;
            PlayerDAO.subVndBar(player, requiredVndBar);
            Service.getInstance().sendMoney(player);
            Service.getInstance().sendThongBao(player, "B·∫°n c√≥ th√™m " + Util.mumberToLouis(gemAmount) + " ng·ªçc xanh");
        } else {
            Service.getInstance().sendThongBao(player, "B·∫°n kh√¥ng ƒë·ªß s·ªë d∆∞");
        }
    }

    public static void processThoiVangPurchase(Player player, int requiredVndBar, int gemAmount) {
        if (player.soDuVND >= requiredVndBar) {
            player.soDuVND -= requiredVndBar;
            player.soThoiVang += gemAmount;
            PlayerDAO.subVndBar(player, requiredVndBar);
            PlayerDAO.addGoldBar(player, gemAmount);
            Service.getInstance().sendThongBao(player, "B·∫°n c√≥ th√™m " + Util.mumberToLouis(gemAmount) + " th·ªèi v√†ng");
            int soHop = 0;
            switch (requiredVndBar) {
                case 20000:
                    soHop = 1;
                    break;
                case 30000:
                    soHop = 1;
                    break;
                case 50000:
                    soHop = 3;
                    break;
                case 100000:
                    soHop = 6;
                    break;
                case 200000:
                    soHop = 12;
                    break;
                case 500000:
                    soHop = 30;
                case 1000000:
                    soHop = 60;
            }
            Item hopThoiKhong = ItemService.gI().createNewItem((short) 1318, soHop);
            InventoryService.gI().addItemBag(player, hopThoiKhong, 9999);
            InventoryService.gI().sendItemBags(player);
            Service.getInstance().sendThongBao(player, "B·∫°n nh·∫≠n ƒë∆∞·ª£c " + soHop + " " + hopThoiKhong.getName());
            return;

        } else {
            Service.getInstance().sendThongBao(player, "B·∫°n kh√¥ng ƒë·ªß s·ªë d∆∞");
        }
    }

    public static void openMenuSuKien(Player player, Npc npc, int tempId, int select) {
        switch (Manager.EVENT_SEVER) {
            case 0:
                break;
            case 1:// hlw
                switch (select) {
                    case 0:
                        if (InventoryService.gI().getCountEmptyBag(player) > 0) {
                            Item keo = InventoryService.gI().finditemnguyenlieuKeo(player);
                            Item banh = InventoryService.gI().finditemnguyenlieuBanh(player);
                            Item bingo = InventoryService.gI().finditemnguyenlieuBingo(player);

                            if (keo != null && banh != null && bingo != null) {
                                Item GioBingo = ItemService.gI().createNewItem((short) 2016, 1);

                                // - S·ªë item s·ª± ki·ªán c√≥ trong r∆∞∆°ng
                                InventoryService.gI().subQuantityItemsBag(player, keo, 10);
                                InventoryService.gI().subQuantityItemsBag(player, banh, 10);
                                InventoryService.gI().subQuantityItemsBag(player, bingo, 10);

                                GioBingo.itemOptions.add(new ItemOption(74, 0));
                                InventoryService.gI().addItemBag(player, GioBingo, 0);
                                InventoryService.gI().sendItemBags(player);
                                Service.getInstance().sendThongBao(player, "ƒê·ªïi qu√† s·ª± ki·ªán th√†nh c√¥ng");
                            } else {
                                Service.getInstance().sendThongBao(player,
                                        "Vui l√≤ng chu·∫©n b·ªã x10 Nguy√™n Li·ªáu K·∫πo, B√°nh Quy, B√≠ Ng√¥ ƒë·ªÉ ƒë·ªïi v·∫≠t ph·∫©m s·ª± ki·ªán");
                            }
                        } else {
                            Service.getInstance().sendThongBao(player, "H√†nh trang ƒë·∫ßy.");
                        }
                        break;
                    case 1:
                        if (InventoryService.gI().getCountEmptyBag(player) > 0) {
                            Item ve = InventoryService.gI().finditemnguyenlieuVe(player);
                            Item giokeo = InventoryService.gI().finditemnguyenlieuGiokeo(player);

                            if (ve != null && giokeo != null) {
                                Item Hopmaquy = ItemService.gI().createNewItem((short) 2017, 1);
                                // - S·ªë item s·ª± ki·ªán c√≥ trong r∆∞∆°ng
                                InventoryService.gI().subQuantityItemsBag(player, ve, 3);
                                InventoryService.gI().subQuantityItemsBag(player, giokeo, 3);

                                Hopmaquy.itemOptions.add(new ItemOption(74, 0));
                                InventoryService.gI().addItemBag(player, Hopmaquy, 0);
                                InventoryService.gI().sendItemBags(player);
                                Service.getInstance().sendThongBao(player, "ƒê·ªïi qu√† s·ª± ki·ªán th√†nh c√¥ng");
                            } else {
                                Service.getInstance().sendThongBao(player,
                                        "Vui l√≤ng chu·∫©n b·ªã x3 V√© ƒë·ªïi K·∫πo v√† x3 Gi·ªè k·∫πo ƒë·ªÉ ƒë·ªïi v·∫≠t ph·∫©m s·ª± ki·ªán");
                            }
                        } else {
                            Service.getInstance().sendThongBao(player, "H√†nh trang ƒë·∫ßy.");
                        }
                        break;
                    case 2:
                        if (InventoryService.gI().getCountEmptyBag(player) > 0) {
                            Item ve = InventoryService.gI().finditemnguyenlieuVe(player);
                            Item giokeo = InventoryService.gI().finditemnguyenlieuGiokeo(player);
                            Item hopmaquy = InventoryService.gI().finditemnguyenlieuHopmaquy(player);

                            if (ve != null && giokeo != null && hopmaquy != null) {
                                Item HopQuaHLW = ItemService.gI().createNewItem((short) 2012, 1);
                                // - S·ªë item s·ª± ki·ªán c√≥ trong r∆∞∆°ng
                                InventoryService.gI().subQuantityItemsBag(player, ve, 3);
                                InventoryService.gI().subQuantityItemsBag(player, giokeo, 3);
                                InventoryService.gI().subQuantityItemsBag(player, hopmaquy, 3);

                                HopQuaHLW.itemOptions.add(new ItemOption(74, 0));
                                HopQuaHLW.itemOptions.add(new ItemOption(30, 0));
                                InventoryService.gI().addItemBag(player, HopQuaHLW, 0);
                                InventoryService.gI().sendItemBags(player);
                                Service.getInstance().sendThongBao(player,
                                        "ƒê·ªïi qu√† h·ªôp qu√† s·ª± ki·ªán Halloween th√†nh c√¥ng");
                            } else {
                                Service.getInstance().sendThongBao(player,
                                        "Vui l√≤ng chu·∫©n b·ªã x3 H·ªôp Ma Qu·ª∑, x3 V√© ƒë·ªïi K·∫πo v√† x3 Gi·ªè k·∫πo ƒë·ªÉ ƒë·ªïi v·∫≠t ph·∫©m s·ª± ki·ªán");
                            }
                        } else {
                            Service.getInstance().sendThongBao(player, "H√†nh trang ƒë·∫ßy.");
                        }
                        break;
                }
                break;
            case 2:// 20/11
                switch (select) {
                    case 3:
                        if (InventoryService.gI().getCountEmptyBag(player) > 0) {
                            int evPoint = player.event.getEventPoint();
                            if (evPoint >= 999) {
                                Item HopQua = ItemService.gI().createNewItem((short) 2021, 1);
                                player.event.setEventPoint(evPoint - 999);

                                HopQua.itemOptions.add(new ItemOption(74, 0));
                                HopQua.itemOptions.add(new ItemOption(30, 0));
                                InventoryService.gI().addItemBag(player, HopQua, 0);
                                InventoryService.gI().sendItemBags(player);
                                Service.getInstance().sendThongBao(player, "B·∫°n nh·∫≠n ƒë∆∞·ª£c H·ªôp Qu√† Teacher Day");
                            } else {
                                Service.getInstance().sendThongBao(player, "C·∫ßn 999 ƒëi·ªÉm t√≠ch l≈©y ƒë·ªÉ ƒë·ªïi");
                            }
                        } else {
                            Service.getInstance().sendThongBao(player, "H√†nh trang ƒë·∫ßy.");
                        }
                        break;
                    // case 4:
                    // ShopService.gI().openShopSpecial(player, npc, ConstNpc.SHOP_HONG_NGOC, 0,
                    // -1);
                    // break;
                    default:
                        int n = 0;
                        switch (select) {
                            case 0:
                                n = 1;
                                break;
                            case 1:
                                n = 10;
                                break;
                            case 2:
                                n = 99;
                                break;
                        }

                        if (n > 0) {
                            Item bonghoa = InventoryService.gI().finditemBongHoa(player, n);
                            if (bonghoa != null) {
                                int evPoint = player.event.getEventPoint();
                                player.event.setEventPoint(evPoint + n);
                                ;
                                InventoryService.gI().subQuantityItemsBag(player, bonghoa, n);
                                Service.getInstance().sendThongBao(player, "B·∫°n nh·∫≠n ƒë∆∞·ª£c " + n + " ƒëi·ªÉm s·ª± ki·ªán");
                                int pre;
                                int next;
                                String text = null;
                                AttributeManager am = ServerManager.gI().getAttributeManager();
                                switch (tempId) {
                                    case ConstNpc.THAN_MEO_KARIN:
                                        pre = EVENT_COUNT_THAN_MEO / 999;
                                        EVENT_COUNT_THAN_MEO += n;
                                        next = EVENT_COUNT_THAN_MEO / 999;
                                        if (pre != next) {
                                            am.setTime(ConstAttribute.TNSM, 3600);
                                            text = "To√†n b·ªô m√°y ch·ªß tƒÉng ƒë∆∞·ª£c 20% TNSM cho ƒë·ªá t·ª≠ khi ƒë√°nh qu√°i trong 60 ph√∫t.";
                                        }
                                        break;

                                    case ConstNpc.QUY_LAO_KAME:
                                        pre = EVENT_COUNT_QUY_LAO_KAME / 999;
                                        EVENT_COUNT_QUY_LAO_KAME += n;
                                        next = EVENT_COUNT_QUY_LAO_KAME / 999;
                                        if (pre != next) {
                                            am.setTime(ConstAttribute.VANG, 3600);
                                            text = "To√†n b·ªô m√°y ch·ªß ƒë∆∞·ª£c tƒÉng 100% v√†ng t·ª´ qu√°i trong 60 ph√∫t.";
                                        }
                                        break;

                                    case ConstNpc.THUONG_DE:
                                        pre = EVENT_COUNT_THUONG_DE / 999;
                                        EVENT_COUNT_THUONG_DE += n;
                                        next = EVENT_COUNT_THUONG_DE / 999;
                                        if (pre != next) {
                                            am.setTime(ConstAttribute.KI, 3600);
                                            text = "To√†n b·ªô m√°y ch·ªß ƒë∆∞·ª£c tƒÉng 20% KI trong 60 ph√∫t.";
                                        }
                                        break;

                                    case ConstNpc.THAN_VU_TRU:
                                        pre = EVENT_COUNT_THAN_VU_TRU / 999;
                                        EVENT_COUNT_THAN_VU_TRU += n;
                                        next = EVENT_COUNT_THAN_VU_TRU / 999;
                                        if (pre != next) {
                                            am.setTime(ConstAttribute.HP, 3600);
                                            text = "To√†n b·ªô m√°y ch·ªß ƒë∆∞·ª£c tƒÉng 20% HP trong 60 ph√∫t.";
                                        }
                                        break;

                                    case ConstNpc.BILL:
                                        pre = EVENT_COUNT_THAN_HUY_DIET / 999;
                                        EVENT_COUNT_THAN_HUY_DIET += n;
                                        next = EVENT_COUNT_THAN_HUY_DIET / 999;
                                        if (pre != next) {
                                            am.setTime(ConstAttribute.SUC_DANH, 3600);
                                            text = "To√†n b·ªô m√°y ch·ªß ƒë∆∞·ª£c tƒÉng 20% S·ª©c ƒë√°nh trong 60 ph√∫t.";
                                        }
                                        break;
                                }
                                if (text != null) {
                                    Service.getInstance().sendThongBaoAllPlayer(text);
                                }

                            } else {
                                Service.getInstance().sendThongBao(player,
                                        "C·∫ßn √≠t nh·∫•t " + n + " b√¥ng hoa ƒë·ªÉ c√≥ th·ªÉ t·∫∑ng");
                            }
                        } else {
                            Service.getInstance().sendThongBao(player, "C·∫ßn √≠t nh·∫•t " + n + " b√¥ng hoa ƒë·ªÉ c√≥ th·ªÉ t·∫∑ng");
                        }
                }
                break;
            case 3:
                if (InventoryService.gI().getCountEmptyBag(player) > 0) {
                    Item keogiangsinh = InventoryService.gI().finditemKeoGiangSinh(player);

                    if (keogiangsinh != null && keogiangsinh.quantity >= 99) {
                        Item tatgiangsinh = ItemService.gI().createNewItem((short) 649, 1);
                        // - S·ªë item s·ª± ki·ªán c√≥ trong r∆∞∆°ng
                        InventoryService.gI().subQuantityItemsBag(player, keogiangsinh, 99);

                        tatgiangsinh.itemOptions.add(new ItemOption(74, 0));
                        tatgiangsinh.itemOptions.add(new ItemOption(30, 0));
                        InventoryService.gI().addItemBag(player, tatgiangsinh, 0);
                        InventoryService.gI().sendItemBags(player);
                        Service.getInstance().sendThongBao(player, "B·∫°n nh·∫≠n ƒë∆∞·ª£c T·∫•t,v·ªõ gi√°ng sinh");
                    } else {
                        Service.getInstance().sendThongBao(player,
                                "Vui l√≤ng chu·∫©n b·ªã x99 k·∫πo gi√°ng sinh ƒë·ªÉ ƒë·ªïi v·ªõ t·∫•t gi√°ng sinh");
                    }
                } else {
                    Service.getInstance().sendThongBao(player, "H√†nh trang ƒë·∫ßy.");
                }
                break;
            case 4:
                switch (select) {
                    case 0:
                        if (!player.event.isReceivedLuckyMoney()) {
                            Calendar cal = Calendar.getInstance();
                            int day = cal.get(Calendar.DAY_OF_MONTH);
                            if (day >= 22 && day <= 24) {
                                Item goldBar = ItemService.gI().createNewItem((short) ConstItem.THOI_VANG,
                                        Util.nextInt(1, 3));
                                player.inventory.ruby += Util.nextInt(10, 30);
                                goldBar.quantity = Util.nextInt(1, 3);
                                InventoryService.gI().addItemBag(player, goldBar, 99999);
                                InventoryService.gI().sendItemBags(player);
                                PlayerService.gI().sendInfoHpMpMoney(player);
                                player.event.setReceivedLuckyMoney(true);
                                Service.getInstance().sendThongBao(player,
                                        "Nh·∫≠n l√¨ x√¨ th√†nh c√¥ng,ch√∫c b·∫°n nƒÉm m·ªõi dui d·∫ª");
                            } else if (day > 24) {
                                Service.getInstance().sendThongBao(player, "H·∫øt t·∫øt r·ªìi c√≤n ƒë√≤i l√¨ x√¨");
                            } else {
                                Service.getInstance().sendThongBao(player, "ƒê√£ t·∫øt ƒë√¢u m√† ƒë√≤i l√¨ x√¨");
                            }
                        } else {
                            Service.getInstance().sendThongBao(player, "B·∫°n ƒë√£ nh·∫≠n l√¨ x√¨ r·ªìi");
                        }
                        break;
                    case 1:
                        ShopService.gI().openShopNormal(player, npc, ConstNpc.SHOP_SU_KIEN_TET, 1, -1);
                        break;
                }
                break;
            case ConstEvent.SU_KIEN_8_3:
                switch (select) {
                    case 3:
                        if (InventoryService.gI().getCountEmptyBag(player) > 0) {
                            int evPoint = player.event.getEventPoint();
                            if (evPoint >= 999) {
                                Item capsule = ItemService.gI().createNewItem((short) 2052, 1);
                                player.event.setEventPoint(evPoint - 999);

                                capsule.itemOptions.add(new ItemOption(74, 0));
                                capsule.itemOptions.add(new ItemOption(30, 0));
                                InventoryService.gI().addItemBag(player, capsule, 0);
                                InventoryService.gI().sendItemBags(player);
                                Service.getInstance().sendThongBao(player, "B·∫°n nh·∫≠n ƒë∆∞·ª£c Capsule H·ªìng");
                            } else {
                                Service.getInstance().sendThongBao(player, "C·∫ßn 999 ƒëi·ªÉm t√≠ch l≈©y ƒë·ªÉ ƒë·ªïi");
                            }
                        } else {
                            Service.getInstance().sendThongBao(player, "H√†nh trang ƒë·∫ßy.");
                        }
                        break;
                    default:
                        int n = 0;
                        switch (select) {
                            case 0:
                                n = 1;
                                break;
                            case 1:
                                n = 10;
                                break;
                            case 2:
                                n = 99;
                                break;
                        }

                        if (n > 0) {
                            Item bonghoa = InventoryService.gI().finditemBongHoa(player, n);
                            if (bonghoa != null) {
                                int evPoint = player.event.getEventPoint();
                                player.event.setEventPoint(evPoint + n);
                                InventoryService.gI().subQuantityItemsBag(player, bonghoa, n);
                                Service.getInstance().sendThongBao(player, "B·∫°n nh·∫≠n ƒë∆∞·ª£c " + n + " ƒëi·ªÉm s·ª± ki·ªán");
                            } else {
                                Service.getInstance().sendThongBao(player,
                                        "C·∫ßn √≠t nh·∫•t " + n + " b√¥ng hoa ƒë·ªÉ c√≥ th·ªÉ t·∫∑ng");
                            }
                        } else {
                            Service.getInstance().sendThongBao(player, "C·∫ßn √≠t nh·∫•t " + n + " b√¥ng hoa ƒë·ªÉ c√≥ th·ªÉ t·∫∑ng");
                        }
                }
                break;
        }
    }

    public static String getMenuSuKien(int id) {
        switch (id) {
            case ConstEvent.KHONG_CO_SU_KIEN:
                return "Ch∆∞a c√≥\n S·ª± Ki·ªán";
            case ConstEvent.SU_KIEN_HALLOWEEN:
                return "S·ª± Ki·ªán\nHaloween";
            case ConstEvent.SU_KIEN_20_11:
                return "S·ª± Ki·ªán\n 20/11";
            case ConstEvent.SU_KIEN_NOEL:
                return "S·ª± Ki·ªán\n Gi√°ng Sinh";
            case ConstEvent.SU_KIEN_TET:
                return "S·ª± Ki·ªán\n T·∫øt Nguy√™n\nƒê√°n 2023";
            case ConstEvent.SU_KIEN_8_3:
                return "S·ª± Ki·ªán\n 8/3";
        }
        return "Ch∆∞a c√≥\n S·ª± Ki·ªán";
    }

    public static String getMenuLamBanh(Player player, int type) {
        switch (type) {
            case 0:// b√°nh t√©t
                if (player.event.isCookingTetCake()) {
                    int timeCookTetCake = player.event.getTimeCookTetCake();
                    if (timeCookTetCake == 0) {
                        return "L·∫•y b√°nh";
                    } else if (timeCookTetCake > 0) {
                        return "ƒêang n·∫•u\nB√°nh T√©t\nC√≤n " + TimeUtil.secToTime(timeCookTetCake);
                    }
                } else {
                    return "N·∫•u\nB√°nh T√©t";
                }
                break;
            case 1:// b√°nh ch∆∞ng
                if (player.event.isCookingChungCake()) {
                    int timeCookChungCake = player.event.getTimeCookChungCake();
                    if (timeCookChungCake == 0) {
                        return "L·∫•y b√°nh";
                    } else if (timeCookChungCake > 0) {
                        return "ƒêang n·∫•u\nB√°nh Ch∆∞ng\nC√≤n " + TimeUtil.secToTime(timeCookChungCake);
                    }
                } else {
                    return "N·∫•u\nB√°nh Ch∆∞ng";
                }
                break;
        }
        return "";
    }

}
